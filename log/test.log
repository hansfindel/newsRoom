Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003471d44b6a878000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003b11d44b6a87a000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000003'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000006'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000005'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (26ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:23:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.6ms)
Completed 200 OK in 130ms (Views: 129.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (6.5ms)
  Rendered articles/_form.html.erb (59.9ms)
Completed 500 Internal Server Error in 105ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (40.9ms)
Completed 500 Internal Server Error in 42ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.7ms)
Completed 200 OK in 88ms (Views: 87.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (27.6ms)
Completed 500 Internal Server Error in 73ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (7.7ms)
Completed 500 Internal Server Error in 9ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a00cec1d44b6a8b7000001'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWe", "password_hash"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWezIcn0Oobj2fKbF7/hxAgpwOX6lLPEHq"}])
MONGODB (36ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.5ms)
Completed 200 OK in 121ms (Views: 120.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (40.4ms)
  Rendered articles/_form.html.erb (73.6ms)
Completed 500 Internal Server Error in 118ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:41:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (87.7ms)
Completed 200 OK in 453ms (Views: 452.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:41:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:41:59 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (114.0ms)
  Rendered articles/_form.html.erb (180.1ms)
Completed 500 Internal Server Error in 403ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:42:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (64.8ms)
Completed 200 OK in 185ms (Views: 184.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.3ms)
  Rendered articles/_form.html.erb (27.0ms)
Completed 500 Internal Server Error in 92ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (40.4ms)
Completed 500 Internal Server Error in 41ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (12.0ms)
Completed 200 OK in 50ms (Views: 49.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (37.1ms)
  Rendered articles/_form.html.erb (44.9ms)
Completed 500 Internal Server Error in 49ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.8ms)
Completed 200 OK in 53ms (Views: 53.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 17ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (39.4ms)
Completed 500 Internal Server Error in 40ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.2ms)
Completed 200 OK in 54ms (Views: 53.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (38.6ms)
  Rendered articles/_form.html.erb (56.5ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.5ms)
Completed 200 OK in 53ms (Views: 52.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.5ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 16ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.5ms)
Completed 500 Internal Server Error in 39ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000003'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (10.6ms)
Completed 200 OK in 50ms (Views: 49.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.0ms)
  Rendered articles/_form.html.erb (47.1ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000002'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.1ms)
Completed 200 OK in 50ms (Views: 49.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 27ms (Views: 27.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.7ms)
  Rendered articles/_form.html.erb (47.4ms)
Completed 500 Internal Server Error in 52ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.5ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (58.3ms)
Completed 500 Internal Server Error in 72ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 44ms (Views: 43.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 6.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (51.0ms)
Completed 500 Internal Server Error in 64ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 59ms (Views: 58.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000e'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:09 -0300
Processing by ArticlesController#new as HTML
MONGODB (24ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (82.5ms)
  Rendered articles/new.html.erb within layouts/application (87.1ms)
Completed 500 Internal Server Error in 96ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d5000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 45ms (Views: 44.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (45.4ms)
Completed 500 Internal Server Error in 60ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d7000007'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 46ms (Views: 45.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (16.3ms)
Completed 200 OK in 70ms (Views: 69.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 9ms (Views: 8.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (65.0ms)
Completed 500 Internal Server Error in 70ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a014291d44b6a8db000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (15.9ms)
Completed 200 OK in 55ms (Views: 54.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 10ms (Views: 9.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a014291d44b6a8db000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a014291d44b6a8db000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a014291d44b6a8db000008" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a014291d44b6a8db000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a014291d44b6a8db000008')}).limit(-1)
Completed 200 OK in 18ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.1ms)
  Rendered articles/_form.html.erb (51.7ms)
Completed 500 Internal Server Error in 58ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (18.3ms)
Completed 200 OK in 58ms (Views: 58.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 11ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (56.4ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (54.3ms)
Completed 200 OK in 95ms (Views: 94.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (49.2ms)
Completed 500 Internal Server Error in 54ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.8ms)
  Rendered articles/_form.html.erb (46.5ms)
  Rendered articles/new.html.erb within layouts/application (50.9ms)
Completed 500 Internal Server Error in 60ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000004'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 51ms (Views: 50.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 13ms (Views: 12.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000007'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.0ms)
Completed 200 OK in 81ms (Views: 80.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 42ms (Views: 41.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (46.9ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.6ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.2ms)
Completed 200 OK in 60ms (Views: 59.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 43ms (Views: 42.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016171d44b6a8e7000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016171d44b6a8e7000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.3ms)
  Rendered articles/_form.html.erb (12.4ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016701d44b6a8e9000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016701d44b6a8e9000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016701d44b6a8e9000001" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016701d44b6a8e9000001"}
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016701d44b6a8e9000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (12.3ms)
Completed 200 OK in 76ms (Views: 65.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (37.7ms)
Completed 500 Internal Server Error in 43ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.2ms)
Completed 500 Internal Server Error in 39ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000005'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e900000a'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016da1d44b6a8eb000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016da1d44b6a8eb000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016da1d44b6a8eb000001" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016da1d44b6a8eb000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016da1d44b6a8eb000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (8.0ms)
Completed 200 OK in 47ms (Views: 46.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 19ms (Views: 18.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.9ms)
Completed 200 OK in 48ms (Views: 38.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a016db1d44b6a8eb000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016db1d44b6a8eb000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016db1d44b6a8eb000006" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016db1d44b6a8eb000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016db1d44b6a8eb000006')}).limit(-1)
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 17ms (Views: 17.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 50ms (Views: 50.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (22.4ms)
Completed 200 OK in 62ms (Views: 61.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (20ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 72ms (Views: 72.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.8ms)
Completed 200 OK in 49ms (Views: 48.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a017041d44b6a8ed000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed000009
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed000009" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed000009')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a017041d44b6a8ed00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed00000b
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed00000b" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed00000b')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.2ms)
  Rendered articles/new.html.erb within layouts/application (48.8ms)
Completed 200 OK in 60ms (Views: 58.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000002'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000002
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000002" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (7.0ms)
Completed 200 OK in 10ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000004
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000004" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000004')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (37.9ms)
Completed 200 OK in 40ms (Views: 39.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 19ms (Views: 18.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.6ms)
  Rendered articles/new.html.erb within layouts/application (48.4ms)
Completed 200 OK in 59ms (Views: 57.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
  Rendered articles/new.html.erb within layouts/application (6.4ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.2ms)
Completed 200 OK in 38ms (Views: 38.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000004" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000006" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000006"}
MONGODB (25ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000006')}).limit(-1)
Completed 200 OK in 30ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f1000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000c'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (119.4ms)
  Rendered articles/new.html.erb within layouts/application (188.6ms)
Completed 200 OK in 259ms (Views: 257.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a026ae898d65157c000002'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a026ae898d65157c000002
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a026ae898d65157c000002" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a026ae898d65157c000002"}
MONGODB (285ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a026ae898d65157c000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (131.4ms)
Completed 500 Internal Server Error in 429ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a026af898d65157c000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a026af898d65157c000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a026af898d65157c000004" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a026af898d65157c000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a026af898d65157c000004')}).limit(-1)
Completed 500 Internal Server Error in 4ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.9ms)
Completed 200 OK in 10ms (Views: 9.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.7ms)
Completed 200 OK in 43ms (Views: 41.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 500 Internal Server Error in 15ms


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 500 Internal Server Error in 13ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c00000b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a026af898d65157c00000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a02ccf898d65196a000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a02ccf898d65196a000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a02ccf898d65196a000001" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a02ccf898d65196a000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a02ccf898d65196a000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (53.9ms)
Completed 200 OK in 146ms (Views: 144.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (23.4ms)
Completed 200 OK in 78ms (Views: 77.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.8ms)
Completed 200 OK in 46ms (Views: 44.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (9.5ms)
Completed 200 OK in 14ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a02ccf898d65196a000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a02ccf898d65196a000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a02ccf898d65196a000006" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a02ccf898d65196a000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a02ccf898d65196a000006')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 10ms (Views: 9.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a00000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a02ccf898d65196a00000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 23:45:24 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (56.7ms)
Completed 200 OK in 131ms (Views: 129.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062c41d41c81ca2000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 23:45:24 -0300
Processing by ArticlesController#index as HTML
MONGODB (9804ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 9904ms (Views: 9903.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (85.3ms)
Completed 200 OK in 97ms (Views: 95.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (14.5ms)
Completed 200 OK in 22ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.8ms)
Completed 200 OK in 19ms (Views: 17.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a062cf1d41c81ca2000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a062cf1d41c81ca2000007
Completed 302 Found in 67ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a062cf1d41c81ca2000007" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a062cf1d41c81ca2000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a062cf1d41c81ca2000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a062cf1d41c81ca2000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a062cf1d41c81ca2000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a062cf1d41c81ca2000009" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a062cf1d41c81ca2000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a062cf1d41c81ca2000009')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:57:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (398ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (477.6ms)
Completed 200 OK in 599ms (Views: 598.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100591d41c818d0000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:57:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1005a1d41c818d0000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1005a1d41c818d0000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1005a1d41c818d0000004" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1005a1d41c818d0000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1005a1d41c818d0000004')}).limit(-1)
Completed 200 OK in 14ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (93.3ms)
Completed 200 OK in 105ms (Views: 103.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1005a1d41c818d0000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1005a1d41c818d0000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1005a1d41c818d0000007" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1005a1d41c818d0000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1005a1d41c818d0000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.5ms)
Completed 200 OK in 76ms (Views: 73.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1005a1d41c818d000000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1005a1d41c818d000000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1005a1d41c818d000000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100951d41c818d6000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a100951d41c818d6000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100951d41c818d6000003'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:58:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (74.1ms)
Completed 200 OK in 145ms (Views: 143.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100961d41c818d6000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (16.8ms)
Completed 200 OK in 86ms (Views: 84.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.0ms)
Completed 200 OK in 23ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a100961d41c818d600000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a100961d41c818d600000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a100961d41c818d600000b" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a100961d41c818d600000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a100961d41c818d600000b')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a100961d41c818d600000d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a100961d41c818d600000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a100961d41c818d600000d" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a100961d41c818d600000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a100961d41c818d600000d')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b51d41c818fe000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b51d41c818fe000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a101b51d41c818fe000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (88.0ms)
Completed 200 OK in 160ms (Views: 158.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b61d41c818fe000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 17ms (Views: 16.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 85ms (Views: 84.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a101b61d41c818fe000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a101b61d41c818fe000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a101b61d41c818fe000009" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a101b61d41c818fe000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a101b61d41c818fe000009')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a101b61d41c818fe00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a101b61d41c818fe00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a101b61d41c818fe00000b" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a101b61d41c818fe00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a101b61d41c818fe00000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.4ms)
Completed 200 OK in 76ms (Views: 74.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a101b61d41c818fe00000f'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$nI721bKnaB/Z.KVVBnL/me", "password_hash"=>"$2a$10$nI721bKnaB/Z.KVVBnL/meeRSXVrv3sfa6We8dd5dXrDaYesfJeRW"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com", :_id=>{"$ne"=>BSON::ObjectId('50a101b61d41c818fe00000f')}}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029d1d41c81914000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1029d1d41c81914000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029d1d41c81914000006'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:07:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (78.4ms)
Completed 200 OK in 148ms (Views: 147.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029e1d41c81914000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 70ms (Views: 69.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 85ms (Views: 83.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1029e1d41c8191400000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1029e1d41c8191400000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1029e1d41c8191400000e" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1029e1d41c8191400000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1029e1d41c8191400000e')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1029e1d41c81914000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1029e1d41c81914000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1029e1d41c81914000010" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1029e1d41c81914000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1029e1d41c81914000010')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (146.4ms)
Completed 200 OK in 216ms (Views: 215.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e01d41c81931000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 19ms (Views: 18.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a102e01d41c81931000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a102e01d41c81931000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a102e01d41c81931000004" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a102e01d41c81931000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a102e01d41c81931000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.4ms)
Completed 200 OK in 90ms (Views: 89.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a102e01d41c81931000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a102e01d41c81931000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a102e01d41c81931000007" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a102e01d41c81931000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a102e01d41c81931000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.5ms)
Completed 200 OK in 77ms (Views: 74.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e11d41c8193100000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e11d41c8193100000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a102e11d41c8193100000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:10:54 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (145.3ms)
Completed 200 OK in 215ms (Views: 213.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1036f1d41c8193b000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 27ms (Views: 26.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1036f1d41c8193b000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1036f1d41c8193b000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1036f1d41c8193b000004" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1036f1d41c8193b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1036f1d41c8193b000004')}).limit(-1)
Completed 200 OK in 15ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (78.3ms)
Completed 200 OK in 89ms (Views: 88.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1036f1d41c8193b000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1036f1d41c8193b000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1036f1d41c8193b000007" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1036f1d41c8193b000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1036f1d41c8193b000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.3ms)
Completed 200 OK in 77ms (Views: 74.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1036f1d41c8193b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a103701d41c8193b00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a103701d41c8193b00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039c1d41c81941000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039c1d41c81941000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1039c1d41c81941000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:11:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (105.5ms)
Completed 200 OK in 193ms (Views: 191.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039d1d41c81941000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 96ms (Views: 95.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (21.0ms)
Completed 200 OK in 101ms (Views: 99.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1039d1d41c8194100000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1039d1d41c8194100000b
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1039d1d41c8194100000b" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1039d1d41c8194100000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1039d1d41c8194100000b')}).limit(-1)
Completed 200 OK in 15ms (Views: 11.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (12.5ms)
Completed 200 OK in 76ms (Views: 75.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1039d1d41c8194100000f'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1039d1d41c8194100000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1039d1d41c8194100000f" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1039d1d41c8194100000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1039d1d41c8194100000f')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (17.3ms)
  Rendered articles/new.html.erb within layouts/application (83.2ms)
Completed 200 OK in 161ms (Views: 159.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (14.0ms)
  Rendered articles/new.html.erb within layouts/application (14.7ms)
Completed 200 OK in 20ms (Views: 17.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a104911d41c8194c000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a104911d41c8194c000007
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a104911d41c8194c000007" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a104911d41c8194c000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a104911d41c8194c000007')}).limit(-1)
Completed 200 OK in 17ms (Views: 15.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a104921d41c8194c00000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a104921d41c8194c00000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a104921d41c8194c00000a" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a104921d41c8194c00000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a104921d41c8194c00000a')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c00000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 89ms (Views: 87.8ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 28ms (Views: 27.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c00000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a104921d41c8194c00000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c000011'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b81d41c819a7000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a106b81d41c819a7000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b81d41c819a7000006'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:24:56 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (21.1ms)
  Rendered articles/new.html.erb within layouts/application (88.3ms)
Completed 200 OK in 172ms (Views: 170.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (70.5ms)
  Rendered articles/new.html.erb within layouts/application (71.2ms)
Completed 200 OK in 77ms (Views: 74.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a106b91d41c819a700000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a106b91d41c819a700000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a106b91d41c819a700000c" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a106b91d41c819a700000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a106b91d41c819a700000c')}).limit(-1)
Completed 200 OK in 79ms (Views: 76.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a106b91d41c819a700000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a106b91d41c819a700000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a106b91d41c819a700000e" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a106b91d41c819a700000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a106b91d41c819a700000e')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b91d41c819a7000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 34ms (Views: 33.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 31ms (Views: 30.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:26:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (106.9ms)
Completed 200 OK in 229ms (Views: 228.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107271d41c819b1000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:26:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 86ms (Views: 85.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a107281d41c819b1000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107281d41c819b1000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107281d41c819b1000004" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107281d41c819b1000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107281d41c819b1000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (70.9ms)
Completed 200 OK in 145ms (Views: 144.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a107281d41c819b1000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107281d41c819b1000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107281d41c819b1000007" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107281d41c819b1000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107281d41c819b1000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.1ms)
Completed 200 OK in 73ms (Views: 72.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 16ms (Views: 14.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107281d41c819b100000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107281d41c819b100000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a107281d41c819b100000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107df1d41c819b9000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a107df1d41c819b9000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107e01d41c819b9000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (104.4ms)
Completed 200 OK in 178ms (Views: 177.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107e01d41c819b900000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 35ms (Views: 34.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (17.1ms)
Completed 200 OK in 28ms (Views: 26.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (70.6ms)
Completed 200 OK in 77ms (Views: 74.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a107e11d41c819b9000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107e11d41c819b9000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107e11d41c819b9000010" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107e11d41c819b9000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107e11d41c819b9000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a107e11d41c819b9000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107e11d41c819b9000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107e11d41c819b9000012" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107e11d41c819b9000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107e11d41c819b9000012')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108181d41c819c0000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a108181d41c819c0000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108181d41c819c0000009'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:30:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (108.8ms)
Completed 200 OK in 184ms (Views: 182.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108191d41c819c000000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 38ms (Views: 37.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 27ms (Views: 25.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (71.0ms)
Completed 200 OK in 77ms (Views: 74.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a108191d41c819c0000011'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108191d41c819c0000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108191d41c819c0000011" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108191d41c819c0000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108191d41c819c0000011')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a108191d41c819c0000013'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108191d41c819c0000013
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108191d41c819c0000013" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108191d41c819c0000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108191d41c819c0000013')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083c1d41c819c7000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1083c1d41c819c7000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083c1d41c819c7000008'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:31:24 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.1ms)
  Rendered articles/_form.html.erb (23.7ms)
  Rendered articles/new.html.erb within layouts/application (89.4ms)
Completed 200 OK in 169ms (Views: 167.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.9ms)
  Rendered articles/new.html.erb within layouts/application (72.0ms)
Completed 200 OK in 78ms (Views: 75.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1083d1d41c819c700000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1083d1d41c819c700000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1083d1d41c819c700000e" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1083d1d41c819c700000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1083d1d41c819c700000e')}).limit(-1)
Completed 200 OK in 76ms (Views: 74.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1083d1d41c819c7000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1083d1d41c819c7000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1083d1d41c819c7000010" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1083d1d41c819c7000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1083d1d41c819c7000010')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083d1d41c819c7000012'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 43ms (Views: 42.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 42ms (Views: 41.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108da1d41c819ee000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108da1d41c819ee000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a108da1d41c819ee000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:34:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (172.5ms)
Completed 200 OK in 246ms (Views: 245.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108db1d41c819ee000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 49ms (Views: 48.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (18.1ms)
Completed 200 OK in 29ms (Views: 28.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a108db1d41c819ee000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108db1d41c819ee000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108db1d41c819ee000009" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108db1d41c819ee000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108db1d41c819ee000009')}).limit(-1)
Completed 200 OK in 14ms (Views: 11.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a108db1d41c819ee00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108db1d41c819ee00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108db1d41c819ee00000b" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108db1d41c819ee00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108db1d41c819ee00000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 15ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 85ms (Views: 82.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:39:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (115.8ms)
Completed 200 OK in 236ms (Views: 235.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 44ms (Views: 43.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10a251d41c819fe000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a251d41c819fe000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a251d41c819fe000004" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a251d41c819fe000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a251d41c819fe000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (22.3ms)
Completed 200 OK in 32ms (Views: 31.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10a251d41c819fe000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a251d41c819fe000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a251d41c819fe000007" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a251d41c819fe000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a251d41c819fe000007')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10a251d41c819fe00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a10a261d41c819fe000012'), "name"=>"user", "email"=>"user2@example.com", "role"=>"reader", "password_salt"=>"$2a$10$pX7meHIyT99pC2i.gjPBKe", "password_hash"=>"$2a$10$pX7meHIyT99pC2i.gjPBKeTTOmW8lJwS3dSRTm2EaNwaiI2.Yed8e"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10a511d41c81a04000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a511d41c81a04000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a511d41c81a04000001" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a511d41c81a04000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a511d41c81a04000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (71.3ms)
Completed 200 OK in 211ms (Views: 208.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.9ms)
Completed 200 OK in 98ms (Views: 96.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10a521d41c81a04000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a521d41c81a04000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a521d41c81a04000004" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a521d41c81a04000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a521d41c81a04000004')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.4ms)
Completed 200 OK in 76ms (Views: 75.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (20.3ms)
Completed 200 OK in 31ms (Views: 27.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a04000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (66ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 120ms (Views: 119.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a0400000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a0400000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10a521d41c81a0400000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:42:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (112.3ms)
Completed 200 OK in 237ms (Views: 236.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acc1d41c81a0b00000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 55ms (Views: 54.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.1ms)
Completed 200 OK in 26ms (Views: 24.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10acc1d41c81a0b000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10acc1d41c81a0b000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10acc1d41c81a0b000010" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10acc1d41c81a0b000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10acc1d41c81a0b000010')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10acc1d41c81a0b000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10acc1d41c81a0b000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10acc1d41c81a0b000012" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10acc1d41c81a0b000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10acc1d41c81a0b000012')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10be81d41c81a3d000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10be81d41c81a3d000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10be81d41c81a3d000001" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10be81d41c81a3d000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10be81d41c81a3d000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (64.8ms)
Completed 200 OK in 189ms (Views: 185.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.6ms)
Completed 200 OK in 90ms (Views: 88.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.0ms)
Completed 200 OK in 72ms (Views: 70.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10be91d41c81a3d000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10be91d41c81a3d000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10be91d41c81a3d000006" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10be91d41c81a3d000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10be91d41c81a3d000006')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 75ms (Views: 74.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 58ms (Views: 57.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10be91d41c81a3d000011')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000012'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (125.0ms)
Completed 200 OK in 247ms (Views: 246.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce71d41c81a74000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 59ms (Views: 58.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10ce71d41c81a74000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ce71d41c81a74000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ce71d41c81a74000004" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ce71d41c81a74000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ce71d41c81a74000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (22.6ms)
Completed 200 OK in 35ms (Views: 34.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10ce81d41c81a74000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ce81d41c81a74000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ce81d41c81a74000007" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ce81d41c81a74000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ce81d41c81a74000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 18ms (Views: 16.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a79000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10d071d41c81a79000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a79000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3537074768309839405
  Rendered articles/index.html.erb within layouts/application (184.8ms)
Completed 200 OK in 256ms (Views: 255.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a7900000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4626199795069544176
Completed 200 OK in 74ms (Views: 73.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (73.7ms)
Completed 200 OK in 84ms (Views: 82.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.7ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10d081d41c81a79000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10d081d41c81a79000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10d081d41c81a79000010" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10d081d41c81a79000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10d081d41c81a79000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10d081d41c81a79000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10d081d41c81a79000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10d081d41c81a79000012" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10d081d41c81a79000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10d081d41c81a79000012')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6504199976395032023
  Rendered articles/index.html.erb within layouts/application (154.2ms)
Completed 200 OK in 289ms (Views: 288.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ea91d41c81ae7000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 760167988113524428
Completed 200 OK in 84ms (Views: 83.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10ea91d41c81ae7000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ea91d41c81ae7000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ea91d41c81ae7000004" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ea91d41c81ae7000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ea91d41c81ae7000004')}).limit(-1)
Completed 200 OK in 13ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.2ms)
  Rendered articles/_form.html.erb (99.0ms)
Completed 200 OK in 117ms (Views: 115.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10eaa1d41c81ae7000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10eaa1d41c81ae7000007
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10eaa1d41c81ae7000007" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10eaa1d41c81ae7000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10eaa1d41c81ae7000007')}).limit(-1)
Completed 200 OK in 7ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 17ms (Views: 16.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (89.9ms)
Completed 200 OK in 96ms (Views: 93.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10f4b1d41c81b56000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f4b1d41c81b56000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f4b1d41c81b56000001" for 127.0.0.1 at 2012-11-12 12:01:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f4b1d41c81b56000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f4b1d41c81b56000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (66.4ms)
Completed 200 OK in 190ms (Views: 187.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 32ms (Views: 31.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10f4c1d41c81b56000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f4c1d41c81b56000004
Completed 302 Found in 60ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f4c1d41c81b56000004" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f4c1d41c81b56000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f4c1d41c81b56000004')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1145957610091168509
Completed 200 OK in 66ms (Views: 65.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9180688634505052994
Completed 200 OK in 127ms (Views: 126.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b5600000c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b5600000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (79.7ms)
  Rendered articles/new.html.erb within layouts/application (88.7ms)
Completed 200 OK in 226ms (Views: 166.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10f851d41c81b5c000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f851d41c81b5c000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f851d41c81b5c000004" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f851d41c81b5c000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f851d41c81b5c000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (74.9ms)
Completed 200 OK in 80ms (Views: 78.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10f851d41c81b5c000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f851d41c81b5c000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f851d41c81b5c000006" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f851d41c81b5c000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f851d41c81b5c000006')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c00000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3386237866222068741
Completed 200 OK in 68ms (Views: 67.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1637006757255750734
Completed 200 OK in 134ms (Views: 133.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10f861d41c81b5c000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b63000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b63000008'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10fc51d41c81b63000008')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b6300000b'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4159746388011621501
  Rendered articles/index.html.erb within layouts/application (183.1ms)
Completed 200 OK in 254ms (Views: 252.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b6300000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2537706771261529407
Completed 200 OK in 124ms (Views: 123.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.6ms)
Completed 200 OK in 85ms (Views: 83.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10fc61d41c81b63000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10fc61d41c81b63000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10fc61d41c81b63000011" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10fc61d41c81b63000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10fc61d41c81b63000011')}).limit(-1)
Completed 200 OK in 67ms (Views: 65.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.6ms)
Completed 200 OK in 20ms (Views: 19.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10fc61d41c81b63000014'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10fc61d41c81b63000014
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10fc61d41c81b63000014" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10fc61d41c81b63000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10fc61d41c81b63000014')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:06:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7629069679497576181
  Rendered articles/index.html.erb within layouts/application (200.7ms)
Completed 200 OK in 275ms (Views: 274.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f000003'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2574766119913521102
Completed 200 OK in 69ms (Views: 68.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.2ms)
Completed 200 OK in 90ms (Views: 89.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a110621d41c81b8f000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110621d41c81b8f000006
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110621d41c81b8f000006" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110621d41c81b8f000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110621d41c81b8f000006')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a110621d41c81b8f000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110621d41c81b8f000008
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110621d41c81b8f000008" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110621d41c81b8f000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110621d41c81b8f000008')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.6ms)
Completed 200 OK in 77ms (Views: 74.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f00000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a110621d41c81b8f00000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000001'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:08:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.8ms)
  Rendered articles/new.html.erb within layouts/application (84.3ms)
Completed 200 OK in 160ms (Views: 159.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a110ef1d41c81bcb00000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110ef1d41c81bcb00000d
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110ef1d41c81bcb00000d" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110ef1d41c81bcb00000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110ef1d41c81bcb00000d')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (11.8ms)
Completed 200 OK in 18ms (Views: 15.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (72.2ms)
Completed 200 OK in 79ms (Views: 78.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 18ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a110ef1d41c81bcb000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110ef1d41c81bcb000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110ef1d41c81bcb000011" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110ef1d41c81bcb000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110ef1d41c81bcb000011')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ef1d41c81bcb000013'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1990040974359406578
Completed 200 OK in 85ms (Views: 84.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4540558340461832267
Completed 200 OK in 166ms (Views: 165.5ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:09:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3094436048670494844
  Rendered articles/index.html.erb within layouts/application (198.3ms)
Completed 200 OK in 268ms (Views: 266.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112b1d41c81bd1000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6717599017090093338
Completed 200 OK in 132ms (Views: 131.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (21.0ms)
Completed 200 OK in 95ms (Views: 93.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1112b1d41c81bd1000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1112b1d41c81bd1000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1112b1d41c81bd1000009" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1112b1d41c81bd1000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1112b1d41c81bd1000009')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1112b1d41c81bd100000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1112b1d41c81bd100000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1112b1d41c81bd100000b" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1112b1d41c81bd100000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1112b1d41c81bd100000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.3ms)
Completed 200 OK in 73ms (Views: 72.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000005'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000006')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8179580733320056995
  Rendered articles/index.html.erb within layouts/application (198.3ms)
Completed 200 OK in 268ms (Views: 266.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9003200403783537012
Completed 200 OK in 139ms (Views: 138.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1115c1d41c81bd900000a'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1115c1d41c81bd900000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1115c1d41c81bd900000a" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1115c1d41c81bd900000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1115c1d41c81bd900000a')}).limit(-1)
Completed 200 OK in 12ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 87ms (Views: 86.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1115d1d41c81bd900000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1115d1d41c81bd900000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1115d1d41c81bd900000d" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1115d1d41c81bd900000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1115d1d41c81bd900000d')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.8ms)
Completed 200 OK in 74ms (Views: 73.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8082065515204066866
  Rendered articles/index.html.erb within layouts/application (154.5ms)
Completed 200 OK in 275ms (Views: 273.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111781d41c81bde000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6568385028524097297
Completed 200 OK in 154ms (Views: 152.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a111781d41c81bde000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a111781d41c81bde000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a111781d41c81bde000004" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a111781d41c81bde000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a111781d41c81bde000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.9ms)
Completed 200 OK in 92ms (Views: 90.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 17ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a111791d41c81bde000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a111791d41c81bde000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a111791d41c81bde000009" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a111791d41c81bde000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a111791d41c81bde000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111791d41c81bde000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a111791d41c81bde000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111791d41c81bde000015'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113471d41c81bf5000004'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113471d41c81bf5000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a113471d41c81bf5000006')}, {"$set"=>{"deck"=>"it is an article"}})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a113471d41c81bf5000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a113471d41c81bf5000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a113471d41c81bf5000007" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a113471d41c81bf5000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a113471d41c81bf5000007')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (67.7ms)
Completed 200 OK in 143ms (Views: 140.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (73.3ms)
Completed 200 OK in 84ms (Views: 82.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a113481d41c81bf500000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a113481d41c81bf500000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a113481d41c81bf500000a" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a113481d41c81bf500000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a113481d41c81bf500000a')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.3ms)
Completed 200 OK in 77ms (Views: 74.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113481d41c81bf500000e'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9117926668251648716
Completed 200 OK in 93ms (Views: 91.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 148765787072713517
Completed 200 OK in 162ms (Views: 161.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000007'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"category", "_id"=>BSON::ObjectId('50a1138a1d41c81bfc00000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:19:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.3ms)
  Rendered articles/new.html.erb within layouts/application (80.0ms)
Completed 200 OK in 158ms (Views: 156.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
  Rendered articles/new.html.erb within layouts/application (12.2ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1138b1d41c81bfc00000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1138b1d41c81bfc00000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1138b1d41c81bfc00000f" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1138b1d41c81bfc00000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1138b1d41c81bfc00000f')}).limit(-1)
Completed 200 OK in 76ms (Views: 73.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1138b1d41c81bfc000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1138b1d41c81bfc000011
Completed 302 Found in 60ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1138b1d41c81bfc000011" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1138b1d41c81bfc000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1138b1d41c81bfc000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138b1d41c81bfc000013'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1062062321682372820
Completed 200 OK in 94ms (Views: 93.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 340585980064192883
Completed 200 OK in 87ms (Views: 86.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8985273669852965118
  Rendered articles/index.html.erb within layouts/application (156.4ms)
Completed 200 OK in 331ms (Views: 329.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f41d41c81d5b000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2660697364557310432
Completed 200 OK in 143ms (Views: 142.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a116f41d41c81d5b000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a116f41d41c81d5b000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a116f41d41c81d5b000004" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a116f41d41c81d5b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a116f41d41c81d5b000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 94ms (Views: 92.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a116f41d41c81d5b000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a116f41d41c81d5b000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a116f41d41c81d5b000007" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a116f41d41c81d5b000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a116f41d41c81d5b000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a117171d41c81d60000001')}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.3ms)
  Rendered articles/new.html.erb within layouts/application (87.9ms)
Completed 200 OK in 219ms (Views: 217.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117181d41c81d60000003'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117181d41c81d60000003
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117181d41c81d60000003" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117181d41c81d60000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117181d41c81d60000003')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.1ms)
Completed 200 OK in 75ms (Views: 72.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a117181d41c81d60000005'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117181d41c81d60000005
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117181d41c81d60000005" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117181d41c81d60000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117181d41c81d60000005')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.3ms)
Completed 200 OK in 21ms (Views: 18.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117181d41c81d60000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3928142995290994925
Completed 200 OK in 155ms (Views: 154.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7726452719996778892
Completed 200 OK in 157ms (Views: 156.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117191d41c81d6000000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117191d41c81d6000000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117191d41c81d6000000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1174f1d41c81d6d000002'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1174f1d41c81d6d000002
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1174f1d41c81d6d000002" for 127.0.0.1 at 2012-11-12 12:35:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1174f1d41c81d6d000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1174f1d41c81d6d000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (65.7ms)
Completed 200 OK in 192ms (Views: 190.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (24.7ms)
Completed 200 OK in 35ms (Views: 33.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.9ms)
Completed 200 OK in 73ms (Views: 71.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.4ms)
Completed 200 OK in 20ms (Views: 19.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117501d41c81d6d000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117501d41c81d6d000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117501d41c81d6d000007" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117501d41c81d6d000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117501d41c81d6d000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117501d41c81d6d000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5131810191335166702
Completed 200 OK in 96ms (Views: 94.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4852482986035319633
Completed 200 OK in 160ms (Views: 159.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a117501d41c81d6d000011')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117511d41c81d6d000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117511d41c81d6d000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117511d41c81d6d000014'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176e1d41c81d73000008'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176e1d41c81d7300000a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1176e1d41c81d7300000a')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:36:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2040156847499086090
  Rendered articles/index.html.erb within layouts/application (213.2ms)
Completed 200 OK in 284ms (Views: 283.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176f1d41c81d7300000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 534640943324957162
Completed 200 OK in 154ms (Views: 153.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.1ms)
  Rendered articles/_form.html.erb (20.6ms)
Completed 200 OK in 33ms (Views: 32.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1176f1d41c81d7300000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1176f1d41c81d7300000f
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1176f1d41c81d7300000f" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1176f1d41c81d7300000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1176f1d41c81d7300000f')}).limit(-1)
Completed 200 OK in 10ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1176f1d41c81d73000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1176f1d41c81d73000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1176f1d41c81d73000011" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1176f1d41c81d73000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1176f1d41c81d73000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"newCategory", "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (24.4ms)
  Rendered articles/new.html.erb within layouts/application (90.3ms)
Completed 200 OK in 165ms (Views: 163.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117bc1d41c81d7b000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117bc1d41c81d7b000004" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117bc1d41c81d7b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117bc1d41c81d7b000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (68.0ms)
Completed 200 OK in 74ms (Views: 71.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117bc1d41c81d7b000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117bc1d41c81d7b000006" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117bc1d41c81d7b000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117bc1d41c81d7b000006')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.3ms)
Completed 200 OK in 20ms (Views: 19.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 15ms (Views: 13.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b00000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2133309577138322131
Completed 200 OK in 102ms (Views: 100.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (64ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2800326180119821116
Completed 200 OK in 163ms (Views: 162.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117bd1d41c81d7b000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f41d41c81d97000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f41d41c81d97000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a118f41d41c81d97000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:42:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1202355001751076303
  Rendered articles/index.html.erb within layouts/application (216.4ms)
Completed 200 OK in 287ms (Views: 286.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f51d41c81d97000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:42:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3279268531736772275
Completed 200 OK in 161ms (Views: 160.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:42:45 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 27ms (Views: 25.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a118f61d41c81d9700000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a118f61d41c81d9700000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a118f61d41c81d9700000c" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a118f61d41c81d9700000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a118f61d41c81d9700000c')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a118f61d41c81d97000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a118f61d41c81d97000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a118f61d41c81d97000010" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a118f61d41c81d97000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a118f61d41c81d97000010')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:43:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2757639226014729717
  Rendered articles/index.html.erb within layouts/application (225.2ms)
Completed 200 OK in 346ms (Views: 345.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119391d41c81d9e000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4588589831613482723
Completed 200 OK in 161ms (Views: 160.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119391d41c81d9e000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119391d41c81d9e000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119391d41c81d9e000004" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119391d41c81d9e000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119391d41c81d9e000004')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.5ms)
Completed 200 OK in 33ms (Views: 31.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119391d41c81d9e000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119391d41c81d9e000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119391d41c81d9e000007" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119391d41c81d9e000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119391d41c81d9e000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.9ms)
Completed 200 OK in 19ms (Views: 17.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.1ms)
Completed 200 OK in 21ms (Views: 18.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000010'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000011')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1194f1d41c81da4000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1194f1d41c81da4000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1194f1d41c81da4000007'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:44:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4916276139578286343
  Rendered articles/index.html.erb within layouts/application (227.3ms)
Completed 200 OK in 298ms (Views: 296.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119501d41c81da400000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:44:16 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6917384763804934646
Completed 200 OK in 167ms (Views: 166.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:44:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 84ms (Views: 83.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.0ms)
Completed 200 OK in 23ms (Views: 20.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.5ms)
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119511d41c81da400000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119511d41c81da400000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119511d41c81da400000f" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119511d41c81da400000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119511d41c81da400000f')}).limit(-1)
Completed 200 OK in 11ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119511d41c81da4000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119511d41c81da4000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119511d41c81da4000011" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119511d41c81da4000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119511d41c81da4000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119891d41c81dfe000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119891d41c81dfe000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119891d41c81dfe000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
  Rendered articles/new.html.erb within layouts/application (82.0ms)
Completed 200 OK in 157ms (Views: 156.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.7ms)
  Rendered articles/new.html.erb within layouts/application (12.4ms)
Completed 200 OK in 18ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119891d41c81dfe000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119891d41c81dfe000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119891d41c81dfe000009" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119891d41c81dfe000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119891d41c81dfe000009')}).limit(-1)
Completed 200 OK in 77ms (Views: 75.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1198a1d41c81dfe00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1198a1d41c81dfe00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1198a1d41c81dfe00000b" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1198a1d41c81dfe00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1198a1d41c81dfe00000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1198a1d41c81dfe00000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7126299648188990320
Completed 200 OK in 177ms (Views: 176.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3321972446668244005
Completed 200 OK in 176ms (Views: 175.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"NewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"NewCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (27.8ms)
  Rendered articles/new.html.erb within layouts/application (92.5ms)
Completed 200 OK in 172ms (Views: 170.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119bd1d41c81e03000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119bd1d41c81e03000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119bd1d41c81e03000004" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119bd1d41c81e03000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119bd1d41c81e03000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.2ms)
Completed 200 OK in 75ms (Views: 72.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119bd1d41c81e03000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119bd1d41c81e03000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119bd1d41c81e03000006" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119bd1d41c81e03000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119bd1d41c81e03000006')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.5ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119bd1d41c81e0300000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 268780242910088737
Completed 200 OK in 178ms (Views: 176.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:46:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9116337586188357335
Completed 200 OK in 187ms (Views: 186.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119be1d41c81e0300000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119be1d41c81e03000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119be1d41c81e03000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f51d41c81e09000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119f51d41c81e09000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f51d41c81e09000006'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:47:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
  Rendered articles/new.html.erb within layouts/application (81.5ms)
Completed 200 OK in 163ms (Views: 161.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (68.4ms)
  Rendered articles/new.html.erb within layouts/application (69.1ms)
Completed 200 OK in 75ms (Views: 72.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119f61d41c81e0900000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119f61d41c81e0900000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119f61d41c81e0900000c" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119f61d41c81e0900000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119f61d41c81e0900000c')}).limit(-1)
Completed 200 OK in 77ms (Views: 74.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119f61d41c81e0900000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119f61d41c81e0900000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119f61d41c81e0900000e" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119f61d41c81e0900000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119f61d41c81e0900000e')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f61d41c81e09000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7862532187471309509
Completed 200 OK in 182ms (Views: 180.8ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3363214904487930751
Completed 200 OK in 185ms (Views: 184.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a681d41c81ecc000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a681d41c81ecc000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11a681d41c81ecc000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:48:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6610565412714130041
  Rendered articles/index.html.erb within layouts/application (252.6ms)
Completed 200 OK in 332ms (Views: 330.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a691d41c81ecc000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:48:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (67ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6818740012240022344
Completed 200 OK in 192ms (Views: 191.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:48:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.5ms)
  Rendered articles/_form.html.erb (96.2ms)
Completed 200 OK in 113ms (Views: 111.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11a6a1d41c81ecc000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11a6a1d41c81ecc000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11a6a1d41c81ecc000009" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11a6a1d41c81ecc000009"}
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11a6a1d41c81ecc000009')}).limit(-1)
Completed 200 OK in 13ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11a6a1d41c81ecc00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11a6a1d41c81ecc00000b
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11a6a1d41c81ecc00000b" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11a6a1d41c81ecc00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11a6a1d41c81ecc00000b')}).limit(-1)
Completed 200 OK in 10ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.8ms)
Completed 200 OK in 20ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.6ms)
Completed 200 OK in 19ms (Views: 16.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:50:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3143042468439709734
  Rendered articles/index.html.erb within layouts/application (254.7ms)
Completed 200 OK in 328ms (Views: 327.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad71d41c81f35000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5469260269929683256
Completed 200 OK in 179ms (Views: 178.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11ad71d41c81f35000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11ad71d41c81f35000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11ad71d41c81f35000004" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11ad71d41c81f35000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11ad71d41c81f35000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (24.8ms)
Completed 200 OK in 37ms (Views: 35.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11ad81d41c81f35000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11ad81d41c81f35000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11ad81d41c81f35000007" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11ad81d41c81f35000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11ad81d41c81f35000007')}).limit(-1)
Completed 200 OK in 8ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 17ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad81d41c81f35000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad81d41c81f35000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11ad81d41c81f35000012')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 13:00:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4163749469333581544
  Rendered articles/index.html.erb within layouts/application (245.4ms)
Completed 200 OK in 319ms (Views: 318.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0a1d41c82010000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3037597946126888938
Completed 200 OK in 195ms (Views: 194.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (17.2ms)
Completed 200 OK in 86ms (Views: 85.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (12.2ms)
Completed 200 OK in 19ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.5ms)
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11d0b1d41c8201000000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11d0b1d41c8201000000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11d0b1d41c8201000000b" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11d0b1d41c8201000000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11d0b1d41c8201000000b')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11d0b1d41c8201000000d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11d0b1d41c8201000000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11d0b1d41c8201000000d" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11d0b1d41c8201000000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11d0b1d41c8201000000d')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0b1d41c8201000000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11d0b1d41c8201000000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0b1d41c82010000011'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:43:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (302ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6590630261887065103
  Rendered articles/index.html.erb within layouts/application (605.8ms)
Completed 200 OK in 726ms (Views: 725.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135361d41c80c71000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:43:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5379399581190053204
Completed 200 OK in 177ms (Views: 176.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (125.0ms)
Completed 200 OK in 136ms (Views: 134.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a135371d41c80c71000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a135371d41c80c71000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a135371d41c80c71000006" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a135371d41c80c71000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a135371d41c80c71000006')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.2ms)
Completed 200 OK in 74ms (Views: 73.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a135371d41c80c71000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a135371d41c80c71000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a135371d41c80c71000009" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a135371d41c80c71000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a135371d41c80c71000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135371d41c80c7100000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a135371d41c80c7100000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135371d41c80c7100000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:47:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2309096695876272771
  Rendered articles/index.html.erb within layouts/application (252.8ms)
Completed 200 OK in 374ms (Views: 373.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136361d41c80c9a000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8724334585354896270
Completed 200 OK in 194ms (Views: 193.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136361d41c80c9a000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136361d41c80c9a000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136361d41c80c9a000004" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136361d41c80c9a000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136361d41c80c9a000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (77.5ms)
Completed 200 OK in 88ms (Views: 87.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136361d41c80c9a000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136361d41c80c9a000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136361d41c80c9a000007" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136361d41c80c9a000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136361d41c80c9a000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.6ms)
Completed 200 OK in 17ms (Views: 14.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136371d41c80c9a000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136371d41c80c9a000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136371d41c80c9a000012')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136731d41c80ca1000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136731d41c80ca1000006')}])
MONGODB (5ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:35 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4442772913077924737
  Rendered articles/index.html.erb within layouts/application (244.3ms)
Completed 200 OK in 313ms (Views: 312.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:35 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1887440158492243079
Completed 200 OK in 188ms (Views: 187.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.4ms)
Completed 200 OK in 84ms (Views: 83.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136741d41c80ca100000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136741d41c80ca100000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136741d41c80ca100000d" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136741d41c80ca100000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136741d41c80ca100000d')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136741d41c80ca100000f'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136741d41c80ca100000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136741d41c80ca100000f" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136741d41c80ca100000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136741d41c80ca100000f')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2110370337206888228
  Rendered articles/index.html.erb within layouts/application (254.2ms)
Completed 200 OK in 374ms (Views: 372.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca6000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4944817271009503280
Completed 200 OK in 185ms (Views: 184.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136811d41c80ca6000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136811d41c80ca6000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136811d41c80ca6000004" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136811d41c80ca6000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136811d41c80ca6000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.4ms)
Completed 200 OK in 87ms (Views: 86.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136811d41c80ca6000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136811d41c80ca6000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136811d41c80ca6000007" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136811d41c80ca6000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136811d41c80ca6000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 72ms (Views: 71.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 17ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca600000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca600000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136811d41c80ca600000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c31d41c80cae000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c31d41c80cae000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136c31d41c80cae000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:49:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3572841799967698430
  Rendered articles/index.html.erb within layouts/application (244.4ms)
Completed 200 OK in 314ms (Views: 312.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c41d41c80cae000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:49:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2230726157043363589
Completed 200 OK in 190ms (Views: 189.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:49:56 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (15.9ms)
Completed 200 OK in 86ms (Views: 84.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136c51d41c80cae000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136c51d41c80cae000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136c51d41c80cae000009" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136c51d41c80cae000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136c51d41c80cae000009')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136c51d41c80cae00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136c51d41c80cae00000b
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136c51d41c80cae00000b" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136c51d41c80cae00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136c51d41c80cae00000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.4ms)
Completed 200 OK in 73ms (Views: 72.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136c51d41c80cae000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136d41d41c80cb3000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (78.4ms)
  Rendered articles/new.html.erb within layouts/application (87.2ms)
Completed 200 OK in 165ms (Views: 163.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136d51d41c80cb3000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136d51d41c80cb3000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136d51d41c80cb3000004" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136d51d41c80cb3000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136d51d41c80cb3000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.5ms)
Completed 200 OK in 75ms (Views: 72.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136d51d41c80cb3000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136d51d41c80cb3000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136d51d41c80cb3000006" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136d51d41c80cb3000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136d51d41c80cb3000006')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 16ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d51d41c80cb300000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#index as HTML
MONGODB (37ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8923876755882521521
Completed 200 OK in 249ms (Views: 248.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1805626425982465166
Completed 200 OK in 211ms (Views: 210.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d61d41c80cb300000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d61d41c80cb3000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136d61d41c80cb3000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3402465652835795024
  Rendered articles/index.html.erb within layouts/application (267.1ms)
Completed 200 OK in 386ms (Views: 385.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fa1d41c80cba000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5807689764282745194
Completed 200 OK in 252ms (Views: 251.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136fa1d41c80cba000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136fa1d41c80cba000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136fa1d41c80cba000004" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136fa1d41c80cba000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136fa1d41c80cba000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 90ms (Views: 88.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136fa1d41c80cba000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136fa1d41c80cba000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136fa1d41c80cba000007" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136fa1d41c80cba000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136fa1d41c80cba000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.6ms)
Completed 200 OK in 74ms (Views: 72.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:51 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136fb1d41c80cba000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:51:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4214980797024667227
  Rendered articles/index.html.erb within layouts/application (260.7ms)
Completed 200 OK in 380ms (Views: 379.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372c1d41c80cc0000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:51:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4789980624792291184
Completed 200 OK in 253ms (Views: 252.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1372d1d41c80cc0000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1372d1d41c80cc0000004" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1372d1d41c80cc0000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1372d1d41c80cc0000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (38ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.0ms)
Completed 200 OK in 90ms (Views: 89.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 17ms (Views: 14.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1372d1d41c80cc0000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1372d1d41c80cc0000009" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1372d1d41c80cc0000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1372d1d41c80cc0000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000010')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137521d41c80cc5000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137521d41c80cc5000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a137521d41c80cc5000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:52:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2207078273270160586
  Rendered articles/index.html.erb within layouts/application (266.3ms)
Completed 200 OK in 341ms (Views: 339.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137531d41c80cc5000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:52:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2261157194336574951
Completed 200 OK in 209ms (Views: 208.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:52:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.9ms)
  Rendered articles/_form.html.erb (19.0ms)
Completed 200 OK in 29ms (Views: 28.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a137541d41c80cc5000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a137541d41c80cc5000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a137541d41c80cc5000009" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a137541d41c80cc5000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a137541d41c80cc5000009')}).limit(-1)
Completed 200 OK in 74ms (Views: 71.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a137541d41c80cc500000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a137541d41c80cc500000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a137541d41c80cc500000b" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a137541d41c80cc500000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a137541d41c80cc500000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.7ms)
Completed 200 OK in 20ms (Views: 19.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (13.6ms)
Completed 200 OK in 19ms (Views: 16.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (16ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a137541d41c80cc5000011'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$AuZvAQAk3z4mXLS27ZJ37O", "password_hash"=>"$2a$10$AuZvAQAk3z4mXLS27ZJ37OyEZkF7H5Q7/0mCf9zAYtHFbx1IP/33."}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a137541d41c80cc5000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a1378c1d41c80ccc000001'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$kaWuOwLHXfehOAGucBWX9e", "password_hash"=>"$2a$10$kaWuOwLHXfehOAGucBWX9eHra.2tfCaZkClsHD1AepJs5hndQjN6a"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000008'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:53:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2893355463817101385
  Rendered articles/index.html.erb within layouts/application (257.1ms)
Completed 200 OK in 326ms (Views: 325.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc00000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:53:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3335594957657407889
Completed 200 OK in 202ms (Views: 201.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.0ms)
Completed 200 OK in 26ms (Views: 24.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.6ms)
Completed 200 OK in 73ms (Views: 70.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1378e1d41c80ccc000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1378e1d41c80ccc000010" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1378e1d41c80ccc000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1378e1d41c80ccc000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1378e1d41c80ccc000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1378e1d41c80ccc000012" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1378e1d41c80ccc000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1378e1d41c80ccc000012')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000015')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
