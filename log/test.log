Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003471d44b6a878000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003b11d44b6a87a000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000003'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000006'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000005'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (26ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:23:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.6ms)
Completed 200 OK in 130ms (Views: 129.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (6.5ms)
  Rendered articles/_form.html.erb (59.9ms)
Completed 500 Internal Server Error in 105ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (40.9ms)
Completed 500 Internal Server Error in 42ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.7ms)
Completed 200 OK in 88ms (Views: 87.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (27.6ms)
Completed 500 Internal Server Error in 73ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (7.7ms)
Completed 500 Internal Server Error in 9ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a00cec1d44b6a8b7000001'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWe", "password_hash"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWezIcn0Oobj2fKbF7/hxAgpwOX6lLPEHq"}])
MONGODB (36ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.5ms)
Completed 200 OK in 121ms (Views: 120.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (40.4ms)
  Rendered articles/_form.html.erb (73.6ms)
Completed 500 Internal Server Error in 118ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:41:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (87.7ms)
Completed 200 OK in 453ms (Views: 452.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:41:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:41:59 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (114.0ms)
  Rendered articles/_form.html.erb (180.1ms)
Completed 500 Internal Server Error in 403ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:42:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (64.8ms)
Completed 200 OK in 185ms (Views: 184.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.3ms)
  Rendered articles/_form.html.erb (27.0ms)
Completed 500 Internal Server Error in 92ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (40.4ms)
Completed 500 Internal Server Error in 41ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (12.0ms)
Completed 200 OK in 50ms (Views: 49.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (37.1ms)
  Rendered articles/_form.html.erb (44.9ms)
Completed 500 Internal Server Error in 49ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.8ms)
Completed 200 OK in 53ms (Views: 53.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 17ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (39.4ms)
Completed 500 Internal Server Error in 40ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.2ms)
Completed 200 OK in 54ms (Views: 53.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (38.6ms)
  Rendered articles/_form.html.erb (56.5ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.5ms)
Completed 200 OK in 53ms (Views: 52.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.5ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 16ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.5ms)
Completed 500 Internal Server Error in 39ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000003'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (10.6ms)
Completed 200 OK in 50ms (Views: 49.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.0ms)
  Rendered articles/_form.html.erb (47.1ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000002'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.1ms)
Completed 200 OK in 50ms (Views: 49.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 27ms (Views: 27.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.7ms)
  Rendered articles/_form.html.erb (47.4ms)
Completed 500 Internal Server Error in 52ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.5ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (58.3ms)
Completed 500 Internal Server Error in 72ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 44ms (Views: 43.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 6.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (51.0ms)
Completed 500 Internal Server Error in 64ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 59ms (Views: 58.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000e'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:09 -0300
Processing by ArticlesController#new as HTML
MONGODB (24ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (82.5ms)
  Rendered articles/new.html.erb within layouts/application (87.1ms)
Completed 500 Internal Server Error in 96ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d5000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 45ms (Views: 44.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (45.4ms)
Completed 500 Internal Server Error in 60ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d7000007'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 46ms (Views: 45.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (16.3ms)
Completed 200 OK in 70ms (Views: 69.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 9ms (Views: 8.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (65.0ms)
Completed 500 Internal Server Error in 70ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a014291d44b6a8db000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (15.9ms)
Completed 200 OK in 55ms (Views: 54.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 10ms (Views: 9.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a014291d44b6a8db000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a014291d44b6a8db000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a014291d44b6a8db000008" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a014291d44b6a8db000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a014291d44b6a8db000008')}).limit(-1)
Completed 200 OK in 18ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.1ms)
  Rendered articles/_form.html.erb (51.7ms)
Completed 500 Internal Server Error in 58ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (18.3ms)
Completed 200 OK in 58ms (Views: 58.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 11ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (56.4ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (54.3ms)
Completed 200 OK in 95ms (Views: 94.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (49.2ms)
Completed 500 Internal Server Error in 54ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.8ms)
  Rendered articles/_form.html.erb (46.5ms)
  Rendered articles/new.html.erb within layouts/application (50.9ms)
Completed 500 Internal Server Error in 60ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000004'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 51ms (Views: 50.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 13ms (Views: 12.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000007'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.0ms)
Completed 200 OK in 81ms (Views: 80.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 42ms (Views: 41.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (46.9ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.6ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.2ms)
Completed 200 OK in 60ms (Views: 59.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 43ms (Views: 42.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016171d44b6a8e7000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016171d44b6a8e7000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.3ms)
  Rendered articles/_form.html.erb (12.4ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016701d44b6a8e9000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016701d44b6a8e9000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016701d44b6a8e9000001" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016701d44b6a8e9000001"}
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016701d44b6a8e9000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (12.3ms)
Completed 200 OK in 76ms (Views: 65.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (37.7ms)
Completed 500 Internal Server Error in 43ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.2ms)
Completed 500 Internal Server Error in 39ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000005'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e900000a'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016da1d44b6a8eb000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016da1d44b6a8eb000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016da1d44b6a8eb000001" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016da1d44b6a8eb000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016da1d44b6a8eb000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (8.0ms)
Completed 200 OK in 47ms (Views: 46.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 19ms (Views: 18.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.9ms)
Completed 200 OK in 48ms (Views: 38.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a016db1d44b6a8eb000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016db1d44b6a8eb000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016db1d44b6a8eb000006" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016db1d44b6a8eb000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016db1d44b6a8eb000006')}).limit(-1)
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 17ms (Views: 17.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 50ms (Views: 50.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (22.4ms)
Completed 200 OK in 62ms (Views: 61.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (20ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 72ms (Views: 72.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.8ms)
Completed 200 OK in 49ms (Views: 48.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a017041d44b6a8ed000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed000009
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed000009" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed000009')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a017041d44b6a8ed00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed00000b
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed00000b" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed00000b')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.2ms)
  Rendered articles/new.html.erb within layouts/application (48.8ms)
Completed 200 OK in 60ms (Views: 58.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000002'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000002
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000002" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (7.0ms)
Completed 200 OK in 10ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000004
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000004" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000004')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (37.9ms)
Completed 200 OK in 40ms (Views: 39.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 19ms (Views: 18.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.6ms)
  Rendered articles/new.html.erb within layouts/application (48.4ms)
Completed 200 OK in 59ms (Views: 57.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
  Rendered articles/new.html.erb within layouts/application (6.4ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.2ms)
Completed 200 OK in 38ms (Views: 38.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000004" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000006" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000006"}
MONGODB (25ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000006')}).limit(-1)
Completed 200 OK in 30ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f1000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000c'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (119.4ms)
  Rendered articles/new.html.erb within layouts/application (188.6ms)
Completed 200 OK in 259ms (Views: 257.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a026ae898d65157c000002'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a026ae898d65157c000002
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a026ae898d65157c000002" for 127.0.0.1 at 2012-11-11 19:29:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a026ae898d65157c000002"}
MONGODB (285ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a026ae898d65157c000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (131.4ms)
Completed 500 Internal Server Error in 429ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a026af898d65157c000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a026af898d65157c000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a026af898d65157c000004" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a026af898d65157c000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a026af898d65157c000004')}).limit(-1)
Completed 500 Internal Server Error in 4ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.9ms)
Completed 200 OK in 10ms (Views: 9.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.7ms)
Completed 200 OK in 43ms (Views: 41.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 500 Internal Server Error in 15ms


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:29:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 500 Internal Server Error in 13ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c00000b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a026af898d65157c00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a026af898d65157c00000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a02ccf898d65196a000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a02ccf898d65196a000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a02ccf898d65196a000001" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a02ccf898d65196a000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a02ccf898d65196a000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (53.9ms)
Completed 200 OK in 146ms (Views: 144.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (23.4ms)
Completed 200 OK in 78ms (Views: 77.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.8ms)
Completed 200 OK in 46ms (Views: 44.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (9.5ms)
Completed 200 OK in 14ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a02ccf898d65196a000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a02ccf898d65196a000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a02ccf898d65196a000006" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a02ccf898d65196a000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a02ccf898d65196a000006')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 19:55:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 10ms (Views: 9.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a00000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a02ccf898d65196a00000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a02ccf898d65196a00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 23:45:24 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (56.7ms)
Completed 200 OK in 131ms (Views: 129.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062c41d41c81ca2000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 23:45:24 -0300
Processing by ArticlesController#index as HTML
MONGODB (9804ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 9904ms (Views: 9903.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (85.3ms)
Completed 200 OK in 97ms (Views: 95.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (14.5ms)
Completed 200 OK in 22ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.8ms)
Completed 200 OK in 19ms (Views: 17.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a062cf1d41c81ca2000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a062cf1d41c81ca2000007
Completed 302 Found in 67ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a062cf1d41c81ca2000007" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a062cf1d41c81ca2000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a062cf1d41c81ca2000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a062cf1d41c81ca2000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a062cf1d41c81ca2000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a062cf1d41c81ca2000009" for 127.0.0.1 at 2012-11-11 23:45:35 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a062cf1d41c81ca2000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a062cf1d41c81ca2000009')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a062cf1d41c81ca200000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:57:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (398ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (477.6ms)
Completed 200 OK in 599ms (Views: 598.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100591d41c818d0000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:57:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1005a1d41c818d0000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1005a1d41c818d0000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1005a1d41c818d0000004" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1005a1d41c818d0000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1005a1d41c818d0000004')}).limit(-1)
Completed 200 OK in 14ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (93.3ms)
Completed 200 OK in 105ms (Views: 103.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1005a1d41c818d0000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1005a1d41c818d0000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1005a1d41c818d0000007" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1005a1d41c818d0000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1005a1d41c818d0000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:57:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.5ms)
Completed 200 OK in 76ms (Views: 73.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1005a1d41c818d000000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1005a1d41c818d000000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1005a1d41c818d000000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100951d41c818d6000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a100951d41c818d6000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100951d41c818d6000003'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:58:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (74.1ms)
Completed 200 OK in 145ms (Views: 143.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a100961d41c818d6000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (16.8ms)
Completed 200 OK in 86ms (Views: 84.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.0ms)
Completed 200 OK in 23ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a100961d41c818d600000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a100961d41c818d600000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a100961d41c818d600000b" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a100961d41c818d600000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a100961d41c818d600000b')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a100961d41c818d600000d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a100961d41c818d600000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a100961d41c818d600000d" for 127.0.0.1 at 2012-11-12 10:58:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a100961d41c818d600000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a100961d41c818d600000d')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b51d41c818fe000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b51d41c818fe000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a101b51d41c818fe000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (88.0ms)
Completed 200 OK in 160ms (Views: 158.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a101b61d41c818fe000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 17ms (Views: 16.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 85ms (Views: 84.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a101b61d41c818fe000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a101b61d41c818fe000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a101b61d41c818fe000009" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a101b61d41c818fe000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a101b61d41c818fe000009')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a101b61d41c818fe00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a101b61d41c818fe00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a101b61d41c818fe00000b" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a101b61d41c818fe00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a101b61d41c818fe00000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.4ms)
Completed 200 OK in 76ms (Views: 74.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a101b61d41c818fe00000f'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$nI721bKnaB/Z.KVVBnL/me", "password_hash"=>"$2a$10$nI721bKnaB/Z.KVVBnL/meeRSXVrv3sfa6We8dd5dXrDaYesfJeRW"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com", :_id=>{"$ne"=>BSON::ObjectId('50a101b61d41c818fe00000f')}}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029d1d41c81914000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1029d1d41c81914000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029d1d41c81914000006'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:07:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (78.4ms)
Completed 200 OK in 148ms (Views: 147.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1029e1d41c81914000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 70ms (Views: 69.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 85ms (Views: 83.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1029e1d41c8191400000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1029e1d41c8191400000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1029e1d41c8191400000e" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1029e1d41c8191400000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1029e1d41c8191400000e')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1029e1d41c81914000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1029e1d41c81914000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1029e1d41c81914000010" for 127.0.0.1 at 2012-11-12 11:07:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1029e1d41c81914000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1029e1d41c81914000010')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (146.4ms)
Completed 200 OK in 216ms (Views: 215.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e01d41c81931000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 19ms (Views: 18.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a102e01d41c81931000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a102e01d41c81931000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a102e01d41c81931000004" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a102e01d41c81931000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a102e01d41c81931000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.4ms)
Completed 200 OK in 90ms (Views: 89.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a102e01d41c81931000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a102e01d41c81931000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a102e01d41c81931000007" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a102e01d41c81931000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a102e01d41c81931000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:08:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.5ms)
Completed 200 OK in 77ms (Views: 74.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e11d41c8193100000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a102e11d41c8193100000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a102e11d41c8193100000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:10:54 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (145.3ms)
Completed 200 OK in 215ms (Views: 213.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1036f1d41c8193b000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 27ms (Views: 26.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1036f1d41c8193b000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1036f1d41c8193b000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1036f1d41c8193b000004" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1036f1d41c8193b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1036f1d41c8193b000004')}).limit(-1)
Completed 200 OK in 15ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (78.3ms)
Completed 200 OK in 89ms (Views: 88.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1036f1d41c8193b000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1036f1d41c8193b000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1036f1d41c8193b000007" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1036f1d41c8193b000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1036f1d41c8193b000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:10:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.3ms)
Completed 200 OK in 77ms (Views: 74.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1036f1d41c8193b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a103701d41c8193b00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a103701d41c8193b00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039c1d41c81941000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039c1d41c81941000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1039c1d41c81941000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:11:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (105.5ms)
Completed 200 OK in 193ms (Views: 191.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1039d1d41c81941000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 96ms (Views: 95.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (21.0ms)
Completed 200 OK in 101ms (Views: 99.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1039d1d41c8194100000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1039d1d41c8194100000b
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1039d1d41c8194100000b" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1039d1d41c8194100000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1039d1d41c8194100000b')}).limit(-1)
Completed 200 OK in 15ms (Views: 11.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (12.5ms)
Completed 200 OK in 76ms (Views: 75.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1039d1d41c8194100000f'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1039d1d41c8194100000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1039d1d41c8194100000f" for 127.0.0.1 at 2012-11-12 11:11:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1039d1d41c8194100000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1039d1d41c8194100000f')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (17.3ms)
  Rendered articles/new.html.erb within layouts/application (83.2ms)
Completed 200 OK in 161ms (Views: 159.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (14.0ms)
  Rendered articles/new.html.erb within layouts/application (14.7ms)
Completed 200 OK in 20ms (Views: 17.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a104911d41c8194c000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a104911d41c8194c000007
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a104911d41c8194c000007" for 127.0.0.1 at 2012-11-12 11:15:45 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a104911d41c8194c000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a104911d41c8194c000007')}).limit(-1)
Completed 200 OK in 17ms (Views: 15.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a104921d41c8194c00000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a104921d41c8194c00000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a104921d41c8194c00000a" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a104921d41c8194c00000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a104921d41c8194c00000a')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c00000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 89ms (Views: 87.8ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:15:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 28ms (Views: 27.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c00000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a104921d41c8194c00000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a104921d41c8194c000011'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b81d41c819a7000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a106b81d41c819a7000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b81d41c819a7000006'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:24:56 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (21.1ms)
  Rendered articles/new.html.erb within layouts/application (88.3ms)
Completed 200 OK in 172ms (Views: 170.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (70.5ms)
  Rendered articles/new.html.erb within layouts/application (71.2ms)
Completed 200 OK in 77ms (Views: 74.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a106b91d41c819a700000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a106b91d41c819a700000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a106b91d41c819a700000c" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a106b91d41c819a700000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a106b91d41c819a700000c')}).limit(-1)
Completed 200 OK in 79ms (Views: 76.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a106b91d41c819a700000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a106b91d41c819a700000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a106b91d41c819a700000e" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a106b91d41c819a700000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a106b91d41c819a700000e')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a106b91d41c819a7000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 34ms (Views: 33.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:24:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 31ms (Views: 30.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:26:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (106.9ms)
Completed 200 OK in 229ms (Views: 228.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107271d41c819b1000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:26:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 86ms (Views: 85.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a107281d41c819b1000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107281d41c819b1000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107281d41c819b1000004" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107281d41c819b1000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107281d41c819b1000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (70.9ms)
Completed 200 OK in 145ms (Views: 144.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a107281d41c819b1000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107281d41c819b1000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107281d41c819b1000007" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107281d41c819b1000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107281d41c819b1000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.1ms)
Completed 200 OK in 73ms (Views: 72.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:26:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 16ms (Views: 14.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107281d41c819b100000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107281d41c819b100000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a107281d41c819b100000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107df1d41c819b9000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a107df1d41c819b9000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107e01d41c819b9000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (104.4ms)
Completed 200 OK in 178ms (Views: 177.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a107e01d41c819b900000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 35ms (Views: 34.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (17.1ms)
Completed 200 OK in 28ms (Views: 26.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (70.6ms)
Completed 200 OK in 77ms (Views: 74.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a107e11d41c819b9000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107e11d41c819b9000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107e11d41c819b9000010" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107e11d41c819b9000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107e11d41c819b9000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a107e11d41c819b9000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a107e11d41c819b9000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a107e11d41c819b9000012" for 127.0.0.1 at 2012-11-12 11:29:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a107e11d41c819b9000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a107e11d41c819b9000012')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108181d41c819c0000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a108181d41c819c0000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108181d41c819c0000009'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:30:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (108.8ms)
Completed 200 OK in 184ms (Views: 182.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108191d41c819c000000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 38ms (Views: 37.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 27ms (Views: 25.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (71.0ms)
Completed 200 OK in 77ms (Views: 74.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a108191d41c819c0000011'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108191d41c819c0000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108191d41c819c0000011" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108191d41c819c0000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108191d41c819c0000011')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a108191d41c819c0000013'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108191d41c819c0000013
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108191d41c819c0000013" for 127.0.0.1 at 2012-11-12 11:30:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108191d41c819c0000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108191d41c819c0000013')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083c1d41c819c7000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1083c1d41c819c7000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083c1d41c819c7000008'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:31:24 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.1ms)
  Rendered articles/_form.html.erb (23.7ms)
  Rendered articles/new.html.erb within layouts/application (89.4ms)
Completed 200 OK in 169ms (Views: 167.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.9ms)
  Rendered articles/new.html.erb within layouts/application (72.0ms)
Completed 200 OK in 78ms (Views: 75.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1083d1d41c819c700000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1083d1d41c819c700000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1083d1d41c819c700000e" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1083d1d41c819c700000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1083d1d41c819c700000e')}).limit(-1)
Completed 200 OK in 76ms (Views: 74.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1083d1d41c819c7000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1083d1d41c819c7000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1083d1d41c819c7000010" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1083d1d41c819c7000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1083d1d41c819c7000010')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1083d1d41c819c7000012'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 43ms (Views: 42.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:31:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 42ms (Views: 41.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108da1d41c819ee000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108da1d41c819ee000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a108da1d41c819ee000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:34:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (172.5ms)
Completed 200 OK in 246ms (Views: 245.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a108db1d41c819ee000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 49ms (Views: 48.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (18.1ms)
Completed 200 OK in 29ms (Views: 28.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a108db1d41c819ee000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108db1d41c819ee000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108db1d41c819ee000009" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108db1d41c819ee000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108db1d41c819ee000009')}).limit(-1)
Completed 200 OK in 14ms (Views: 11.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a108db1d41c819ee00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a108db1d41c819ee00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a108db1d41c819ee00000b" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a108db1d41c819ee00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a108db1d41c819ee00000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 15ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:34:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 85ms (Views: 82.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:39:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (115.8ms)
Completed 200 OK in 236ms (Views: 235.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 44ms (Views: 43.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10a251d41c819fe000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a251d41c819fe000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a251d41c819fe000004" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a251d41c819fe000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a251d41c819fe000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (22.3ms)
Completed 200 OK in 32ms (Views: 31.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10a251d41c819fe000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a251d41c819fe000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a251d41c819fe000007" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a251d41c819fe000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a251d41c819fe000007')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:39:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a251d41c819fe00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10a251d41c819fe00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a10a261d41c819fe000012'), "name"=>"user", "email"=>"user2@example.com", "role"=>"reader", "password_salt"=>"$2a$10$pX7meHIyT99pC2i.gjPBKe", "password_hash"=>"$2a$10$pX7meHIyT99pC2i.gjPBKeTTOmW8lJwS3dSRTm2EaNwaiI2.Yed8e"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10a511d41c81a04000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a511d41c81a04000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a511d41c81a04000001" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a511d41c81a04000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a511d41c81a04000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (71.3ms)
Completed 200 OK in 211ms (Views: 208.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:40:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.9ms)
Completed 200 OK in 98ms (Views: 96.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10a521d41c81a04000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10a521d41c81a04000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10a521d41c81a04000004" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10a521d41c81a04000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10a521d41c81a04000004')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.4ms)
Completed 200 OK in 76ms (Views: 75.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (20.3ms)
Completed 200 OK in 31ms (Views: 27.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a04000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (66ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 120ms (Views: 119.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:40:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a0400000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10a521d41c81a0400000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10a521d41c81a0400000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acb1d41c81a0b000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:42:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (112.3ms)
Completed 200 OK in 237ms (Views: 236.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10acc1d41c81a0b00000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 55ms (Views: 54.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.1ms)
Completed 200 OK in 26ms (Views: 24.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10acc1d41c81a0b000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10acc1d41c81a0b000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10acc1d41c81a0b000010" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10acc1d41c81a0b000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10acc1d41c81a0b000010')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10acc1d41c81a0b000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10acc1d41c81a0b000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10acc1d41c81a0b000012" for 127.0.0.1 at 2012-11-12 11:42:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10acc1d41c81a0b000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10acc1d41c81a0b000012')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10be81d41c81a3d000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10be81d41c81a3d000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10be81d41c81a3d000001" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10be81d41c81a3d000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10be81d41c81a3d000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (64.8ms)
Completed 200 OK in 189ms (Views: 185.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:47:04 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.6ms)
Completed 200 OK in 90ms (Views: 88.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.0ms)
Completed 200 OK in 72ms (Views: 70.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10be91d41c81a3d000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10be91d41c81a3d000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10be91d41c81a3d000006" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10be91d41c81a3d000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10be91d41c81a3d000006')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 75ms (Views: 74.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:47:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 58ms (Views: 57.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10be91d41c81a3d000011')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10be91d41c81a3d000012'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (125.0ms)
Completed 200 OK in 247ms (Views: 246.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce71d41c81a74000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 59ms (Views: 58.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10ce71d41c81a74000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ce71d41c81a74000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ce71d41c81a74000004" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ce71d41c81a74000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ce71d41c81a74000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (22.6ms)
Completed 200 OK in 35ms (Views: 34.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10ce81d41c81a74000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ce81d41c81a74000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ce81d41c81a74000007" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ce81d41c81a74000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ce81d41c81a74000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 18ms (Views: 16.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10ce81d41c81a7400000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a79000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10d071d41c81a79000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a79000008'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3537074768309839405
  Rendered articles/index.html.erb within layouts/application (184.8ms)
Completed 200 OK in 256ms (Views: 255.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10d071d41c81a7900000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:51:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4626199795069544176
Completed 200 OK in 74ms (Views: 73.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (73.7ms)
Completed 200 OK in 84ms (Views: 82.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.7ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10d081d41c81a79000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10d081d41c81a79000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10d081d41c81a79000010" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10d081d41c81a79000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10d081d41c81a79000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10d081d41c81a79000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10d081d41c81a79000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10d081d41c81a79000012" for 127.0.0.1 at 2012-11-12 11:51:52 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10d081d41c81a79000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10d081d41c81a79000012')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6504199976395032023
  Rendered articles/index.html.erb within layouts/application (154.2ms)
Completed 200 OK in 289ms (Views: 288.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10ea91d41c81ae7000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 760167988113524428
Completed 200 OK in 84ms (Views: 83.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10ea91d41c81ae7000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10ea91d41c81ae7000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10ea91d41c81ae7000004" for 127.0.0.1 at 2012-11-12 11:58:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10ea91d41c81ae7000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10ea91d41c81ae7000004')}).limit(-1)
Completed 200 OK in 13ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.2ms)
  Rendered articles/_form.html.erb (99.0ms)
Completed 200 OK in 117ms (Views: 115.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10eaa1d41c81ae7000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10eaa1d41c81ae7000007
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10eaa1d41c81ae7000007" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10eaa1d41c81ae7000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10eaa1d41c81ae7000007')}).limit(-1)
Completed 200 OK in 7ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 17ms (Views: 16.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 11:58:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (89.9ms)
Completed 200 OK in 96ms (Views: 93.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10eaa1d41c81ae700000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10f4b1d41c81b56000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f4b1d41c81b56000001
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f4b1d41c81b56000001" for 127.0.0.1 at 2012-11-12 12:01:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f4b1d41c81b56000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f4b1d41c81b56000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (66.4ms)
Completed 200 OK in 190ms (Views: 187.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 32ms (Views: 31.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10f4c1d41c81b56000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f4c1d41c81b56000004
Completed 302 Found in 60ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f4c1d41c81b56000004" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f4c1d41c81b56000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f4c1d41c81b56000004')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1145957610091168509
Completed 200 OK in 66ms (Views: 65.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:01:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9180688634505052994
Completed 200 OK in 127ms (Views: 126.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b5600000c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b5600000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10f4c1d41c81b56000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (79.7ms)
  Rendered articles/new.html.erb within layouts/application (88.7ms)
Completed 200 OK in 226ms (Views: 166.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10f851d41c81b5c000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f851d41c81b5c000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f851d41c81b5c000004" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f851d41c81b5c000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f851d41c81b5c000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (74.9ms)
Completed 200 OK in 80ms (Views: 78.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10f851d41c81b5c000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10f851d41c81b5c000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10f851d41c81b5c000006" for 127.0.0.1 at 2012-11-12 12:02:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10f851d41c81b5c000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10f851d41c81b5c000006')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c00000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3386237866222068741
Completed 200 OK in 68ms (Views: 67.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:02:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1637006757255750734
Completed 200 OK in 134ms (Views: 133.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10f861d41c81b5c000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10f861d41c81b5c000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b63000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b63000008'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a10fc51d41c81b63000008')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b6300000b'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4159746388011621501
  Rendered articles/index.html.erb within layouts/application (183.1ms)
Completed 200 OK in 254ms (Views: 252.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a10fc51d41c81b6300000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:03:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2537706771261529407
Completed 200 OK in 124ms (Views: 123.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.6ms)
Completed 200 OK in 85ms (Views: 83.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a10fc61d41c81b63000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10fc61d41c81b63000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10fc61d41c81b63000011" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10fc61d41c81b63000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10fc61d41c81b63000011')}).limit(-1)
Completed 200 OK in 67ms (Views: 65.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.6ms)
Completed 200 OK in 20ms (Views: 19.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a10fc61d41c81b63000014'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a10fc61d41c81b63000014
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a10fc61d41c81b63000014" for 127.0.0.1 at 2012-11-12 12:03:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a10fc61d41c81b63000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a10fc61d41c81b63000014')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:06:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7629069679497576181
  Rendered articles/index.html.erb within layouts/application (200.7ms)
Completed 200 OK in 275ms (Views: 274.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f000003'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2574766119913521102
Completed 200 OK in 69ms (Views: 68.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.2ms)
Completed 200 OK in 90ms (Views: 89.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a110621d41c81b8f000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110621d41c81b8f000006
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110621d41c81b8f000006" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110621d41c81b8f000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110621d41c81b8f000006')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a110621d41c81b8f000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110621d41c81b8f000008
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110621d41c81b8f000008" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110621d41c81b8f000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110621d41c81b8f000008')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:06:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.6ms)
Completed 200 OK in 77ms (Views: 74.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110621d41c81b8f00000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a110621d41c81b8f00000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000001'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a110ee1d41c81bcb000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:08:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.8ms)
  Rendered articles/new.html.erb within layouts/application (84.3ms)
Completed 200 OK in 160ms (Views: 159.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a110ef1d41c81bcb00000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110ef1d41c81bcb00000d
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110ef1d41c81bcb00000d" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110ef1d41c81bcb00000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110ef1d41c81bcb00000d')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (11.8ms)
Completed 200 OK in 18ms (Views: 15.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (72.2ms)
Completed 200 OK in 79ms (Views: 78.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 18ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a110ef1d41c81bcb000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a110ef1d41c81bcb000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a110ef1d41c81bcb000011" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a110ef1d41c81bcb000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a110ef1d41c81bcb000011')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a110ef1d41c81bcb000013'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1990040974359406578
Completed 200 OK in 85ms (Views: 84.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:08:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4540558340461832267
Completed 200 OK in 166ms (Views: 165.5ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1112a1d41c81bd1000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:09:30 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3094436048670494844
  Rendered articles/index.html.erb within layouts/application (198.3ms)
Completed 200 OK in 268ms (Views: 266.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1112b1d41c81bd1000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6717599017090093338
Completed 200 OK in 132ms (Views: 131.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (21.0ms)
Completed 200 OK in 95ms (Views: 93.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1112b1d41c81bd1000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1112b1d41c81bd1000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1112b1d41c81bd1000009" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1112b1d41c81bd1000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1112b1d41c81bd1000009')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1112b1d41c81bd100000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1112b1d41c81bd100000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1112b1d41c81bd100000b" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1112b1d41c81bd100000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1112b1d41c81bd100000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:09:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.3ms)
Completed 200 OK in 73ms (Views: 72.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:09:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000005'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000006')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8179580733320056995
  Rendered articles/index.html.erb within layouts/application (198.3ms)
Completed 200 OK in 268ms (Views: 266.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1115c1d41c81bd9000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9003200403783537012
Completed 200 OK in 139ms (Views: 138.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1115c1d41c81bd900000a'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1115c1d41c81bd900000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1115c1d41c81bd900000a" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1115c1d41c81bd900000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1115c1d41c81bd900000a')}).limit(-1)
Completed 200 OK in 12ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 87ms (Views: 86.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1115d1d41c81bd900000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1115d1d41c81bd900000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1115d1d41c81bd900000d" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1115d1d41c81bd900000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1115d1d41c81bd900000d')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.8ms)
Completed 200 OK in 74ms (Views: 73.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8082065515204066866
  Rendered articles/index.html.erb within layouts/application (154.5ms)
Completed 200 OK in 275ms (Views: 273.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111781d41c81bde000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6568385028524097297
Completed 200 OK in 154ms (Views: 152.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a111781d41c81bde000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a111781d41c81bde000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a111781d41c81bde000004" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a111781d41c81bde000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a111781d41c81bde000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.9ms)
Completed 200 OK in 92ms (Views: 90.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 17ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a111791d41c81bde000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a111791d41c81bde000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a111791d41c81bde000009" for 127.0.0.1 at 2012-11-12 12:10:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a111791d41c81bde000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a111791d41c81bde000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111791d41c81bde000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a111791d41c81bde000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a111791d41c81bde000015'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113471d41c81bf5000004'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113471d41c81bf5000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a113471d41c81bf5000006')}, {"$set"=>{"deck"=>"it is an article"}})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a113471d41c81bf5000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a113471d41c81bf5000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a113471d41c81bf5000007" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a113471d41c81bf5000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a113471d41c81bf5000007')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (67.7ms)
Completed 200 OK in 143ms (Views: 140.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:18:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (73.3ms)
Completed 200 OK in 84ms (Views: 82.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a113481d41c81bf500000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a113481d41c81bf500000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a113481d41c81bf500000a" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a113481d41c81bf500000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a113481d41c81bf500000a')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.3ms)
Completed 200 OK in 77ms (Views: 74.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a113481d41c81bf500000e'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9117926668251648716
Completed 200 OK in 93ms (Views: 91.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:18:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 148765787072713517
Completed 200 OK in 162ms (Views: 161.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138a1d41c81bfc000007'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"category", "_id"=>BSON::ObjectId('50a1138a1d41c81bfc00000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:19:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.3ms)
  Rendered articles/new.html.erb within layouts/application (80.0ms)
Completed 200 OK in 158ms (Views: 156.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
  Rendered articles/new.html.erb within layouts/application (12.2ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1138b1d41c81bfc00000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1138b1d41c81bfc00000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1138b1d41c81bfc00000f" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1138b1d41c81bfc00000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1138b1d41c81bfc00000f')}).limit(-1)
Completed 200 OK in 76ms (Views: 73.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1138b1d41c81bfc000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1138b1d41c81bfc000011
Completed 302 Found in 60ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1138b1d41c81bfc000011" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1138b1d41c81bfc000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1138b1d41c81bfc000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1138b1d41c81bfc000013'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1062062321682372820
Completed 200 OK in 94ms (Views: 93.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:19:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 340585980064192883
Completed 200 OK in 87ms (Views: 86.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8985273669852965118
  Rendered articles/index.html.erb within layouts/application (156.4ms)
Completed 200 OK in 331ms (Views: 329.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f41d41c81d5b000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2660697364557310432
Completed 200 OK in 143ms (Views: 142.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a116f41d41c81d5b000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a116f41d41c81d5b000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a116f41d41c81d5b000004" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a116f41d41c81d5b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a116f41d41c81d5b000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 94ms (Views: 92.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a116f41d41c81d5b000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a116f41d41c81d5b000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a116f41d41c81d5b000007" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a116f41d41c81d5b000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a116f41d41c81d5b000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a116f51d41c81d5b00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a117171d41c81d60000001')}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (79.3ms)
  Rendered articles/new.html.erb within layouts/application (87.9ms)
Completed 200 OK in 219ms (Views: 217.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117181d41c81d60000003'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117181d41c81d60000003
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117181d41c81d60000003" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117181d41c81d60000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117181d41c81d60000003')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.1ms)
Completed 200 OK in 75ms (Views: 72.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a117181d41c81d60000005'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117181d41c81d60000005
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117181d41c81d60000005" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117181d41c81d60000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117181d41c81d60000005')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.3ms)
Completed 200 OK in 21ms (Views: 18.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117181d41c81d60000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3928142995290994925
Completed 200 OK in 155ms (Views: 154.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:34:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7726452719996778892
Completed 200 OK in 157ms (Views: 156.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117191d41c81d6000000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117191d41c81d6000000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117191d41c81d6000000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1174f1d41c81d6d000002'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1174f1d41c81d6d000002
Completed 302 Found in 6ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1174f1d41c81d6d000002" for 127.0.0.1 at 2012-11-12 12:35:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1174f1d41c81d6d000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1174f1d41c81d6d000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (65.7ms)
Completed 200 OK in 192ms (Views: 190.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.0ms)
  Rendered articles/_form.html.erb (24.7ms)
Completed 200 OK in 35ms (Views: 33.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.9ms)
Completed 200 OK in 73ms (Views: 71.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.4ms)
Completed 200 OK in 20ms (Views: 19.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117501d41c81d6d000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117501d41c81d6d000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117501d41c81d6d000007" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117501d41c81d6d000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117501d41c81d6d000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117501d41c81d6d000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5131810191335166702
Completed 200 OK in 96ms (Views: 94.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:35:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4852482986035319633
Completed 200 OK in 160ms (Views: 159.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a117501d41c81d6d000011')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117511d41c81d6d000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117511d41c81d6d000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117511d41c81d6d000014'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"category"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176e1d41c81d73000008'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176e1d41c81d7300000a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1176e1d41c81d7300000a')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:36:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2040156847499086090
  Rendered articles/index.html.erb within layouts/application (213.2ms)
Completed 200 OK in 284ms (Views: 283.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1176f1d41c81d7300000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 534640943324957162
Completed 200 OK in 154ms (Views: 153.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.1ms)
  Rendered articles/_form.html.erb (20.6ms)
Completed 200 OK in 33ms (Views: 32.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1176f1d41c81d7300000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1176f1d41c81d7300000f
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1176f1d41c81d7300000f" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1176f1d41c81d7300000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1176f1d41c81d7300000f')}).limit(-1)
Completed 200 OK in 10ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1176f1d41c81d73000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1176f1d41c81d73000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1176f1d41c81d73000011" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1176f1d41c81d73000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1176f1d41c81d73000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:36:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"newCategory", "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (24.4ms)
  Rendered articles/new.html.erb within layouts/application (90.3ms)
Completed 200 OK in 165ms (Views: 163.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117bc1d41c81d7b000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117bc1d41c81d7b000004" for 127.0.0.1 at 2012-11-12 12:37:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117bc1d41c81d7b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117bc1d41c81d7b000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (68.0ms)
Completed 200 OK in 74ms (Views: 71.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a117bc1d41c81d7b000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a117bc1d41c81d7b000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a117bc1d41c81d7b000006" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a117bc1d41c81d7b000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a117bc1d41c81d7b000006')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.3ms)
Completed 200 OK in 20ms (Views: 19.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 15ms (Views: 13.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b00000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2133309577138322131
Completed 200 OK in 102ms (Views: 100.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:37:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (64ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2800326180119821116
Completed 200 OK in 163ms (Views: 162.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a117bd1d41c81d7b000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a117bd1d41c81d7b000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f41d41c81d97000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f41d41c81d97000003'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a118f41d41c81d97000003')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:42:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1202355001751076303
  Rendered articles/index.html.erb within layouts/application (216.4ms)
Completed 200 OK in 287ms (Views: 286.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a118f51d41c81d97000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:42:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3279268531736772275
Completed 200 OK in 161ms (Views: 160.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:42:45 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
Completed 200 OK in 27ms (Views: 25.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a118f61d41c81d9700000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a118f61d41c81d9700000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a118f61d41c81d9700000c" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a118f61d41c81d9700000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a118f61d41c81d9700000c')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a118f61d41c81d97000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a118f61d41c81d97000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a118f61d41c81d97000010" for 127.0.0.1 at 2012-11-12 12:42:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a118f61d41c81d97000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a118f61d41c81d97000010')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:43:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2757639226014729717
  Rendered articles/index.html.erb within layouts/application (225.2ms)
Completed 200 OK in 346ms (Views: 345.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119391d41c81d9e000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4588589831613482723
Completed 200 OK in 161ms (Views: 160.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119391d41c81d9e000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119391d41c81d9e000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119391d41c81d9e000004" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119391d41c81d9e000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119391d41c81d9e000004')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.5ms)
Completed 200 OK in 33ms (Views: 31.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119391d41c81d9e000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119391d41c81d9e000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119391d41c81d9e000007" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119391d41c81d9e000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119391d41c81d9e000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.9ms)
Completed 200 OK in 19ms (Views: 17.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:43:53 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.1ms)
Completed 200 OK in 21ms (Views: 18.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000010'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1193a1d41c81d9e000011')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1194f1d41c81da4000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1194f1d41c81da4000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1194f1d41c81da4000007'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:44:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4916276139578286343
  Rendered articles/index.html.erb within layouts/application (227.3ms)
Completed 200 OK in 298ms (Views: 296.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119501d41c81da400000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:44:16 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6917384763804934646
Completed 200 OK in 167ms (Views: 166.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:44:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 84ms (Views: 83.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.0ms)
Completed 200 OK in 23ms (Views: 20.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.5ms)
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119511d41c81da400000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119511d41c81da400000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119511d41c81da400000f" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119511d41c81da400000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119511d41c81da400000f')}).limit(-1)
Completed 200 OK in 11ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119511d41c81da4000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119511d41c81da4000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119511d41c81da4000011" for 127.0.0.1 at 2012-11-12 12:44:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119511d41c81da4000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119511d41c81da4000011')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119891d41c81dfe000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119891d41c81dfe000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119891d41c81dfe000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
  Rendered articles/new.html.erb within layouts/application (82.0ms)
Completed 200 OK in 157ms (Views: 156.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.7ms)
  Rendered articles/new.html.erb within layouts/application (12.4ms)
Completed 200 OK in 18ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119891d41c81dfe000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119891d41c81dfe000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119891d41c81dfe000009" for 127.0.0.1 at 2012-11-12 12:45:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119891d41c81dfe000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119891d41c81dfe000009')}).limit(-1)
Completed 200 OK in 77ms (Views: 75.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1198a1d41c81dfe00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1198a1d41c81dfe00000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1198a1d41c81dfe00000b" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1198a1d41c81dfe00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1198a1d41c81dfe00000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1198a1d41c81dfe00000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7126299648188990320
Completed 200 OK in 177ms (Views: 176.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:45:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3321972446668244005
Completed 200 OK in 176ms (Views: 175.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"NewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"NewCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.2ms)
  Rendered articles/_form.html.erb (27.8ms)
  Rendered articles/new.html.erb within layouts/application (92.5ms)
Completed 200 OK in 172ms (Views: 170.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119bd1d41c81e03000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119bd1d41c81e03000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119bd1d41c81e03000004" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119bd1d41c81e03000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119bd1d41c81e03000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.2ms)
Completed 200 OK in 75ms (Views: 72.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119bd1d41c81e03000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119bd1d41c81e03000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119bd1d41c81e03000006" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119bd1d41c81e03000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119bd1d41c81e03000006')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.5ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119bd1d41c81e0300000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:46:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 268780242910088737
Completed 200 OK in 178ms (Views: 176.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:46:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9116337586188357335
Completed 200 OK in 187ms (Views: 186.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119be1d41c81e0300000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119be1d41c81e03000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119be1d41c81e03000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f51d41c81e09000005'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a119f51d41c81e09000005')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f51d41c81e09000006'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:47:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.7ms)
  Rendered articles/new.html.erb within layouts/application (81.5ms)
Completed 200 OK in 163ms (Views: 161.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (68.4ms)
  Rendered articles/new.html.erb within layouts/application (69.1ms)
Completed 200 OK in 75ms (Views: 72.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a119f61d41c81e0900000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119f61d41c81e0900000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119f61d41c81e0900000c" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119f61d41c81e0900000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119f61d41c81e0900000c')}).limit(-1)
Completed 200 OK in 77ms (Views: 74.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a119f61d41c81e0900000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a119f61d41c81e0900000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a119f61d41c81e0900000e" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a119f61d41c81e0900000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a119f61d41c81e0900000e')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a119f61d41c81e09000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7862532187471309509
Completed 200 OK in 182ms (Views: 180.8ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:47:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3363214904487930751
Completed 200 OK in 185ms (Views: 184.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a681d41c81ecc000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a681d41c81ecc000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11a681d41c81ecc000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:48:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6610565412714130041
  Rendered articles/index.html.erb within layouts/application (252.6ms)
Completed 200 OK in 332ms (Views: 330.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11a691d41c81ecc000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:48:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (67ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6818740012240022344
Completed 200 OK in 192ms (Views: 191.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:48:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.5ms)
  Rendered articles/_form.html.erb (96.2ms)
Completed 200 OK in 113ms (Views: 111.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11a6a1d41c81ecc000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11a6a1d41c81ecc000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11a6a1d41c81ecc000009" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11a6a1d41c81ecc000009"}
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11a6a1d41c81ecc000009')}).limit(-1)
Completed 200 OK in 13ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11a6a1d41c81ecc00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11a6a1d41c81ecc00000b
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11a6a1d41c81ecc00000b" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11a6a1d41c81ecc00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11a6a1d41c81ecc00000b')}).limit(-1)
Completed 200 OK in 10ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (13.8ms)
Completed 200 OK in 20ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.6ms)
Completed 200 OK in 19ms (Views: 16.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:50:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3143042468439709734
  Rendered articles/index.html.erb within layouts/application (254.7ms)
Completed 200 OK in 328ms (Views: 327.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad71d41c81f35000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5469260269929683256
Completed 200 OK in 179ms (Views: 178.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11ad71d41c81f35000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11ad71d41c81f35000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11ad71d41c81f35000004" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11ad71d41c81f35000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11ad71d41c81f35000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:50:47 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (24.8ms)
Completed 200 OK in 37ms (Views: 35.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11ad81d41c81f35000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11ad81d41c81f35000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11ad81d41c81f35000007" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11ad81d41c81f35000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11ad81d41c81f35000007')}).limit(-1)
Completed 200 OK in 8ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 17ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 12:50:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad81d41c81f35000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11ad81d41c81f35000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11ad81d41c81f35000012')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 13:00:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4163749469333581544
  Rendered articles/index.html.erb within layouts/application (245.4ms)
Completed 200 OK in 319ms (Views: 318.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0a1d41c82010000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3037597946126888938
Completed 200 OK in 195ms (Views: 194.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (17.2ms)
Completed 200 OK in 86ms (Views: 85.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (12.2ms)
Completed 200 OK in 19ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 13:00:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (13.5ms)
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a11d0b1d41c8201000000b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11d0b1d41c8201000000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11d0b1d41c8201000000b" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11d0b1d41c8201000000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11d0b1d41c8201000000b')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a11d0b1d41c8201000000d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a11d0b1d41c8201000000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a11d0b1d41c8201000000d" for 127.0.0.1 at 2012-11-12 13:00:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a11d0b1d41c8201000000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a11d0b1d41c8201000000d')}).limit(-1)
Completed 200 OK in 6ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0b1d41c8201000000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a11d0b1d41c8201000000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a11d0b1d41c82010000011'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:43:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (302ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6590630261887065103
  Rendered articles/index.html.erb within layouts/application (605.8ms)
Completed 200 OK in 726ms (Views: 725.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135361d41c80c71000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:43:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5379399581190053204
Completed 200 OK in 177ms (Views: 176.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (125.0ms)
Completed 200 OK in 136ms (Views: 134.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a135371d41c80c71000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a135371d41c80c71000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a135371d41c80c71000006" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a135371d41c80c71000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a135371d41c80c71000006')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.2ms)
Completed 200 OK in 74ms (Views: 73.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a135371d41c80c71000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a135371d41c80c71000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a135371d41c80c71000009" for 127.0.0.1 at 2012-11-12 14:43:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a135371d41c80c71000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a135371d41c80c71000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135371d41c80c7100000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a135371d41c80c7100000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a135371d41c80c7100000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:47:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2309096695876272771
  Rendered articles/index.html.erb within layouts/application (252.8ms)
Completed 200 OK in 374ms (Views: 373.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136361d41c80c9a000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8724334585354896270
Completed 200 OK in 194ms (Views: 193.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136361d41c80c9a000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136361d41c80c9a000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136361d41c80c9a000004" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136361d41c80c9a000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136361d41c80c9a000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (77.5ms)
Completed 200 OK in 88ms (Views: 87.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136361d41c80c9a000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136361d41c80c9a000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136361d41c80c9a000007" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136361d41c80c9a000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136361d41c80c9a000007')}).limit(-1)
Completed 200 OK in 10ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:47:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:47:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.6ms)
Completed 200 OK in 17ms (Views: 14.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"newCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136371d41c80c9a000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136371d41c80c9a000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136371d41c80c9a000012')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000001'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136731d41c80ca1000001')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136731d41c80ca1000006')}])
MONGODB (5ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:35 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4442772913077924737
  Rendered articles/index.html.erb within layouts/application (244.3ms)
Completed 200 OK in 313ms (Views: 312.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136731d41c80ca1000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:35 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1887440158492243079
Completed 200 OK in 188ms (Views: 187.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.4ms)
Completed 200 OK in 84ms (Views: 83.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 17ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136741d41c80ca100000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136741d41c80ca100000d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136741d41c80ca100000d" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136741d41c80ca100000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136741d41c80ca100000d')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136741d41c80ca100000f'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136741d41c80ca100000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136741d41c80ca100000f" for 127.0.0.1 at 2012-11-12 14:48:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136741d41c80ca100000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136741d41c80ca100000f')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:48 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2110370337206888228
  Rendered articles/index.html.erb within layouts/application (254.2ms)
Completed 200 OK in 374ms (Views: 372.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca6000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4944817271009503280
Completed 200 OK in 185ms (Views: 184.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136811d41c80ca6000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136811d41c80ca6000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136811d41c80ca6000004" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136811d41c80ca6000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136811d41c80ca6000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.4ms)
Completed 200 OK in 87ms (Views: 86.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136811d41c80ca6000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136811d41c80ca6000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136811d41c80ca6000007" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136811d41c80ca6000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136811d41c80ca6000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 72ms (Views: 71.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:48:49 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 17ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca600000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136811d41c80ca600000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136811d41c80ca600000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c31d41c80cae000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c31d41c80cae000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136c31d41c80cae000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:49:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3572841799967698430
  Rendered articles/index.html.erb within layouts/application (244.4ms)
Completed 200 OK in 314ms (Views: 312.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136c41d41c80cae000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:49:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2230726157043363589
Completed 200 OK in 190ms (Views: 189.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:49:56 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (15.9ms)
Completed 200 OK in 86ms (Views: 84.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136c51d41c80cae000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136c51d41c80cae000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136c51d41c80cae000009" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136c51d41c80cae000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136c51d41c80cae000009')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136c51d41c80cae00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136c51d41c80cae00000b
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136c51d41c80cae00000b" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136c51d41c80cae00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136c51d41c80cae00000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.4ms)
Completed 200 OK in 73ms (Views: 72.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:49:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 16ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136c51d41c80cae000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136d41d41c80cb3000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (78.4ms)
  Rendered articles/new.html.erb within layouts/application (87.2ms)
Completed 200 OK in 165ms (Views: 163.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136d51d41c80cb3000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136d51d41c80cb3000004
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136d51d41c80cb3000004" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136d51d41c80cb3000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136d51d41c80cb3000004')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (69.5ms)
Completed 200 OK in 75ms (Views: 72.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136d51d41c80cb3000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136d51d41c80cb3000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136d51d41c80cb3000006" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136d51d41c80cb3000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136d51d41c80cb3000006')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 16ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d51d41c80cb300000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:13 -0300
Processing by ArticlesController#index as HTML
MONGODB (37ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8923876755882521521
Completed 200 OK in 249ms (Views: 248.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1805626425982465166
Completed 200 OK in 211ms (Views: 210.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d61d41c80cb300000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136d61d41c80cb3000010'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136d61d41c80cb3000010')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:49 -0300
Processing by ArticlesController#index as HTML
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3402465652835795024
  Rendered articles/index.html.erb within layouts/application (267.1ms)
Completed 200 OK in 386ms (Views: 385.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fa1d41c80cba000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5807689764282745194
Completed 200 OK in 252ms (Views: 251.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a136fa1d41c80cba000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136fa1d41c80cba000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136fa1d41c80cba000004" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136fa1d41c80cba000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136fa1d41c80cba000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.1ms)
Completed 200 OK in 90ms (Views: 88.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a136fa1d41c80cba000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a136fa1d41c80cba000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a136fa1d41c80cba000007" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a136fa1d41c80cba000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a136fa1d41c80cba000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:50:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.6ms)
Completed 200 OK in 74ms (Views: 72.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:50:51 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a136fb1d41c80cba00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a136fb1d41c80cba000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:51:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4214980797024667227
  Rendered articles/index.html.erb within layouts/application (260.7ms)
Completed 200 OK in 380ms (Views: 379.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372c1d41c80cc0000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:51:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4789980624792291184
Completed 200 OK in 253ms (Views: 252.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1372d1d41c80cc0000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1372d1d41c80cc0000004" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1372d1d41c80cc0000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1372d1d41c80cc0000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (38ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.0ms)
Completed 200 OK in 90ms (Views: 89.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 17ms (Views: 14.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1372d1d41c80cc0000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1372d1d41c80cc0000009" for 127.0.0.1 at 2012-11-12 14:51:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1372d1d41c80cc0000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1372d1d41c80cc0000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1372d1d41c80cc000000e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a1372d1d41c80cc0000010')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137521d41c80cc5000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137521d41c80cc5000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a137521d41c80cc5000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:52:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2207078273270160586
  Rendered articles/index.html.erb within layouts/application (266.3ms)
Completed 200 OK in 341ms (Views: 339.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a137531d41c80cc5000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:52:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (7ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2261157194336574951
Completed 200 OK in 209ms (Views: 208.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:52:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.9ms)
  Rendered articles/_form.html.erb (19.0ms)
Completed 200 OK in 29ms (Views: 28.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a137541d41c80cc5000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a137541d41c80cc5000009
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a137541d41c80cc5000009" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a137541d41c80cc5000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a137541d41c80cc5000009')}).limit(-1)
Completed 200 OK in 74ms (Views: 71.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a137541d41c80cc500000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a137541d41c80cc500000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a137541d41c80cc500000b" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a137541d41c80cc500000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a137541d41c80cc500000b')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.7ms)
Completed 200 OK in 20ms (Views: 19.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:52:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (13.6ms)
Completed 200 OK in 19ms (Views: 16.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (16ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a137541d41c80cc5000011'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$AuZvAQAk3z4mXLS27ZJ37O", "password_hash"=>"$2a$10$AuZvAQAk3z4mXLS27ZJ37OyEZkF7H5Q7/0mCf9zAYtHFbx1IP/33."}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a137541d41c80cc5000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a1378c1d41c80ccc000001'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$kaWuOwLHXfehOAGucBWX9e", "password_hash"=>"$2a$10$kaWuOwLHXfehOAGucBWX9eHra.2tfCaZkClsHD1AepJs5hndQjN6a"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000006'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000006')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc000008'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:53:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2893355463817101385
  Rendered articles/index.html.erb within layouts/application (257.1ms)
Completed 200 OK in 326ms (Views: 325.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1378d1d41c80ccc00000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 14:53:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3335594957657407889
Completed 200 OK in 202ms (Views: 201.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.0ms)
Completed 200 OK in 26ms (Views: 24.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (67.6ms)
Completed 200 OK in 73ms (Views: 70.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1378e1d41c80ccc000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1378e1d41c80ccc000010" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1378e1d41c80ccc000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1378e1d41c80ccc000010')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1378e1d41c80ccc000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1378e1d41c80ccc000012" for 127.0.0.1 at 2012-11-12 14:53:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1378e1d41c80ccc000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1378e1d41c80ccc000012')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a1378e1d41c80ccc000015')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].remove({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].remove({})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (7ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"ThisNewCategory", "_id"=>BSON::ObjectId('50a13dc1898d650b2c000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:19:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a13dc1898d650b2c000003'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a13dc1898d650b2c000003
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a13dc1898d650b2c000003" for 127.0.0.1 at 2012-11-12 15:19:45 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a13dc1898d650b2c000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a13dc1898d650b2c000003')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (58.7ms)
Completed 200 OK in 153ms (Views: 151.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.5ms)
  Rendered articles/_form.html.erb (120.9ms)
Completed 200 OK in 163ms (Views: 161.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a13dc2898d650b2c000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a13dc2898d650b2c000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a13dc2898d650b2c000006" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a13dc2898d650b2c000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a13dc2898d650b2c000006')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.9ms)
Completed 200 OK in 11ms (Views: 10.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (43.5ms)
Completed 200 OK in 47ms (Views: 45.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a13dc2898d650b2c00000a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8244984791667654766
Completed 200 OK in 50ms (Views: 49.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:19:46 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2564585505540358306
Completed 200 OK in 96ms (Views: 96.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola2@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a13dc2898d650b2c000014'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a13dc2898d650b2c000016'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a13dc2898d650b2c000016')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:34:08 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 996502407584573145
  Rendered articles/index.html.erb within layouts/application (93.6ms)
Completed 200 OK in 148ms (Views: 147.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14120898d650bae000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:34:08 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 443615528178050913
Completed 200 OK in 77ms (Views: 76.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:34:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14120898d650bae000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14120898d650bae000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14120898d650bae000004" for 127.0.0.1 at 2012-11-12 15:34:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14120898d650bae000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14120898d650bae000004')}).limit(-1)
Completed 200 OK in 12ms (Views: 9.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:34:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (21.6ms)
Completed 200 OK in 69ms (Views: 68.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:34:09 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14121898d650bae000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14121898d650bae000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14121898d650bae000007" for 127.0.0.1 at 2012-11-12 15:34:09 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14121898d650bae000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14121898d650bae000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:34:09 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (55.0ms)
Completed 200 OK in 59ms (Views: 58.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:34:09 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (7.8ms)
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14121898d650bae00000b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola2@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14121898d650bae000015'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14121898d650bae000016'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14121898d650bae000016')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:39:36 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2080099643930929768
  Rendered articles/index.html.erb within layouts/application (96.2ms)
Completed 200 OK in 185ms (Views: 184.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14269898d650bcc000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9081917464885553906
Completed 200 OK in 99ms (Views: 98.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (40.3ms)
Completed 200 OK in 99ms (Views: 98.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14269898d650bcc000005'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14269898d650bcc000005
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14269898d650bcc000005" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14269898d650bcc000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14269898d650bcc000005')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14269898d650bcc000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14269898d650bcc000007
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14269898d650bcc000007" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14269898d650bcc000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14269898d650bcc000007')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (40.6ms)
Completed 200 OK in 43ms (Views: 42.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:39:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (6.6ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14269898d650bcc00000b'), "name"=>"category"}])
MONGODB (16ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14269898d650bcc000014'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14269898d650bcc000016'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14269898d650bcc000016')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (55.0ms)
  Rendered articles/new.html.erb within layouts/application (65.4ms)
Completed 200 OK in 155ms (Views: 154.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (8.0ms)
  Rendered articles/new.html.erb within layouts/application (8.7ms)
Completed 200 OK in 50ms (Views: 47.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (7.3ms)
Completed 200 OK in 12ms (Views: 11.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14287898d650bd5000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14287898d650bd5000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14287898d650bd5000004" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14287898d650bd5000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14287898d650bd5000004')}).limit(-1)
Completed 200 OK in 59ms (Views: 57.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14287898d650bd5000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14287898d650bd5000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14287898d650bd5000006" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14287898d650bd5000006"}
MONGODB (20ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14287898d650bd5000006')}).limit(-1)
Completed 200 OK in 28ms (Views: 5.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14287898d650bd5000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9138073324762161812
Completed 200 OK in 56ms (Views: 55.8ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:40:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7213288176350913230
Completed 200 OK in 92ms (Views: 91.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14287898d650bd500000c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14288898d650bd5000014'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14288898d650bd5000014')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14288898d650bd5000015'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a142b3898d650be5000002'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a142b3898d650be500000a'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a142b3898d650be500000d'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a142b3898d650be500000d')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (32.1ms)
  Rendered articles/new.html.erb within layouts/application (80.6ms)
Completed 200 OK in 145ms (Views: 144.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a142b3898d650be500000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a142b3898d650be500000f
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a142b3898d650be500000f" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a142b3898d650be500000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a142b3898d650be500000f')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (52.4ms)
Completed 200 OK in 63ms (Views: 60.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a142b3898d650be5000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a142b3898d650be5000011
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a142b3898d650be5000011" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a142b3898d650be5000011"}
MONGODB (24ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a142b3898d650be5000011')}).limit(-1)
Completed 200 OK in 28ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.7ms)
Completed 200 OK in 16ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (9.5ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a142b3898d650be5000015'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 13790267940048480
Completed 200 OK in 101ms (Views: 100.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:40:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3221404584852098758
Completed 200 OK in 58ms (Views: 57.9ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1430a898d650bf0000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1430a898d650bf0000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1430a898d650bf0000004'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 207903943402840106
  Rendered articles/index.html.erb within layouts/application (122.1ms)
Completed 200 OK in 179ms (Views: 178.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1430a898d650bf0000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1064137555402678414
Completed 200 OK in 89ms (Views: 88.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1430a898d650bf0000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1430a898d650bf0000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1430a898d650bf0000008" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1430a898d650bf0000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1430a898d650bf0000008')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (17.6ms)
Completed 200 OK in 33ms (Views: 31.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (8.4ms)
Completed 200 OK in 14ms (Views: 12.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1430a898d650bf000000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1430a898d650bf000000d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1430a898d650bf000000d" for 127.0.0.1 at 2012-11-12 15:42:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1430a898d650bf000000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1430a898d650bf000000d')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1430a898d650bf000000f'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1433b898d650bfb000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1433b898d650bfb000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1433b898d650bfb000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1433b898d650bfb000005'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:43:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1838112948727226881
  Rendered articles/index.html.erb within layouts/application (134.0ms)
Completed 200 OK in 185ms (Views: 185.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1433c898d650bfb000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2065913156499055216
Completed 200 OK in 89ms (Views: 89.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1433c898d650bfb00000a'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1433c898d650bfb00000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1433c898d650bfb00000a" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1433c898d650bfb00000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1433c898d650bfb00000a')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (19.3ms)
Completed 200 OK in 33ms (Views: 32.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1433c898d650bfb00000d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1433c898d650bfb00000d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1433c898d650bfb00000d" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1433c898d650bfb00000d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1433c898d650bfb00000d')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.5ms)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (6.5ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14356898d650c05000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14356898d650c05000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14356898d650c05000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14356898d650c05000005'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14356898d650c05000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"ThisNewCategory"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:43:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3493048566105967060
  Rendered articles/index.html.erb within layouts/application (138.5ms)
Completed 200 OK in 197ms (Views: 196.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14356898d650c05000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:43:34 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4478178295597173310
Completed 200 OK in 89ms (Views: 88.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:34 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14356898d650c05000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14356898d650c05000012
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14356898d650c05000012" for 127.0.0.1 at 2012-11-12 15:43:34 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14356898d650c05000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14356898d650c05000012')}).limit(-1)
Completed 200 OK in 15ms (Views: 13.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:43:34 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (16.8ms)
Completed 200 OK in 63ms (Views: 62.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14357898d650c05000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14357898d650c05000015
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14357898d650c05000015" for 127.0.0.1 at 2012-11-12 15:43:35 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14357898d650c05000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14357898d650c05000015')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:43:35 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (8.3ms)
Completed 200 OK in 12ms (Views: 12.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:43:35 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (7.2ms)
Completed 200 OK in 11ms (Views: 9.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (53.5ms)
  Rendered articles/new.html.erb within layouts/application (65.0ms)
Completed 200 OK in 163ms (Views: 161.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (7.3ms)
  Rendered articles/new.html.erb within layouts/application (7.9ms)
Completed 200 OK in 43ms (Views: 41.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (8.3ms)
Completed 200 OK in 11ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a143a2898d650c17000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a143a2898d650c17000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a143a2898d650c17000004" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a143a2898d650c17000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a143a2898d650c17000004')}).limit(-1)
Completed 200 OK in 60ms (Views: 57.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a143a2898d650c17000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a143a2898d650c17000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a143a2898d650c17000006" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a143a2898d650c17000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a143a2898d650c17000006')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a143a2898d650c17000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:44:50 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7292131191651579070
Completed 200 OK in 74ms (Views: 73.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:44:51 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 232180666223047944
Completed 200 OK in 94ms (Views: 93.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a143a3898d650c17000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a143a3898d650c17000014'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a143a3898d650c17000015'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a143a3898d650c17000015')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a143a3898d650c17000016'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:56:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1008406394778094749
  Rendered articles/index.html.erb within layouts/application (282.2ms)
Completed 200 OK in 402ms (Views: 401.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a146691d41c816df000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:56:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8793564613447454204
Completed 200 OK in 218ms (Views: 217.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1466a1d41c816df000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1466a1d41c816df000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1466a1d41c816df000004" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1466a1d41c816df000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1466a1d41c816df000004')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.1ms)
Completed 200 OK in 31ms (Views: 29.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1466a1d41c816df000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1466a1d41c816df000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1466a1d41c816df000007" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1466a1d41c816df000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1466a1d41c816df000007')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:56:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1466a1d41c816df00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1466a1d41c816df00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1466a1d41c816df00000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a1466a1d41c816df000012'), "name"=>"user", "email"=>"hola@hola.com", "role"=>"reader", "password_salt"=>"$2a$10$GztngRy15V1RsefcjUfKU.", "password_hash"=>"$2a$10$GztngRy15V1RsefcjUfKU.3hIydYNNy06cVAyvFLJKGRe.WEPQ9x6"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1466b1d41c816df000016'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1466b1d41c816df000019'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:59:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5887027856172492691
  Rendered articles/index.html.erb within layouts/application (280.7ms)
Completed 200 OK in 401ms (Views: 399.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a147141d41c81700000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 15:59:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3239133879138625777
Completed 200 OK in 219ms (Views: 218.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (21.3ms)
Completed 200 OK in 32ms (Views: 30.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (68.3ms)
Completed 200 OK in 74ms (Views: 71.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a147151d41c81700000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a147151d41c81700000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a147151d41c81700000007" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a147151d41c81700000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a147151d41c81700000007')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a147151d41c81700000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a147151d41c81700000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a147151d41c81700000009" for 127.0.0.1 at 2012-11-12 15:59:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a147151d41c81700000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a147151d41c81700000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a147151d41c8170000000b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a147151d41c8170000000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a147151d41c81700000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a147151d41c81700000011'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a147151d41c81700000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a147151d41c81700000012')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a147151d41c81700000014'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b000001'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b000003'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b000006'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "name"=>"Agencia", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b00000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1499b1d41c8174b00000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1499b1d41c8174b00000d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:10:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3405725116406401248
  Rendered articles/index.html.erb within layouts/application (337.6ms)
Completed 200 OK in 408ms (Views: 406.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1499c1d41c8174b000016'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2939637279784143368
Completed 200 OK in 221ms (Views: 220.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1499c1d41c8174b000018'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1499c1d41c8174b000018
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1499c1d41c8174b000018" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1499c1d41c8174b000018"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1499c1d41c8174b000018')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 84ms (Views: 82.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 17ms (Views: 14.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:10:20 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.7ms)
Completed 200 OK in 74ms (Views: 73.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:10:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1499d1d41c8174b00001d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1499d1d41c8174b00001d
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1499d1d41c8174b00001d" for 127.0.0.1 at 2012-11-12 16:10:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1499d1d41c8174b00001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1499d1d41c8174b00001d')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.5ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:12:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2050960541392383467
  Rendered articles/index.html.erb within layouts/application (282.8ms)
Completed 200 OK in 403ms (Views: 402.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14a071d41c81760000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6808191615522910029
Completed 200 OK in 227ms (Views: 226.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14a081d41c81760000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14a081d41c81760000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14a081d41c81760000004" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14a081d41c81760000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14a081d41c81760000004')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (57.7ms)
  Rendered articles/_form.html.erb (79.5ms)
Completed 200 OK in 89ms (Views: 88.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14a081d41c81760000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14a081d41c81760000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14a081d41c81760000007" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14a081d41c81760000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14a081d41c81760000007')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:12:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (70.1ms)
Completed 200 OK in 76ms (Views: 73.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c8176000000d'), "name"=>"Agencia", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000010'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14a081d41c81760000011')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000012'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000014'), "name"=>"ThisNewCategory"}])
MONGODB (13ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000015'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14a081d41c81760000017'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000002'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000004'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000006'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14b541d41c81789000014'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a14b541d41c81789000014')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:17:40 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (17.2ms)
  Rendered articles/new.html.erb within layouts/application (81.8ms)
Completed 200 OK in 157ms (Views: 155.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:17:40 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a14b541d41c8178900001d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14b541d41c8178900001d
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14b541d41c8178900001d" for 127.0.0.1 at 2012-11-12 16:17:40 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14b541d41c8178900001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14b541d41c8178900001d')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (75.0ms)
Completed 200 OK in 82ms (Views: 79.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a14b551d41c8178900001f'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a14b551d41c8178900001f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a14b551d41c8178900001f" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a14b551d41c8178900001f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a14b551d41c8178900001f')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.4ms)
Completed 200 OK in 75ms (Views: 73.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a14b551d41c81789000023'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8747326189540885651
Completed 200 OK in 299ms (Views: 298.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:17:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4131254549942781378
Completed 200 OK in 237ms (Views: 236.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a152a81d41c819d8000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a152a81d41c819d800000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a152a81d41c819d800000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a152a81d41c819d800000e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:48:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1799803403818951904
  Rendered articles/index.html.erb within layouts/application (339.9ms)
Completed 200 OK in 409ms (Views: 408.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a152a91d41c819d8000019'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 16:48:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1593160930796693007
Completed 200 OK in 283ms (Views: 282.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:48:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a152a91d41c819d800001b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a152a91d41c819d800001b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a152a91d41c819d800001b" for 127.0.0.1 at 2012-11-12 16:48:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a152a91d41c819d800001b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a152a91d41c819d800001b')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.5ms)
Completed 200 OK in 26ms (Views: 25.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a152aa1d41c819d800001e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a152aa1d41c819d800001e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a152aa1d41c819d800001e" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a152aa1d41c819d800001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a152aa1d41c819d800001e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 16ms (Views: 14.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a152aa1d41c819d8000024'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a152aa1d41c819d8000025'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a152aa1d41c819d8000025')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users" for 127.0.0.1 at 2012-11-12 16:48:58 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 12ms (Views: 10.8ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:14:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.9ms)
  Rendered articles/_form.html.erb (81.7ms)
  Rendered articles/new.html.erb within layouts/application (90.2ms)
Completed 200 OK in 224ms (Views: 222.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:14:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (70.3ms)
  Rendered articles/new.html.erb within layouts/application (71.0ms)
Completed 200 OK in 77ms (Views: 73.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:14:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:14:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a158ae1d41c81b94000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a158ae1d41c81b94000004
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a158ae1d41c81b94000004" for 127.0.0.1 at 2012-11-12 17:14:38 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a158ae1d41c81b94000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a158ae1d41c81b94000004')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 80ms (Views: 77.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:14:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a158af1d41c81b94000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a158af1d41c81b94000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a158af1d41c81b94000006" for 127.0.0.1 at 2012-11-12 17:14:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a158af1d41c81b94000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a158af1d41c81b94000006')}).limit(-1)
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b94000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:14:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8921233736096443399
Completed 200 OK in 246ms (Views: 244.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:14:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3918022987206520065
Completed 200 OK in 304ms (Views: 303.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:14:39 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 14ms (Views: 13.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b9400000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a158af1d41c81b9400000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b9400000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b94000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b94000012'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b94000014'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158af1d41c81b94000015'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:15:10 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (15.4ms)
Completed 200 OK in 146ms (Views: 144.5ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by UsersController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 11ms (Views: 10.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3800235583582955826
Completed 200 OK in 370ms (Views: 369.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158cf1d41c81b9d00000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1959019709794020013
Completed 200 OK in 237ms (Views: 236.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.1ms)
Completed 200 OK in 29ms (Views: 25.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a158cf1d41c81b9d000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a158cf1d41c81b9d000010
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a158cf1d41c81b9d000010" for 127.0.0.1 at 2012-11-12 17:15:11 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a158cf1d41c81b9d000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a158cf1d41c81b9d000010')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 10ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:15:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.8ms)
Completed 200 OK in 16ms (Views: 15.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:15:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 16ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:15:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a158d01d41c81b9d000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a158d01d41c81b9d000014
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a158d01d41c81b9d000014" for 127.0.0.1 at 2012-11-12 17:15:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a158d01d41c81b9d000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a158d01d41c81b9d000014')}).limit(-1)
Completed 200 OK in 78ms (Views: 76.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000017'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000018'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a158d01d41c81b9d000018')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000022'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000023'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a158d01d41c81b9d000027'), "name"=>"category"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:18:09 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (10.1ms)
Completed 200 OK in 141ms (Views: 139.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:18:09 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:18:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4989114365413532262
Completed 200 OK in 373ms (Views: 372.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc300000d'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2730173399799538660
Completed 200 OK in 240ms (Views: 239.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.6ms)
Completed 200 OK in 27ms (Views: 25.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.8ms)
Completed 200 OK in 18ms (Views: 15.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a159821d41c81bc3000012'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a159821d41c81bc3000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a159821d41c81bc3000012" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a159821d41c81bc3000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a159821d41c81bc3000012')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a159821d41c81bc3000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a159821d41c81bc3000014
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a159821d41c81bc3000014" for 127.0.0.1 at 2012-11-12 17:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a159821d41c81bc3000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a159821d41c81bc3000014')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc3000016'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a159821d41c81bc3000016')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc3000018'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc300001b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc300001c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc300001e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159821d41c81bc3000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159cc1d41c81bd0000002'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159cc1d41c81bd0000004'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159cc1d41c81bd0000006'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a159cc1d41c81bd0000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:19:24 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.9ms)
  Rendered articles/_form.html.erb (75.1ms)
  Rendered articles/new.html.erb within layouts/application (83.7ms)
Completed 200 OK in 160ms (Views: 158.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a159cd1d41c81bd0000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a159cd1d41c81bd0000009
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a159cd1d41c81bd0000009" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a159cd1d41c81bd0000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a159cd1d41c81bd0000009')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (72.0ms)
Completed 200 OK in 77ms (Views: 75.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a159cd1d41c81bd000000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a159cd1d41c81bd000000b
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a159cd1d41c81bd000000b" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a159cd1d41c81bd000000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a159cd1d41c81bd000000b')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 15ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 16ms (Views: 13.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159cd1d41c81bd000000f'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 764774916083337930
Completed 200 OK in 250ms (Views: 249.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:19:25 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7882468407768435656
Completed 200 OK in 322ms (Views: 321.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159ce1d41c81bd000001b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a159ce1d41c81bd000001e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a159ce1d41c81bd000001e')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:19:26 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 73ms (Views: 72.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:19:26 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:20:22 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (12.5ms)
Completed 200 OK in 161ms (Views: 159.9ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:20:23 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"user@example.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (5.7ms)
Completed 200 OK in 14ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:20:23 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a071d41c81be6000014'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15a071d41c81be6000014')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a071d41c81be6000016'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:20:23 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6065766957469642091
Completed 200 OK in 322ms (Views: 321.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a071d41c81be6000019'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:20:23 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5452937770723421874
Completed 200 OK in 322ms (Views: 321.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (2.1ms)
  Rendered articles/_form.html.erb (102.2ms)
Completed 200 OK in 113ms (Views: 111.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.4ms)
Completed 200 OK in 19ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (73.5ms)
Completed 200 OK in 78ms (Views: 76.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15a081d41c81be600001e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a081d41c81be600001e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a081d41c81be600001e" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a081d41c81be600001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a081d41c81be600001e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15a081d41c81be6000020'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a081d41c81be6000020
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a081d41c81be6000020" for 127.0.0.1 at 2012-11-12 17:20:24 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a081d41c81be6000020"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a081d41c81be6000020')}).limit(-1)
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a081d41c81be6000023'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a081d41c81be6000024'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a081d41c81be6000027'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a081d41c81be6000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a281d41c81c31000012'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a281d41c81c31000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a281d41c81c31000016'), "name"=>"ThisNewCategory"}])
MONGODB (326ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a281d41c81c31000017'), "name"=>"category"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:20:56 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (65.6ms)
Completed 200 OK in 141ms (Views: 139.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:20:57 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"user@example.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (5.3ms)
Completed 200 OK in 13ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:20:57 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 80ms (Views: 79.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a291d41c81c3100001c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a291d41c81c3100001e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15a291d41c81c3100001e')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:20:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6038014553840169287
Completed 200 OK in 325ms (Views: 324.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a291d41c81c31000020'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:20:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6768617950070452881
Completed 200 OK in 321ms (Views: 320.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:20:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.3ms)
Completed 200 OK in 87ms (Views: 85.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15a2a1d41c81c31000023'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a2a1d41c81c31000023
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a2a1d41c81c31000023" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a2a1d41c81c31000023"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a2a1d41c81c31000023')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15a2a1d41c81c31000025'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a2a1d41c81c31000025
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a2a1d41c81c31000025" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a2a1d41c81c31000025"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a2a1d41c81c31000025')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:20:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 17ms (Views: 15.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:21:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6297127418252028784
  Rendered articles/index.html.erb within layouts/application (383.0ms)
Completed 200 OK in 453ms (Views: 452.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a591d41c81c45000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:21:45 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6502657610708741373
Completed 200 OK in 309ms (Views: 308.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:21:45 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15a591d41c81c45000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a591d41c81c45000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a591d41c81c45000004" for 127.0.0.1 at 2012-11-12 17:21:45 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a591d41c81c45000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a591d41c81c45000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:21:45 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (22.5ms)
Completed 200 OK in 93ms (Views: 91.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15a5a1d41c81c45000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a5a1d41c81c45000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a5a1d41c81c45000007" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a5a1d41c81c45000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a5a1d41c81c45000007')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (73.3ms)
Completed 200 OK in 81ms (Views: 79.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 16ms (Views: 14.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c4500001b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c4500001e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c45000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c45000021'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c45000024'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a5a1d41c81c45000025'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15a5a1d41c81c45000025')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 12ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:21:46 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.7ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:22:38 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6972432839963425698
  Rendered articles/index.html.erb within layouts/application (367.0ms)
Completed 200 OK in 437ms (Views: 436.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a8e1d41c81c4f000012'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:22:38 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 2360721451164220651
Completed 200 OK in 306ms (Views: 305.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.2ms)
Completed 200 OK in 26ms (Views: 24.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a8f1d41c81c4f000015
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a8f1d41c81c4f000015" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a8f1d41c81c4f000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a8f1d41c81c4f000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 13ms (Views: 9.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000017'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15a8f1d41c81c4f000017
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15a8f1d41c81c4f000017" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15a8f1d41c81c4f000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15a8f1d41c81c4f000017')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (12.1ms)
Completed 200 OK in 16ms (Views: 15.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 16ms (Views: 13.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f00001c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f00001e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f00001e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000021'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15a8f1d41c81c4f000025'), "name"=>"category"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 11ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 12ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:22:39 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:24:00 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (15.4ms)
Completed 200 OK in 146ms (Views: 144.9ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:24:00 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"user@example.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (5.3ms)
Completed 200 OK in 14ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:24:00 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:24:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8854744434014354752
Completed 200 OK in 390ms (Views: 389.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ae01d41c81c63000005'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:24:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 63246893669088974
Completed 200 OK in 321ms (Views: 320.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15ae11d41c81c63000007'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15ae11d41c81c63000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15ae11d41c81c63000007" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15ae11d41c81c63000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15ae11d41c81c63000007')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (76.0ms)
Completed 200 OK in 86ms (Views: 84.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15ae11d41c81c6300000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15ae11d41c81c6300000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15ae11d41c81c6300000a" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15ae11d41c81c6300000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15ae11d41c81c6300000a')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 15ms (Views: 13.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:24:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (71.6ms)
Completed 200 OK in 77ms (Views: 75.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c6300000e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c63000011'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c63000012'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c63000014'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c6300001e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ae11d41c81c6300001f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15ae11d41c81c6300001f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:26:16 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3369129173255524784
  Rendered articles/index.html.erb within layouts/application (390.8ms)
Completed 200 OK in 461ms (Views: 460.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15b691d41c81c7800000b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:26:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8424935623500829457
Completed 200 OK in 310ms (Views: 309.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:26:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.3ms)
Completed 200 OK in 26ms (Views: 25.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 18ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15b6a1d41c81c78000010'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15b6a1d41c81c78000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15b6a1d41c81c78000010" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15b6a1d41c81c78000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15b6a1d41c81c78000010')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15b6a1d41c81c78000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15b6a1d41c81c78000012
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15b6a1d41c81c78000012" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15b6a1d41c81c78000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15b6a1d41c81c78000012')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c78000015'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c78000016'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c78000018'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c7800001a'), "name"=>"category"}])


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:26:18 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 12ms (Views: 11.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c7800001c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15b6a1d41c81c7800001c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15b6a1d41c81c7800001e'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:27:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5950275527398808249
  Rendered articles/index.html.erb within layouts/application (374.2ms)
Completed 200 OK in 444ms (Views: 443.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15bbd1d41c81c8e000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:27:41 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6608261716827331645
Completed 200 OK in 311ms (Views: 310.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:27:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15bbd1d41c81c8e000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15bbd1d41c81c8e000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15bbd1d41c81c8e000004" for 127.0.0.1 at 2012-11-12 17:27:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15bbd1d41c81c8e000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15bbd1d41c81c8e000004')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.9ms)
  Rendered articles/_form.html.erb (22.2ms)
Completed 200 OK in 92ms (Views: 91.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15bbe1d41c81c8e000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15bbe1d41c81c8e000007" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15bbe1d41c81c8e000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15bbe1d41c81c8e000007')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.0ms)
Completed 200 OK in 16ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 12ms (Views: 10.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"user@example.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Completed 200 OK in 13ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:27:42 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e00000e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000011'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000012'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000014'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000020'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000021'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15bbe1d41c81c8e000021')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15c321d41c81ca2000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15c321d41c81ca2000014'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15c321d41c81ca2000016'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15c321d41c81ca2000017'), "name"=>"category"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:29:39 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (65.4ms)
Completed 200 OK in 141ms (Views: 139.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:29:39 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (10.8ms)
Completed 200 OK in 19ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:29:39 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 69ms (Views: 68.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:29:39 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8670269657301658176
Completed 200 OK in 339ms (Views: 338.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15c341d41c81ca200001e'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#index as HTML
MONGODB (68ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 132631652249643932
Completed 200 OK in 330ms (Views: 329.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.8ms)
Completed 200 OK in 97ms (Views: 95.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (13.0ms)
Completed 200 OK in 20ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15c341d41c81ca2000022'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15c341d41c81ca2000022
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15c341d41c81ca2000022" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15c341d41c81ca2000022"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15c341d41c81ca2000022')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (16.8ms)
Completed 200 OK in 23ms (Views: 21.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15c341d41c81ca2000025'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15c341d41c81ca2000025
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15c341d41c81ca2000025" for 127.0.0.1 at 2012-11-12 17:29:40 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15c341d41c81ca2000025"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15c341d41c81ca2000025')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 11ms (Views: 8.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15c341d41c81ca2000027'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15c341d41c81ca2000027')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15c341d41c81ca200002a'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d381d41c81cb9000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15d381d41c81cb9000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d381d41c81cb9000003'), "headline"=>"uniq"}])


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15d381d41c81cb9000005'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15d381d41c81cb9000005
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15d381d41c81cb9000005" for 127.0.0.1 at 2012-11-12 17:34:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15d381d41c81cb9000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15d381d41c81cb9000005')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (118.7ms)
Completed 200 OK in 191ms (Views: 189.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:34:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.9ms)
  Rendered articles/_form.html.erb (17.1ms)
Completed 200 OK in 85ms (Views: 83.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 18ms (Views: 15.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15d391d41c81cb900000a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15d391d41c81cb900000a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15d391d41c81cb900000a" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15d391d41c81cb900000a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15d391d41c81cb900000a')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d391d41c81cb900000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 324526088045995771
Completed 200 OK in 333ms (Views: 332.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1497856809091999821
Completed 200 OK in 333ms (Views: 332.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 12ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 14ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:34:01 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d391d41c81cb9000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d391d41c81cb9000027'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d391d41c81cb9000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d391d41c81cb900002a'), "name"=>"category"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:34:32 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (66.4ms)
Completed 200 OK in 142ms (Views: 140.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:34:32 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (5.3ms)
Completed 200 OK in 13ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:34:32 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:34:32 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6940821915025318821
Completed 200 OK in 339ms (Views: 338.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000010'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#index as HTML
MONGODB (66ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9071853695092958464
Completed 200 OK in 333ms (Views: 332.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (16.2ms)
Completed 200 OK in 89ms (Views: 87.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.6ms)
Completed 200 OK in 18ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.2ms)
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15d591d41c81ccc000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15d591d41c81ccc000015
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15d591d41c81ccc000015" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15d591d41c81ccc000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15d591d41c81ccc000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15d591d41c81ccc000017'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15d591d41c81ccc000017
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15d591d41c81ccc000017" for 127.0.0.1 at 2012-11-12 17:34:33 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15d591d41c81ccc000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15d591d41c81ccc000017')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000019'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15d591d41c81ccc000019')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc00001b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15d591d41c81ccc000029'), "name"=>"category"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:37:06 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (66.0ms)
Completed 200 OK in 142ms (Views: 140.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:37:07 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 11ms (Views: 9.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15df31d41c81ce400000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15df31d41c81ce400000e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15df31d41c81ce4000010'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:37:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (71ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5629112707821534976
Completed 200 OK in 421ms (Views: 420.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15df31d41c81ce4000013'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:37:07 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8740626736348594281
Completed 200 OK in 341ms (Views: 340.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (76.8ms)
Completed 200 OK in 86ms (Views: 85.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 18ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (71.4ms)
Completed 200 OK in 75ms (Views: 74.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15df41d41c81ce4000018'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15df41d41c81ce4000018
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15df41d41c81ce4000018" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15df41d41c81ce4000018"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15df41d41c81ce4000018')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 14ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15df41d41c81ce400001a'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15df41d41c81ce400001a
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15df41d41c81ce400001a" for 127.0.0.1 at 2012-11-12 17:37:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15df41d41c81ce400001a"}
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15df41d41c81ce400001a')}).limit(-1)
Completed 200 OK in 12ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15df41d41c81ce4000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15df41d41c81ce4000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15df41d41c81ce4000027'), "name"=>"ThisNewCategory"}])
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15df41d41c81ce4000028'), "name"=>"category"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:38:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1441643366589151107
  Rendered articles/index.html.erb within layouts/application (387.2ms)
Completed 200 OK in 458ms (Views: 457.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e431d41c81cf7000009'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:38:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5326977452358514970
Completed 200 OK in 271ms (Views: 270.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (74.2ms)
Completed 200 OK in 84ms (Views: 83.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (14.9ms)
Completed 200 OK in 24ms (Views: 20.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (69.4ms)
Completed 200 OK in 74ms (Views: 73.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15e441d41c81cf700000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15e441d41c81cf700000e
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15e441d41c81cf700000e" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15e441d41c81cf700000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15e441d41c81cf700000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15e441d41c81cf7000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15e441d41c81cf7000010
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15e441d41c81cf7000010" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15e441d41c81cf7000010"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15e441d41c81cf7000010')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e441d41c81cf7000012'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15e441d41c81cf7000012')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e441d41c81cf7000014'), "headline"=>"uniq"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 10ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 13ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:38:28 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e441d41c81cf7000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e451d41c81cf7000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e451d41c81cf700002b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e451d41c81cf700002d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:39:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (81.3ms)
  Rendered articles/new.html.erb within layouts/application (89.8ms)
Completed 200 OK in 167ms (Views: 165.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (69.8ms)
  Rendered articles/new.html.erb within layouts/application (70.5ms)
Completed 200 OK in 77ms (Views: 73.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15e681d41c81d02000003'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15e681d41c81d02000003
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15e681d41c81d02000003" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15e681d41c81d02000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15e681d41c81d02000003')}).limit(-1)
Completed 200 OK in 76ms (Views: 74.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.3ms)
Completed 200 OK in 15ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15e681d41c81d02000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15e681d41c81d02000006
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15e681d41c81d02000006" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15e681d41c81d02000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15e681d41c81d02000006')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 66ms (Views: 64.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e681d41c81d02000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:39:04 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 3435276299589437759
Completed 200 OK in 378ms (Views: 377.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5241878185831353027
Completed 200 OK in 305ms (Views: 303.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000014'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000017'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000018'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000022'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15e691d41c81d02000022')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15e691d41c81d02000024'), "headline"=>"uniq"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 12ms (Views: 10.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"user@example.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Completed 200 OK in 12ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 69ms (Views: 68.4ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 11ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:39:05 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.4ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (66.8ms)
Completed 200 OK in 142ms (Views: 140.6ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (7.6ms)
Completed 200 OK in 16ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"hola", "email"=>"hola@hola.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Completed 200 OK in 69ms (Views: 66.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 17ms (Views: 16.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ef01d41c81d1f000015'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ef01d41c81d1f000016'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ef01d41c81d1f000018'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15ef01d41c81d1f000019'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:41:20 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7285998558180465979
Completed 200 OK in 420ms (Views: 419.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ef11d41c81d1f00001b'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8424389793287954151
Completed 200 OK in 366ms (Views: 365.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (78.1ms)
Completed 200 OK in 88ms (Views: 86.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15ef11d41c81d1f00001e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15ef11d41c81d1f00001e
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15ef11d41c81d1f00001e" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15ef11d41c81d1f00001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15ef11d41c81d1f00001e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.3ms)
  Rendered articles/_form.html.erb (77.9ms)
Completed 200 OK in 83ms (Views: 81.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15ef11d41c81d1f000022'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15ef11d41c81d1f000022
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15ef11d41c81d1f000022" for 127.0.0.1 at 2012-11-12 17:41:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15ef11d41c81d1f000022"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15ef11d41c81d1f000022')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ef21d41c81d1f000025'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15ef21d41c81d1f000026'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15ef21d41c81d1f000026')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:43:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7972054579386541429
  Rendered articles/index.html.erb within layouts/application (400.4ms)
Completed 200 OK in 472ms (Views: 471.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f551d41c81d34000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:43:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8050772069972731668
Completed 200 OK in 339ms (Views: 338.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (23.3ms)
Completed 200 OK in 33ms (Views: 32.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.8ms)
Completed 200 OK in 18ms (Views: 15.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15f561d41c81d34000007'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15f561d41c81d34000007
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15f561d41c81d34000007" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15f561d41c81d34000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15f561d41c81d34000007')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15f561d41c81d34000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15f561d41c81d34000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15f561d41c81d34000009" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15f561d41c81d34000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15f561d41c81d34000009')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d34000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d34000014'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d34000016'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d34000017'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d34000019'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15f561d41c81d34000019')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f561d41c81d3400001b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 11ms (Views: 9.9ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:43:02 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 14ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:43:03 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:43:03 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"hola", "email"=>"hola2@hola.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola2@hola.com"}, "fields"=>nil}).limit(-1)
Completed 200 OK in 10ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:43:03 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 11ms (Views: 9.8ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:44:08 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 7083483196542512529
  Rendered articles/index.html.erb within layouts/application (405.4ms)
Completed 200 OK in 484ms (Views: 482.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f991d41c81d47000002'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 17:44:09 -0300
Processing by ArticlesController#index as HTML
MONGODB (8ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4814450346273107765
Completed 200 OK in 340ms (Views: 339.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:44:09 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a15f991d41c81d47000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15f991d41c81d47000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15f991d41c81d47000004" for 127.0.0.1 at 2012-11-12 17:44:09 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15f991d41c81d47000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15f991d41c81d47000004')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:44:09 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (80.1ms)
Completed 200 OK in 90ms (Views: 89.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (11.7ms)
Completed 200 OK in 17ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (10.9ms)
Completed 200 OK in 15ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1499b1d41c8174b000009", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1499b1d41c8174b000009'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a15f9a1d41c81d47000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a15f9a1d41c81d47000009
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a15f9a1d41c81d47000009" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a15f9a1d41c81d47000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a15f9a1d41c81d47000009')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1499b1d41c8174b000009')}).limit(-1)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000015'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 11ms (Views: 9.6ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 12ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 17:44:10 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 73ms (Views: 72.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000024'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d47000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a15f9a1d41c81d4700002a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 18:07:16 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (55.5ms)
Completed 200 OK in 119ms (Views: 118.4ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 18:07:16 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (3.4ms)
Completed 200 OK in 11ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 18:07:16 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 52ms (Views: 50.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 18:07:16 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 908143681795693382
Completed 200 OK in 174ms (Views: 172.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e000000e'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5328210464456481775
Completed 200 OK in 108ms (Views: 107.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (57.9ms)
Completed 200 OK in 71ms (Views: 70.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-12 00:00:00 UTC, "_id"=>BSON::ObjectId('50a16505898d6513e0000011'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a16505898d6513e0000011
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a16505898d6513e0000011" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a16505898d6513e0000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a16505898d6513e0000011')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 14ms (Views: 12.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a16505898d6513e0000013'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a16505898d6513e0000013
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a16505898d6513e0000013" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a16505898d6513e0000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a16505898d6513e0000013')}).limit(-1)
Completed 200 OK in 8ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (58.2ms)
Completed 200 OK in 62ms (Views: 61.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 18:07:17 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"12", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (9.5ms)
Completed 200 OK in 13ms (Views: 11.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e0000018'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e000001a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a16505898d6513e000001a')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e000001b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e000001d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e0000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a16505898d6513e0000021'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a16524898d6513e000002a'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a07e898d6509dc000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1a07e898d6509dc000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a07e898d6509dc000004'), "headline"=>"uniq"}])
MONGODB (11ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:21:36 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8120785036256179531
  Rendered articles/index.html.erb within layouts/application (177.8ms)
Completed 200 OK in 264ms (Views: 263.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a0a1898d6509dc00000c'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:21:37 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 1143203887551575589
Completed 200 OK in 123ms (Views: 122.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:21:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1a0a1898d6509dc00000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a0a1898d6509dc00000e
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a0a1898d6509dc00000e" for 127.0.0.1 at 2012-11-12 22:21:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a0a1898d6509dc00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a0a1898d6509dc00000e')}).limit(-1)
Completed 200 OK in 17ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:21:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (50.1ms)
Completed 200 OK in 76ms (Views: 75.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (14.2ms)
Completed 200 OK in 21ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (15.7ms)
Completed 200 OK in 19ms (Views: 18.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1a0a2898d6509dc000013'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a0a2898d6509dc000013
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a0a2898d6509dc000013" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a0a2898d6509dc000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a0a2898d6509dc000013')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 21ms (Views: 20.3ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 22:21:38 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 10ms (Views: 9.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a0a2898d6509dc00002b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a0a2898d6509dc00002d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a0a2898d6509dc000030'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a0a2898d6509dc000031'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a102898d6509f0000003'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a102898d6509f0000004'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a102898d6509f0000006'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a102898d6509f0000007'), "name"=>"category"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 22:23:14 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (42.5ms)
Completed 200 OK in 97ms (Views: 96.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (3.2ms)
Completed 200 OK in 9ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 16ms (Views: 15.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a103898d6509f0000017'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a103898d6509f0000019'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1a103898d6509f0000019')}, {"$set"=>{"deck"=>"it is an article"}})


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1a103898d6509f000001a'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a103898d6509f000001a
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a103898d6509f000001a" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a103898d6509f000001a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a103898d6509f000001a')}).limit(-1)
Completed 200 OK in 67ms (Views: 64.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.5ms)
  Rendered articles/_form.html.erb (24.9ms)
Completed 200 OK in 38ms (Views: 37.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1a103898d6509f000001d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a103898d6509f000001d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a103898d6509f000001d" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a103898d6509f000001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a103898d6509f000001d')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (14.6ms)
Completed 200 OK in 20ms (Views: 19.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (16.1ms)
Completed 200 OK in 23ms (Views: 20.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a103898d6509f0000021'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 9201019656806921704
Completed 200 OK in 88ms (Views: 87.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:23:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4508439342403614318
Completed 200 OK in 74ms (Views: 73.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 22:26:42 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (52.2ms)
Completed 200 OK in 121ms (Views: 119.9ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 22:26:43 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (8.4ms)
Completed 200 OK in 16ms (Views: 12.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 22:26:43 -0300
Processing by UsersController#index as HTML
MONGODB (33ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 43ms (Views: 42.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000017'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000018'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1a20f898d650a0c000018')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (41ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 4460520821779139394
Completed 200 OK in 170ms (Views: 169.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c00001a'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 146480078528777198
Completed 200 OK in 143ms (Views: 142.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1a20f898d650a0c00001c'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a20f898d650a0c00001c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a20f898d650a0c00001c" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a20f898d650a0c00001c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a20f898d650a0c00001c')}).limit(-1)
Completed 200 OK in 14ms (Views: 12.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (2ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.0ms)
  Rendered articles/_form.html.erb (37.9ms)
Completed 200 OK in 61ms (Views: 59.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1a20f898d650a0c00001f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a20f898d650a0c00001f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a20f898d650a0c00001f" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a20f898d650a0c00001f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a20f898d650a0c00001f')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.2ms)
  Rendered articles/_form.html.erb (16.0ms)
Completed 200 OK in 21ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (9.5ms)
Completed 200 OK in 13ms (Views: 11.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000023'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a20f898d650a0c000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2aa898d650adf000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1a2aa898d650adf000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2aa898d650adf000008'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (55.8ms)
  Rendered articles/new.html.erb within layouts/application (70.1ms)
Completed 200 OK in 183ms (Views: 181.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (43.1ms)
  Rendered articles/new.html.erb within layouts/application (43.9ms)
Completed 200 OK in 52ms (Views: 48.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (8.9ms)
Completed 200 OK in 12ms (Views: 11.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1a2aa898d650adf00000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a2aa898d650adf00000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a2aa898d650adf00000e" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a2aa898d650adf00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a2aa898d650adf00000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 61ms (Views: 59.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1a2aa898d650adf000010'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a2aa898d650adf000010
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a2aa898d650adf000010" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a2aa898d650adf000010"}
MONGODB (3ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a2aa898d650adf000010')}).limit(-1)
Completed 200 OK in 46ms (Views: 40.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2aa898d650adf000012'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:30:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (5ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6876372383123598322
Completed 200 OK in 136ms (Views: 135.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:30:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 8692620314940763260
Completed 200 OK in 128ms (Views: 127.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 22:30:19 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 22:30:19 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 22:30:19 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 46ms (Views: 45.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2ab898d650adf000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2ab898d650adf000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2ab898d650adf000027'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2ab898d650adf000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:31:14 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a1a2e3898d650b06000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a2e3898d650b06000001
Completed 302 Found in 8ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a2e3898d650b06000001" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a2e3898d650b06000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a2e3898d650b06000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (44.3ms)
Completed 200 OK in 100ms (Views: 98.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.4ms)
  Rendered articles/_form.html.erb (70.7ms)
Completed 200 OK in 87ms (Views: 86.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a1527c898d650f35000008'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a1a2e3898d650b06000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a1a2e3898d650b06000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a1a2e3898d650b06000004" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a1a2e3898d650b06000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a1a2e3898d650b06000004')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a1527c898d650f35000008')}).limit(-1)
Completed 200 OK in 7ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (42.8ms)
Completed 200 OK in 46ms (Views: 45.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a1527c898d650f35000008", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (13.0ms)
Completed 200 OK in 19ms (Views: 17.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b06000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 5415906884838508888
Completed 200 OK in 130ms (Views: 129.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-12 22:31:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (38ms) rails3_mongoid_devise_test['articles'].find({})
MONGODB [DEBUG] cursor.refresh() for cursor 6642345288816413149
Completed 200 OK in 118ms (Views: 118.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b0600000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b0600000e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b06000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b06000011'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b06000013'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a1a2e3898d650b06000015'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a1a2e3898d650b06000015')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-12 22:31:16 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 26ms (Views: 24.9ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-12 22:31:16 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"✓", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 13ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-12 22:31:16 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 52ms (Views: 51.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
