Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003471d44b6a878000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003b11d44b6a87a000004'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000003'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a003f11d44b6a87d000006'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002'), "headline"=>"Test Article", "story"=>"it is an article"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0048c1d44b6a88a000005'), "headline"=>"Test Article", "story"=>"it is an article"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (26ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:23:56 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.6ms)
Completed 200 OK in 130ms (Views: 129.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (6.5ms)
  Rendered articles/_form.html.erb (59.9ms)
Completed 500 Internal Server Error in 105ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (40.9ms)
Completed 500 Internal Server Error in 42ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:23:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.7ms)
Completed 200 OK in 88ms (Views: 87.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (27.6ms)
Completed 500 Internal Server Error in 73ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:25:36 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.1ms)
  Rendered articles/_form.html.erb (7.7ms)
Completed 500 Internal Server Error in 9ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a00cec1d44b6a8b7000001'), "name"=>"user", "email"=>"user@example.com", "role"=>"reader", "password_salt"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWe", "password_hash"=>"$2a$10$ChQa5lp6JjACTVzvb5FjWezIcn0Oobj2fKbF7/hxAgpwOX6lLPEHq"}])
MONGODB (36ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (31.5ms)
Completed 200 OK in 121ms (Views: 120.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:52 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (40.4ms)
  Rendered articles/_form.html.erb (73.6ms)
Completed 500 Internal Server Error in 118ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:40:53 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:41:57 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (87.7ms)
Completed 200 OK in 453ms (Views: 452.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:41:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:41:59 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (114.0ms)
  Rendered articles/_form.html.erb (180.1ms)
Completed 500 Internal Server Error in 403ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:42:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:18 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (64.8ms)
Completed 200 OK in 185ms (Views: 184.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.3ms)
  Rendered articles/_form.html.erb (27.0ms)
Completed 500 Internal Server Error in 92ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (40.4ms)
Completed 500 Internal Server Error in 41ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (12.0ms)
Completed 200 OK in 50ms (Views: 49.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (37.1ms)
  Rendered articles/_form.html.erb (44.9ms)
Completed 500 Internal Server Error in 49ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:43:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.8ms)
Completed 200 OK in 53ms (Views: 53.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 17ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (39.4ms)
Completed 500 Internal Server Error in 40ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:45:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.2ms)
Completed 200 OK in 54ms (Views: 53.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:guid=>nil}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (38.6ms)
  Rendered articles/_form.html.erb (56.5ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:49:38 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.5ms)
Completed 200 OK in 53ms (Views: 52.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.5ms)
  Rendered articles/_form.html.erb (12.3ms)
Completed 500 Internal Server Error in 16ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:50:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.5ms)
Completed 500 Internal Server Error in 39ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000003'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (10.6ms)
Completed 200 OK in 50ms (Views: 49.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fe01d44b6a8c9000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.0ms)
  Rendered articles/_form.html.erb (47.1ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000002'), "headline"=>"uniq"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (11.1ms)
Completed 200 OK in 50ms (Views: 49.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a00fee1d44b6a8cb000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#index as HTML
MONGODB (6ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 27ms (Views: 27.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (39.7ms)
  Rendered articles/_form.html.erb (47.4ms)
Completed 500 Internal Server Error in 52ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:51:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.5ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.2ms)
  Rendered articles/_form.html.erb (58.3ms)
Completed 500 Internal Server Error in 72ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 44ms (Views: 43.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 6.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0111d1d44b6a8cd00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (51.0ms)
Completed 500 Internal Server Error in 64ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 59ms (Views: 58.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 17:57:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000d')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a011481d44b6a8cf00000e'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:09 -0300
Processing by ArticlesController#new as HTML
MONGODB (24ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (82.5ms)
  Rendered articles/new.html.erb within layouts/application (87.1ms)
Completed 500 Internal Server Error in 96ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 1ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d5000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 45ms (Views: 44.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:02:10 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000c'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a012521d44b6a8d500000f')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (45.4ms)
Completed 500 Internal Server Error in 60ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d7000007'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 46ms (Views: 45.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:05:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013271d44b6a8d700000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013271d44b6a8d700000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (16.3ms)
Completed 200 OK in 70ms (Views: 69.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a013fd1d44b6a8d9000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 9ms (Views: 8.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:17 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.7ms)
  Rendered articles/_form.html.erb (65.0ms)
Completed 500 Internal Server Error in 70ms
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:09:18 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (5.9ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a014291d44b6a8db000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (15.9ms)
Completed 200 OK in 55ms (Views: 54.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a014291d44b6a8db000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 10ms (Views: 9.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a014291d44b6a8db000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a014291d44b6a8db000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a014291d44b6a8db000008" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a014291d44b6a8db000008"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a014291d44b6a8db000008')}).limit(-1)
Completed 200 OK in 18ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (5.1ms)
  Rendered articles/_form.html.erb (51.7ms)
Completed 500 Internal Server Error in 58ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:10:01 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (18.3ms)
Completed 200 OK in 58ms (Views: 58.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0152b1d44b6a8de000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 11ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (56.4ms)
Completed 500 Internal Server Error in 61ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:14:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015631d44b6a8e0000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (54.3ms)
Completed 200 OK in 95ms (Views: 94.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015631d44b6a8e0000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.9ms)
  Rendered articles/_form.html.erb (49.2ms)
Completed 500 Internal Server Error in 54ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:16 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.8ms)
  Rendered articles/_form.html.erb (46.5ms)
  Rendered articles/new.html.erb within layouts/application (50.9ms)
Completed 500 Internal Server Error in 60ms


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 500 Internal Server Error in 7ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000004'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 51ms (Views: 50.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:15:43 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 13ms (Views: 12.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e2000007'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0157f1d44b6a8e200000a')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.0ms)
Completed 200 OK in 81ms (Views: 80.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a015ce1d44b6a8e4000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 42ms (Views: 41.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
Completed 500 Internal Server Error in 3ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.4ms)
  Rendered articles/_form.html.erb (46.9ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:17:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.6ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016171d44b6a8e7000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (20.2ms)
Completed 200 OK in 60ms (Views: 59.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016171d44b6a8e7000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 43ms (Views: 42.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016171d44b6a8e7000008'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016171d44b6a8e7000008
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.3ms)
  Rendered articles/_form.html.erb (12.4ms)
Completed 500 Internal Server Error in 51ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:18:15 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (5.7ms)
Completed 500 Internal Server Error in 6ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016701d44b6a8e9000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016701d44b6a8e9000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016701d44b6a8e9000001" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016701d44b6a8e9000001"}
MONGODB (9ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016701d44b6a8e9000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (12.3ms)
Completed 200 OK in 76ms (Views: 65.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (4.6ms)
  Rendered articles/_form.html.erb (37.7ms)
Completed 500 Internal Server Error in 43ms


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
  Rendered articles/_form.html.erb (38.2ms)
Completed 500 Internal Server Error in 39ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000005'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 16ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:19:44 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 15ms (Views: 14.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016701d44b6a8e9000009')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016701d44b6a8e900000a'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a016da1d44b6a8eb000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016da1d44b6a8eb000001
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016da1d44b6a8eb000001" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016da1d44b6a8eb000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016da1d44b6a8eb000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (8.0ms)
Completed 200 OK in 47ms (Views: 46.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 19ms (Views: 18.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.9ms)
Completed 200 OK in 48ms (Views: 38.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a016db1d44b6a8eb000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a016db1d44b6a8eb000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a016db1d44b6a8eb000006" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a016db1d44b6a8eb000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a016db1d44b6a8eb000006')}).limit(-1)
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 17ms (Views: 17.0ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 50ms (Views: 50.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000c')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a016db1d44b6a8eb00000d'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a017041d44b6a8ed000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
  Rendered articles/index.html.erb within layouts/application (22.4ms)
Completed 200 OK in 62ms (Views: 61.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a017041d44b6a8ed000006'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (20ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 72ms (Views: 72.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.8ms)
Completed 200 OK in 49ms (Views: 48.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a017041d44b6a8ed000009'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed000009
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed000009" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed000009')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a017041d44b6a8ed00000b'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a017041d44b6a8ed00000b
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a017041d44b6a8ed00000b" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a017041d44b6a8ed00000b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a017041d44b6a8ed00000b')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:22:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.2ms)
  Rendered articles/new.html.erb within layouts/application (48.8ms)
Completed 200 OK in 60ms (Views: 58.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000002'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000002
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000002" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000002')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (7.0ms)
Completed 200 OK in 10ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000004'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0173a1d44b6a8ef000004
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0173a1d44b6a8ef000004" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0173a1d44b6a8ef000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0173a1d44b6a8ef000004')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (37.9ms)
Completed 200 OK in 40ms (Views: 39.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:06 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 19ms (Views: 18.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0173a1d44b6a8ef00000e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (1ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (43.6ms)
  Rendered articles/new.html.erb within layouts/application (48.4ms)
Completed 200 OK in 59ms (Views: 57.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"", "deck"=>"", "story"=>"ice", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.1ms)
  Rendered articles/new.html.erb within layouts/application (6.4ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (36.2ms)
Completed 200 OK in 38ms (Views: 38.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"✓", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"11", "headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "grade"=>0.0, "published_on"=>2012-11-11 00:00:00 UTC, "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000004'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000004" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000004')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a0174e1d44b6a8f1000006'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a0174e1d44b6a8f1000006
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a0174e1d44b6a8f1000006" for 127.0.0.1 at 2012-11-11 18:23:26 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a0174e1d44b6a8f1000006"}
MONGODB (25ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a0174e1d44b6a8f1000006')}).limit(-1)
Completed 200 OK in 30ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f1000008'), "headline"=>"Article 1", "story"=>"it is an article"}])


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 53ms (Views: 52.7ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-11 18:23:27 -0300
Processing by ArticlesController#index as HTML
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({})
Completed 200 OK in 20ms (Views: 19.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a0174f1d44b6a8f100000c'), "headline"=>"uniq"}])
