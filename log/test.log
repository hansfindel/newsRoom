Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a238d066a860b1b8000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000005'), "name"=>"category"}])
MONGODB (20ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000008'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a238d066a860b1b800000c')}])
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a238d066a860b1b800000d')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000015'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000021'), "name"=>"user", "email"=>"hola@hola.com", "role"=>"reader", "password_salt"=>"$2a$10$Gk1QdYnGSOsMpziN4Rpg/O", "password_hash"=>"$2a$10$Gk1QdYnGSOsMpziN4Rpg/OgF0Bg0N3AoiM4oZa/rAc366z8Snh3/m"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (4.7ms)
Completed 200 OK in 49ms (Views: 48.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (3.3ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 48.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000029'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a238d466a860b1b800002a", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002a'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b800002a
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b800002a" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b800002a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b800002a')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 10ms (Views: 9.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002e'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 44ms (Views: 43.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a238d466a860b1b8000030'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b8000030
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b8000030" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b8000030"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b8000030')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.4ms)
Completed 200 OK in 14ms (Views: 13.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a238d466a860b1b8000033'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b8000033
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b8000033" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b8000033"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b8000033')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.1ms)
Completed 200 OK in 41ms (Views: 40.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (9ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (4.6ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000024'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23a4866a860b1bf000024')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000025'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.5ms)
Completed 200 OK in 53ms (Views: 52.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (38.8ms)
Completed 200 OK in 41ms (Views: 40.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23a4866a860b1bf00002b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf00002b
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf00002b" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf00002b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf00002b')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23a4866a860b1bf00002d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf00002d
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf00002d" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf00002d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf00002d')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000030'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 10.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000032'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000034'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23a4866a860b1bf000035", "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000035'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf000035
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf000035" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf000035"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf000035')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (9.0ms)
Completed 200 OK in 20ms (Views: 19.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (8ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.9ms)
Completed 200 OK in 15ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000009'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100001f'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000021'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23c6566a860b1d1000021')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23c6566a860b1d1000022'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000022
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000022" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000022"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000022')}).limit(-1)
Completed 200 OK in 42ms (Views: 41.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.8ms)
Completed 200 OK in 14ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23c6566a860b1d1000025'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000025
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000025" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000025"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000025')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23c6566a860b1d1000029", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000029'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000029
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000029" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000029"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000029')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d100002b'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 46ms (Views: 45.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d100002d'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d1000030'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4966a860b1d5000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4966a860b1d5000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23d4966a860b1d5000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (36.4ms)
Completed 200 OK in 47ms (Views: 46.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 49.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 11.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23d4a66a860b1d500000e", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000e'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d500000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d500000e" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d500000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d500000e')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d5000010'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 11.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23d4a66a860b1d5000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d5000012
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d5000012" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d5000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d5000012')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (9.2ms)
Completed 200 OK in 49ms (Views: 48.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23d4a66a860b1d5000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d5000015
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d5000015" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d5000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d5000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000030'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000033'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000035'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000036'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000f'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000016'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
  Rendered articles/show_non_published.html.erb within layouts/application (3.1ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000017'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 48.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23dbb66a860b1d8000019", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000019'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000019
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000019" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000019"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000019')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 12.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d800001c'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 13ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (44.4ms)
Completed 200 OK in 50ms (Views: 49.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23dbb66a860b1d8000021'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000021
Completed 302 Found in 33ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000021" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000021"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000021')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23dbb66a860b1d8000023'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000023
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000023" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000023"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000023')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d800002e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23dbb66a860b1d800002e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000030'), "headline"=>"uniq"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (54ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (15ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 106ms (Views: 105.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 898358178797581752
MONGODB (32ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 105ms (Views: 104.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001a'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 48ms (Views: 47.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001b'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8842914822938687057
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3ea7c1d44b6b67800001d", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001d'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ea7c1d44b6b67800001d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ea7c1d44b6b67800001d" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ea7c1d44b6b67800001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ea7c1d44b6b67800001d')}).limit(-1)
Completed 200 OK in 17ms (Views: 15.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001f'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8913142924117276281
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3ea7c1d44b6b678000021'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ea7c1d44b6b678000021
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ea7c1d44b6b678000021" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ea7c1d44b6b678000021"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ea7c1d44b6b678000021')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (7.3ms)
Completed 200 OK in 86ms (Views: 85.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 8ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3edd11d44b6b69500000c", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd11d44b6b69500000c'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd11d44b6b69500000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd11d44b6b69500000c" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd11d44b6b69500000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd11d44b6b69500000c')}).limit(-1)
Completed 200 OK in 53ms (Views: 51.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500000e'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500000f'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5016117022541020289
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 44ms (Views: 43.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000011'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5933143985355291825
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7968422780978396348
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3edd21d44b6b695000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd21d44b6b695000014
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd21d44b6b695000014" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd21d44b6b695000014"}
MONGODB (18ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd21d44b6b695000014')}).limit(-1)
Completed 200 OK in 21ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000016')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000016')})
  Rendered articles/_form.html.erb (93.2ms)
Completed 200 OK in 119ms (Views: 118.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3edd21d44b6b695000017'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd21d44b6b695000017
Completed 302 Found in 20ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd21d44b6b695000017" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd21d44b6b695000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd21d44b6b695000017')}).limit(-1)
MONGODB (20ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 24ms (Views: 23.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000019')})
  Rendered articles/_form.html.erb (10.2ms)
Completed 200 OK in 13ms (Views: 12.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b69500001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b69500001a')})
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 14ms (Views: 12.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000025'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000026'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3edd21d44b6b695000026')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000027'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500002b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500002c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (5.4ms)
Completed 200 OK in 68ms (Views: 67.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 17ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000014')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000014')})
  Rendered articles/_form.html.erb (70.2ms)
Completed 200 OK in 121ms (Views: 120.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3b1d44b6b69f000015
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3b1d44b6b69f000015" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3b1d44b6b69f000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3b1d44b6b69f000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 19ms (Views: 17.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000017'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3b1d44b6b69f000017
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3b1d44b6b69f000017" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3b1d44b6b69f000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3b1d44b6b69f000017')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000019')})
  Rendered articles/_form.html.erb (84.7ms)
Completed 200 OK in 87ms (Views: 86.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001a')})
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 40ms (Views: 39.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3796892110626390577
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 507ms (Views: 506.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3ef3c1d44b6b69f00001e", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f00001e'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3c1d44b6b69f00001e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3c1d44b6b69f00001e" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3c1d44b6b69f00001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3c1d44b6b69f00001e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000020'), "headline"=>"i get published at once", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6139225436864808022
MONGODB (43ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 51ms (Views: 50.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 958305103228339298
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000027'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000029'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000033'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000036'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000036')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000004'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:30:57 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (6.0ms)
Completed 200 OK in 65ms (Views: 64.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.9ms)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8890267790861608477
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 98ms (Views: 97.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3f1721d44b6b6b1000011", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000011'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b1000011
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b1000011" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b1000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b1000011')}).limit(-1)
Completed 200 OK in 58ms (Views: 56.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000013'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000014'), "headline"=>"i get published at once", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5541483740085561013
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000016'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4895155393273472704
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000018'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b1000018
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b1000018" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b1000018"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b1000018')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001a')})
  Rendered articles/_form.html.erb (60.9ms)
Completed 200 OK in 77ms (Views: 76.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001b')})
  Rendered articles/_form.html.erb (12.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001c')})
  Rendered articles/_form.html.erb (10.1ms)
Completed 200 OK in 12ms (Views: 11.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b100001d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b100001d" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b100001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b100001d')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000027'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b100002a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b100002c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000a'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000017')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000017')})
  Rendered articles/_form.html.erb (16.0ms)
  Rendered articles/new.html.erb within layouts/application (21.0ms)
Completed 200 OK in 68ms (Views: 67.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000018')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000018')})
  Rendered articles/_form.html.erb (11.6ms)
  Rendered articles/new.html.erb within layouts/application (12.0ms)
Completed 200 OK in 15ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000019')})
  Rendered articles/_form.html.erb (10.1ms)
Completed 200 OK in 12ms (Views: 11.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001a
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001a" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001a')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 11ms (Views: 10.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001c'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001c
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001c" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001e'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3f2161d44b6b6b500001f", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001f'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001f
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001f" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001f')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6835757695055276167
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 14ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000022'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 20659166362839230
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000024'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5449170461804570826
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000033'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000033')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000034'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (932ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:13:55 -0300
Processing by SessionsController#new as HTML
  Rendered sessions/new.html.erb within layouts/application (4.6ms)
Completed 200 OK in 118ms (Views: 117.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 80ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7604549226071874345
MONGODB (19ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (87ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 299ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a41d44b6b80b000003'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 14ms (Views: 13.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a417a41d44b6b80b000004", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a41d44b6b80b000004'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a41d44b6b80b000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a41d44b6b80b000004" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a41d44b6b80b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a41d44b6b80b000004')}).limit(-1)
Completed 200 OK in 19ms (Views: 18.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3767212366202952852
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a51d44b6b80b000007'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6572086903984381088
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a51d44b6b80b000009'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3466465884120046763
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (19ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b00000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b00000b')})
  Rendered articles/_form.html.erb (138.4ms)
Completed 200 OK in 178ms (Views: 177.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a417a51d44b6b80b00000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a51d44b6b80b00000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a51d44b6b80b00000c" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a51d44b6b80b00000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a51d44b6b80b00000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a417a51d44b6b80b00000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a51d44b6b80b00000e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a51d44b6b80b00000e" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a51d44b6b80b00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a51d44b6b80b00000e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000010')})
  Rendered articles/_form.html.erb (10.4ms)
Completed 200 OK in 13ms (Views: 12.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000011')})
  Rendered articles/_form.html.erb (10.3ms)
Completed 200 OK in 13ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 22ms (Views: 21.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:17:07 -0300
Processing by UsersController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['users'].find({})
  Rendered users/index.html.erb within layouts/application (40.5ms)
Completed 200 OK in 111ms (Views: 110.7ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:17:07 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 153ms (Views: 152.4ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 21ms (Views: 20.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6555467145780610980
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 119ms


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 628585678015252494
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a418641d44b6b80e000009", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e000009'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000009
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000009" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000009')}).limit(-1)
Completed 200 OK in 27ms (Views: 25.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000b'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 9208478550577858649
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 45ms (Views: 44.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000d'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 23ms (Views: 22.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000e'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1720744360435206313
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000010')})
  Rendered articles/_form.html.erb (38.2ms)
Completed 200 OK in 64ms (Views: 63.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000011')})
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 50ms (Views: 48.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000012')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000012')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a418641d44b6b80e000013'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000013
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000013" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000013')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a418641d44b6b80e000015'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000015
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000015" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000015')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a11d44b6b810000001'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:18:09 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
  Rendered articles/show_non_published.html.erb within layouts/application (3.8ms)
Completed 200 OK in 106ms (Views: 104.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a11d44b6b810000002'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3991193961501833287
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 169ms (Views: 168.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a21d44b6b810000004'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2589195041268316441
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2390621909852109090
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 6.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a418a21d44b6b810000007", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a21d44b6b810000007'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b810000007
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b810000007" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b810000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b810000007')}).limit(-1)
Completed 200 OK in 23ms (Views: 21.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a418a21d44b6b810000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b810000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b810000009" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b810000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b810000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000b')})
  Rendered articles/_form.html.erb (38.0ms)
Completed 200 OK in 69ms (Views: 68.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000c')})
  Rendered articles/_form.html.erb (45.3ms)
Completed 200 OK in 49ms (Views: 47.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000d')})
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 13ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a418a21d44b6b81000000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b81000000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b81000000e" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b81000000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b81000000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 16ms (Views: 15.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 40ms (Views: 39.5ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 17ms (Views: 17.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7780315509915925645
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 25ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:21:56 -0300
Processing by SessionsController#new as HTML
  Rendered sessions/new.html.erb within layouts/application (4.8ms)
Completed 200 OK in 96ms (Views: 95.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 39ms (Views: 39.3ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7637768410105098513
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 84ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000003'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 40ms (Views: 39.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000004'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3859950429635064247
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a419851d44b6b814000006", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000006'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b814000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b814000006" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b814000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b814000006')}).limit(-1)
Completed 200 OK in 13ms (Views: 11.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000008'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3035590177960735218
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1385936885024797181
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b81400000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b81400000b')})
  Rendered articles/_form.html.erb (93.1ms)
Completed 200 OK in 125ms (Views: 124.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a419851d44b6b81400000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b81400000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b81400000c" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b81400000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b81400000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a419851d44b6b81400000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b81400000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b81400000e" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b81400000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b81400000e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000010')})
  Rendered articles/_form.html.erb (9.2ms)
Completed 200 OK in 11ms (Views: 10.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000011')})
  Rendered articles/_form.html.erb (47.0ms)
Completed 200 OK in 50ms (Views: 48.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 15ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a419be1d44b6b816000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419be1d44b6b816000001
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419be1d44b6b816000001" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419be1d44b6b816000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419be1d44b6b816000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (26.7ms)
Completed 200 OK in 114ms (Views: 112.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.3ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419be1d44b6b816000003')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419be1d44b6b816000003')})
  Rendered articles/_form.html.erb (181.7ms)
Completed 200 OK in 235ms (Views: 234.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000004')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000004')})
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 12.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000005')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000005')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a419bf1d44b6b816000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419bf1d44b6b816000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419bf1d44b6b816000006" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419bf1d44b6b816000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419bf1d44b6b816000006')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4773355137291031473
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 66ms (Views: 65.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a419bf1d44b6b816000009", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b816000009'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419bf1d44b6b816000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419bf1d44b6b816000009" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419bf1d44b6b816000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419bf1d44b6b816000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000b'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3562802365642085384
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000d'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (14ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 35ms (Views: 34.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000e'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 829343371532473403
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 24ms (Views: 23.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 23ms (Views: 22.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7205625941996115211
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a141d44b6b819000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 641686260276388542
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (156.6ms)
Completed 200 OK in 236ms (Views: 235.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41a151d44b6b819000003", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000003'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a151d44b6b819000003
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a151d44b6b819000003" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a151d44b6b819000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a151d44b6b819000003')}).limit(-1)
Completed 200 OK in 20ms (Views: 19.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8919935676901090226
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000006'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3580624976682017727
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 8.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000008'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41a151d44b6b819000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a151d44b6b819000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a151d44b6b819000009" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a151d44b6b819000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a151d44b6b819000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a151d44b6b81900000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a151d44b6b81900000b')})
  Rendered articles/_form.html.erb (38.0ms)
Completed 200 OK in 69ms (Views: 68.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41a161d44b6b81900000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a161d44b6b81900000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a161d44b6b81900000c" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a161d44b6b81900000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a161d44b6b81900000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 37ms (Views: 36.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000e')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000f')})
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 14ms (Views: 12.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 76ms (Views: 76.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2018215998674822985
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 21ms (Views: 20.9ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41ade1d44b6b81e000001'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:27:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6700247126075045710
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (145.9ms)
Completed 200 OK in 236ms (Views: 235.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41adf1d44b6b81e000003'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5290424733933303795
MONGODB (18ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 26ms (Views: 25.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41adf1d44b6b81e000005'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 22ms (Views: 21.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41adf1d44b6b81e000006", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41adf1d44b6b81e000006'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41adf1d44b6b81e000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41adf1d44b6b81e000006" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41adf1d44b6b81e000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41adf1d44b6b81e000006')}).limit(-1)
Completed 200 OK in 18ms (Views: 16.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7471984987467217007
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41adf1d44b6b81e000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41adf1d44b6b81e000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41adf1d44b6b81e000009" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41adf1d44b6b81e000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41adf1d44b6b81e000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000b')})
  Rendered articles/_form.html.erb (60.2ms)
Completed 200 OK in 100ms (Views: 99.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41adf1d44b6b81e00000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41adf1d44b6b81e00000c" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41adf1d44b6b81e00000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41adf1d44b6b81e00000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000e')})
  Rendered articles/_form.html.erb (44.4ms)
Completed 200 OK in 47ms (Views: 46.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41adf1d44b6b81e00000f')})
  Rendered articles/_form.html.erb (11.7ms)
Completed 200 OK in 15ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 31ms (Views: 30.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:27:43 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1670444731417033657
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 20ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:27:44 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c6a1d44b6b822000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4622070536402305005
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (156.5ms)
Completed 200 OK in 247ms (Views: 246.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6098641693896016029
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 40ms (Views: 39.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41c6a1d44b6b822000004", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c6a1d44b6b822000004'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c6a1d44b6b822000004
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c6a1d44b6b822000004" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c6a1d44b6b822000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c6a1d44b6b822000004')}).limit(-1)
Completed 200 OK in 21ms (Views: 19.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c6a1d44b6b822000006'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3237649542921781485
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c6a1d44b6b822000008'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 36ms (Views: 35.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41c6a1d44b6b822000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c6a1d44b6b822000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c6a1d44b6b822000009" for 127.0.0.1 at 2012-11-14 19:34:18 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c6a1d44b6b822000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c6a1d44b6b822000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000b')})
  Rendered articles/_form.html.erb (61.0ms)
Completed 200 OK in 92ms (Views: 91.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c6b1d44b6b82200000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c6b1d44b6b82200000c" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c6b1d44b6b82200000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c6b1d44b6b82200000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000e')})
  Rendered articles/_form.html.erb (45.7ms)
Completed 200 OK in 49ms (Views: 48.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c6b1d44b6b82200000f')})
  Rendered articles/_form.html.erb (11.5ms)
Completed 200 OK in 15ms (Views: 13.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 67ms (Views: 66.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5537694642638619674
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 75ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8139907746944189584
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 39ms (Views: 39.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 18ms (Views: 17.8ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:34:19 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c841d44b6b824000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 9177055685078115371
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (53.3ms)
Completed 200 OK in 97ms (Views: 96.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c841d44b6b824000003'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3094419100929057933
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41c841d44b6b824000005", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c841d44b6b824000005'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c841d44b6b824000005
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c841d44b6b824000005" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c841d44b6b824000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c841d44b6b824000005')}).limit(-1)
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41c841d44b6b824000007'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6695202326209062067
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41c841d44b6b824000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c841d44b6b824000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c841d44b6b824000009" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c841d44b6b824000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c841d44b6b824000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000b')})
  Rendered articles/_form.html.erb (42.0ms)
Completed 200 OK in 45ms (Views: 44.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000c')})
  Rendered articles/_form.html.erb (45.0ms)
Completed 200 OK in 48ms (Views: 46.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41c841d44b6b82400000d')})
  Rendered articles/_form.html.erb (9.6ms)
Completed 200 OK in 12ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41c841d44b6b82400000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41c841d44b6b82400000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41c841d44b6b82400000e" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41c841d44b6b82400000e"}
MONGODB (20ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41c841d44b6b82400000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 24ms (Views: 2.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 59ms (Views: 59.0ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 16ms (Views: 15.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3742299335389308734
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (38ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 47ms (Views: 46.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:34:44 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4425019592935434115
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5482629734520023010
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:34:45 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8575479802273687616
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 46ms (Views: 45.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:36:08 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (121.1ms)
Completed 200 OK in 211ms (Views: 210.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (3.0ms)
Completed 200 OK in 8ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 23ms (Views: 23.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6360731636363997639
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 125ms (Views: 124.3ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8621752388351472183
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1068923283028619928
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6932956880898667176
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7601336268413252396
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 75ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:09 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.8ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b82900000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b82900000f')})
  Rendered articles/_form.html.erb (250.1ms)
Completed 200 OK in 283ms (Views: 282.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b829000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b829000010')})
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 14ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b829000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41cda1d44b6b829000011')})
  Rendered articles/_form.html.erb (48.3ms)
Completed 200 OK in 51ms (Views: 50.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41cda1d44b6b829000012'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41cda1d44b6b829000012
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41cda1d44b6b829000012" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41cda1d44b6b829000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41cda1d44b6b829000012')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 17ms (Views: 15.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41cda1d44b6b829000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41cda1d44b6b829000014
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41cda1d44b6b829000014" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41cda1d44b6b829000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41cda1d44b6b829000014')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41cda1d44b6b829000016", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41cda1d44b6b829000016'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41cda1d44b6b829000016
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41cda1d44b6b829000016" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41cda1d44b6b829000016"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41cda1d44b6b829000016')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41cda1d44b6b829000018'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5260110451031717212
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 45ms (Views: 44.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8639104451364304268
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41cda1d44b6b82900001b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 22ms (Views: 21.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41cda1d44b6b82900001c'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:36:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6107714850963633586
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 8.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41d6c1d44b6b82b000001'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
  Rendered articles/show_non_published.html.erb within layouts/application (3.9ms)
Completed 200 OK in 104ms (Views: 102.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41d6c1d44b6b82b000002'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 193594070337253520
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 180ms (Views: 179.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7020588859575693626
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41d6c1d44b6b82b000005", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41d6c1d44b6b82b000005'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41d6c1d44b6b82b000005
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41d6c1d44b6b82b000005" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41d6c1d44b6b82b000005"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41d6c1d44b6b82b000005')}).limit(-1)
Completed 200 OK in 25ms (Views: 23.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41d6c1d44b6b82b000007'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2501139660421657015
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41d6c1d44b6b82b000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41d6c1d44b6b82b000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41d6c1d44b6b82b000009" for 127.0.0.1 at 2012-11-14 19:38:36 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41d6c1d44b6b82b000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41d6c1d44b6b82b000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000b')})
  Rendered articles/_form.html.erb (38.6ms)
Completed 200 OK in 69ms (Views: 68.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000c')})
  Rendered articles/_form.html.erb (44.3ms)
Completed 200 OK in 47ms (Views: 46.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000d')})
  Rendered articles/_form.html.erb (10.3ms)
Completed 200 OK in 13ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41d6d1d44b6b82b00000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41d6d1d44b6b82b00000e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41d6d1d44b6b82b00000e" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41d6d1d44b6b82b00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41d6d1d44b6b82b00000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 21ms (Views: 20.4ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 41ms (Views: 40.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 16ms (Views: 15.8ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7376286390194205903
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 971402077728339173
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 44ms (Views: 43.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5738636199410726254
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:38:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1457614752415151564
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4260616070275200472
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:38:38 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3275514584488932957
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:36 -0300
Processing by SessionsController#new as HTML
  Rendered sessions/new.html.erb within layouts/application (3.1ms)
Completed 200 OK in 14ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3173708058389170018
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (21.6ms)
Completed 200 OK in 25ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1410680062769153920
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (5.8ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1642749004176738192
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6165909677844776985
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 8.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1115118228982777895
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4395054748572895420
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1327621472643238169
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 18ms (Views: 17.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 75ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d00000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d00000e')})
  Rendered articles/_form.html.erb (70.2ms)
Completed 200 OK in 74ms (Views: 73.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41de51d44b6b82d00000f'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41de51d44b6b82d00000f
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41de51d44b6b82d00000f" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41de51d44b6b82d00000f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41de51d44b6b82d00000f')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41de51d44b6b82d000011'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41de51d44b6b82d000011
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41de51d44b6b82d000011" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41de51d44b6b82d000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41de51d44b6b82d000011')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d000013')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d000013')})
  Rendered articles/_form.html.erb (45.5ms)
Completed 200 OK in 48ms (Views: 47.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d000014')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41de51d44b6b82d000014')})
  Rendered articles/_form.html.erb (11.9ms)
Completed 200 OK in 16ms (Views: 14.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41de51d44b6b82d000015", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41de51d44b6b82d000015'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41de51d44b6b82d000015
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41de51d44b6b82d000015" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41de51d44b6b82d000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41de51d44b6b82d000015')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2019547232379128418
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41de51d44b6b82d000018'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:40:37 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41de61d44b6b82d000019'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:38 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6573274810335677083
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 44ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41de61d44b6b82d00001b'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:40:38 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2757633638460082854
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:40:38 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:40:38 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:40:38 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:22 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7182288412560805664
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (82.1ms)
Completed 200 OK in 94ms (Views: 93.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41e8b1d44b6b82f000002", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e8b1d44b6b82f000002'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e8b1d44b6b82f000002
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e8b1d44b6b82f000002" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e8b1d44b6b82f000002"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e8b1d44b6b82f000002')}).limit(-1)
Completed 200 OK in 172ms (Views: 170.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e8b1d44b6b82f000004'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 20ms (Views: 19.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e8b1d44b6b82f000005'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6395780025493704788
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e8b1d44b6b82f000007'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3996807711392485471
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41e8b1d44b6b82f000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e8b1d44b6b82f000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e8b1d44b6b82f000009" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e8b1d44b6b82f000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e8b1d44b6b82f000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000b')})
  Rendered articles/_form.html.erb (14.7ms)
Completed 200 OK in 18ms (Views: 17.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e8b1d44b6b82f00000c
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e8b1d44b6b82f00000c" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e8b1d44b6b82f00000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e8b1d44b6b82f00000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000e')})
  Rendered articles/_form.html.erb (44.3ms)
Completed 200 OK in 47ms (Views: 46.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e8b1d44b6b82f00000f')})
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5610028226980565396
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 43ms (Views: 42.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4031113809913926163
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 8.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5139310269584331377
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:23 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8568577935858422544
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4706578059515876203
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5565228415253435335
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8175185994133754874
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:43:24 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 5.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8091319529249413064
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (26.0ms)
Completed 200 OK in 70ms (Views: 69.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e9d1d44b6b831000002'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3108745565640824814
MONGODB (4ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 45ms (Views: 44.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e9d1d44b6b831000004'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e9d1d44b6b831000005'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4285558852328855589
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41e9d1d44b6b831000007", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41e9d1d44b6b831000007'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e9d1d44b6b831000007
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e9d1d44b6b831000007" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e9d1d44b6b831000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e9d1d44b6b831000007')}).limit(-1)
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41e9d1d44b6b831000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e9d1d44b6b831000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e9d1d44b6b831000009" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e9d1d44b6b831000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e9d1d44b6b831000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (1ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e9d1d44b6b83100000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e9d1d44b6b83100000b')})
  Rendered articles/_form.html.erb (15.4ms)
Completed 200 OK in 19ms (Views: 18.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:41 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e9d1d44b6b83100000c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e9d1d44b6b83100000c')})
  Rendered articles/_form.html.erb (47.5ms)
Completed 200 OK in 51ms (Views: 49.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41e9e1d44b6b83100000d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41e9e1d44b6b83100000d')})
  Rendered articles/_form.html.erb (10.0ms)
Completed 200 OK in 12ms (Views: 11.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41e9e1d44b6b83100000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41e9e1d44b6b83100000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41e9e1d44b6b83100000e" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41e9e1d44b6b83100000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41e9e1d44b6b83100000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 43ms (Views: 42.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 4ms (Views: 3.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8955053653091654223
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 45ms (Views: 44.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2421714410764999298
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3059692765628046064
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1678305608196397909
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 45ms (Views: 44.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7456908449668373386
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8158495532178185191
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 19:43:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1922427232858905588
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:12 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8679476104579261150
MONGODB (66ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (28ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (334.7ms)
Completed 200 OK in 390ms (Views: 388.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a4560d1d44b6b968000002", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4560d1d44b6b968000002'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4560d1d44b6b968000002
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4560d1d44b6b968000002" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4560d1d44b6b968000002"}
MONGODB (79ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4560d1d44b6b968000002')}).limit(-1)
Completed 200 OK in 122ms (Views: 41.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4560d1d44b6b968000004'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8970870862310810873
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4560d1d44b6b968000006'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1721464188379866373
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4560d1d44b6b968000008'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 17ms (Views: 16.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a4560d1d44b6b968000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4560d1d44b6b968000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4560d1d44b6b968000009" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4560d1d44b6b968000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4560d1d44b6b968000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (17ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4560d1d44b6b96800000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4560d1d44b6b96800000b')})
  Rendered articles/_form.html.erb (87.1ms)
Completed 200 OK in 90ms (Views: 89.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-15 00:00:00 UTC, "_id"=>BSON::ObjectId('50a4560e1d44b6b96800000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4560e1d44b6b96800000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4560e1d44b6b96800000c" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4560e1d44b6b96800000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b96800000c')}).limit(-1)
MONGODB (17ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 21ms (Views: 20.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4560e1d44b6b96800000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4560e1d44b6b96800000e')})
  Rendered articles/_form.html.erb (44.3ms)
Completed 200 OK in 46ms (Views: 46.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4560e1d44b6b96800000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4560e1d44b6b96800000f')})
  Rendered articles/_form.html.erb (10.0ms)
Completed 200 OK in 13ms (Views: 11.8ms | ActiveRecord: 0.0ms)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user1@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000010'), "name"=>"user1", "email"=>"user1@example.com", "role"=>"reader", "password_salt"=>"$2a$10$HiDKUw0QgS5czyCcW1vaK.", "password_hash"=>"$2a$10$HiDKUw0QgS5czyCcW1vaK.frNxugaRScvOvFCWB/jvWvZ08EVMeuW"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 18ms (Views: 17.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000011'), "name"=>"user2", "email"=>"user2@example.com", "role"=>"reader", "password_salt"=>"$2a$10$GEYwVWA5.1GzLa9MLVqqcO", "password_hash"=>"$2a$10$GEYwVWA5.1GzLa9MLVqqcOSFlOUDDoeGnkHLzSlrSvXZEO1O6zQ22"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user2@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user2@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 218830258800961615
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000011')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000012'), "name"=>"user3", "email"=>"user3@example.com", "role"=>"reader", "password_salt"=>"$2a$10$lP0V7hNEiN26d22DIcKUCO", "password_hash"=>"$2a$10$lP0V7hNEiN26d22DIcKUCOx43ZjPkTVc3863NDsR0CO7fxfF5fjna"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user3@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user3@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 77ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6500906393823881485
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000012')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000013'), "name"=>"user4", "email"=>"user4@example.com", "role"=>"reader", "password_salt"=>"$2a$10$SR9lAvB7d6nJJ1I1Vlmtlu", "password_hash"=>"$2a$10$SR9lAvB7d6nJJ1I1Vlmtlui4iuB4bSu8a9XxXNwbtoU4tzXIGW8oa"}])


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6070094957554706785
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000015'), "name"=>"user5", "email"=>"user5@example.com", "role"=>"reader", "password_salt"=>"$2a$10$kDRRAKiCHuiPS7jP15Rq9O", "password_hash"=>"$2a$10$kDRRAKiCHuiPS7jP15Rq9OnaCctwXKmRog4POYY7kyHSOAkxCGmQS"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user5@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user5@example.com"}).limit(-1)
Completed 200 OK in 72ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000016'), "name"=>"user6", "email"=>"user6@example.com", "role"=>"reader", "password_salt"=>"$2a$10$1H64aiwyju6GzS5uyftd/u", "password_hash"=>"$2a$10$1H64aiwyju6GzS5uyftd/un0LVI9GTHPAfBaDPn8iPfLtqzxVjxOu"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:14 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user6@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user6@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560e1d44b6b968000017'), "name"=>"user7", "email"=>"user7@example.com", "role"=>"reader", "password_salt"=>"$2a$10$ZwbDMjz0IXO7k3mldb7Kau", "password_hash"=>"$2a$10$ZwbDMjz0IXO7k3mldb7KauQEzbBmOWCibXZ3AmZIpge36LTnHiBAO"}])


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user8@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560f1d44b6b968000018'), "name"=>"user8", "email"=>"user8@example.com", "role"=>"reader", "password_salt"=>"$2a$10$0wf0GLg3g6nkuDRO5ml8Ne", "password_hash"=>"$2a$10$0wf0GLg3g6nkuDRO5ml8NeJJszRzAJcFl2QfgDCX3zXnfG28tASjq"}])


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3724098007032933151
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user9@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560f1d44b6b96800001a'), "name"=>"user9", "email"=>"user9@example.com", "role"=>"reader", "password_salt"=>"$2a$10$BbgfOW2QBEH7wn3HIlRNLO", "password_hash"=>"$2a$10$BbgfOW2QBEH7wn3HIlRNLOgA667eS05ZxwQ58wPUow.M0mw7RaTMO"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user9@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user9@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2942658046447332293
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001a')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user10@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a4560f1d44b6b96800001b'), "name"=>"user10", "email"=>"user10@example.com", "role"=>"reader", "password_salt"=>"$2a$10$xJIPkX6x4wR6ti8K1tSCz.", "password_hash"=>"$2a$10$xJIPkX6x4wR6ti8K1tSCz.UmOpxJRTRxzSiqdjQWcAh.kYs6kUKJK"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user10@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user10@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4068653318743796840
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001b')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2623353027858279578
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 24ms (Views: 23.4ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 23:40:15 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user11", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4561b1d44b6b96a000009'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:27 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7589511132540329226
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (51.8ms)
Completed 200 OK in 64ms (Views: 63.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4561b1d44b6b96a00000b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 23:40:27 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4561b1d44b6b96a00000c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:27 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 530811095429963091
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:27 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a4561b1d44b6b96a00000e", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4561b1d44b6b96a00000e'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4561b1d44b6b96a00000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4561b1d44b6b96a00000e" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4561b1d44b6b96a00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4561b1d44b6b96a00000e')}).limit(-1)
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3717326879421652334
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000011')})
  Rendered articles/_form.html.erb (51.6ms)
Completed 200 OK in 55ms (Views: 54.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-15 00:00:00 UTC, "_id"=>BSON::ObjectId('50a4561c1d44b6b96a000012'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4561c1d44b6b96a000012
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4561c1d44b6b96a000012" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4561c1d44b6b96a000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4561c1d44b6b96a000012')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a4561c1d44b6b96a000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a4561c1d44b6b96a000014
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a4561c1d44b6b96a000014" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a4561c1d44b6b96a000014"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a4561c1d44b6b96a000014')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000016')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000016')})
  Rendered articles/_form.html.erb (10.8ms)
Completed 200 OK in 13ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:28 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000017')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a4561c1d44b6b96a000017')})
  Rendered articles/_form.html.erb (45.5ms)
Completed 200 OK in 49ms (Views: 47.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000028'), "name"=>"category"}])
MONGODB (169ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a00002a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a00002c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a00002d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a00002f'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000031'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a456221d44b6b96a000031')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000032'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000033'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000034'), "article_id"=>BSON::ObjectId('50a456221d44b6b96a000032'), "category_id"=>BSON::ObjectId('50a456221d44b6b96a000033')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000035'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456221d44b6b96a000036'), "name"=>"categoria nueva"}])
MONGODB (590ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a456221d44b6b96a000035"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a456221d44b6b96a000035", "_id"=>BSON::ObjectId('50a456231d44b6b96a000037')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a456231d44b6b96a000038'), "article_id"=>BSON::ObjectId('50a456221d44b6b96a000035'), "category_id"=>BSON::ObjectId('50a456231d44b6b96a000037')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user1@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 21ms (Views: 20.8ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user1@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user1@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user2@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user2@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7836671042837838388
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000011')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.2ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user3@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user3@example.com"}).limit(-1)
Completed 200 OK in 112ms (Views: 38.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user4@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user4@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3386269632014875407
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000013')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6091414981938543389
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2417765972474679
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 8.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user8@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user9@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user9@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user9@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4874938595689921472
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001a')}).limit(-1)
Completed 200 OK in 9ms (Views: 9.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user10@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user10@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user10@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2499355896093637670
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001b')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2558822819273145395
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 27ms (Views: 26.2ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 23:40:35 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user12", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 9ms (Views: 5.3ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562d1d44b6b96c000002'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562d1d44b6b96c000004'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562d1d44b6b96c000006'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562d1d44b6b96c000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c00000f'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c000011'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a4562f1d44b6b96c000011')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
  Rendered users/index.html.erb within layouts/application (11.9ms)
Completed 200 OK in 54ms (Views: 53.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user1", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c000017'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c000018'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c000019'), "article_id"=>BSON::ObjectId('50a4562f1d44b6b96c000017'), "category_id"=>BSON::ObjectId('50a4562f1d44b6b96c000018')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001a'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a4562f1d44b6b96c00001a"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a4562f1d44b6b96c00001a", "_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001d'), "article_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001a'), "category_id"=>BSON::ObjectId('50a4562f1d44b6b96c00001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 4ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user2@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user2@example.com\"]"}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user3@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user3@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1789552730125150700
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000012')}).limit(-1)
Completed 200 OK in 25ms (Views: 24.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user5@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user5@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user6@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user6@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 840407194417539800
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000016')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4272949777549798117
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user8@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6903479154561297144
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user9@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user10@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user10@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user10@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:47 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5454655126477253467
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001b')}).limit(-1)
Completed 200 OK in 45ms (Views: 44.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user11@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a456301d44b6b96c000031'), "name"=>"user12", "email"=>"user11@example.com", "role"=>"reader", "password_salt"=>"$2a$10$xTBDk.yrR7oOFCEUhZFPW.", "password_hash"=>"$2a$10$xTBDk.yrR7oOFCEUhZFPW.5bQxfbuLFDCJ6.P2LAsN5ParIyXbxv2"}])


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user11@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user11@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8608406224170429477
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a456301d44b6b96c000031')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8310585675673021489
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456301d44b6b96c000033'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456301d44b6b96c000034'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3805404310631656522
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7670675302786313301
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456301d44b6b96c000037'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4595422188490763360
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 45ms (Views: 44.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a456301d44b6b96c000039", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456301d44b6b96c000039'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456301d44b6b96c000039
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456301d44b6b96c000039" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456301d44b6b96c000039"}
MONGODB (18ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456301d44b6b96c000039')}).limit(-1)
Completed 200 OK in 22ms (Views: 3.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c00003b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c00003b')})
  Rendered articles/_form.html.erb (12.9ms)
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-15 00:00:00 UTC, "_id"=>BSON::ObjectId('50a456301d44b6b96c00003c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456301d44b6b96c00003c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456301d44b6b96c00003c" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456301d44b6b96c00003c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456301d44b6b96c00003c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a456301d44b6b96c00003e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456301d44b6b96c00003e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456301d44b6b96c00003e" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456301d44b6b96c00003e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456301d44b6b96c00003e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c000040')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c000040')})
  Rendered articles/_form.html.erb (44.2ms)
Completed 200 OK in 46ms (Views: 46.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:40:48 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c000041')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456301d44b6b96c000041')})
  Rendered articles/_form.html.erb (10.4ms)
Completed 200 OK in 13ms (Views: 12.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000002'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000003'), "article_id"=>BSON::ObjectId('50a456f31d44b6b970000001'), "category_id"=>BSON::ObjectId('50a456f31d44b6b970000002')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000004'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000005'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a456f31d44b6b970000004"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a456f31d44b6b970000004", "_id"=>BSON::ObjectId('50a456f31d44b6b970000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000007'), "article_id"=>BSON::ObjectId('50a456f31d44b6b970000004'), "category_id"=>BSON::ObjectId('50a456f31d44b6b970000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b97000000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b97000000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b97000000d'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b97000000f'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a456f31d44b6b97000000f')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000011'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000013'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8157536315671553968
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (20.8ms)
Completed 200 OK in 62ms (Views: 61.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000015'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2103565425587759058
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000017'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6523365314685806559
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 37ms (Views: 37.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a456f31d44b6b970000019", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a456f31d44b6b970000019'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456f31d44b6b970000019
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456f31d44b6b970000019" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456f31d44b6b970000019"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456f31d44b6b970000019')}).limit(-1)
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001b')})
  Rendered articles/_form.html.erb (49.3ms)
Completed 200 OK in 52ms (Views: 51.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001c')})
  Rendered articles/_form.html.erb (10.0ms)
Completed 200 OK in 13ms (Views: 11.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a456f31d44b6b97000001d')})
  Rendered articles/_form.html.erb (42.2ms)
Completed 200 OK in 44ms (Views: 44.1ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"15", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-15 00:00:00 UTC, "_id"=>BSON::ObjectId('50a456f31d44b6b97000001e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456f31d44b6b97000001e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456f31d44b6b97000001e" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456f31d44b6b97000001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456f31d44b6b97000001e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a456f31d44b6b970000020'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a456f31d44b6b970000020
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a456f31d44b6b970000020" for 127.0.0.1 at 2012-11-14 23:44:03 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a456f31d44b6b970000020"}
MONGODB (44ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a456f31d44b6b970000020')}).limit(-1)
Completed 200 OK in 47ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)


Started GET "/users" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 13ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user2", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user2@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user2@example.com"}).limit(-1)
Completed 200 OK in 74ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user3@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user3@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7130899721584093797
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000012')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5410785123630295667
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.0ms)
MONGODB (34ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user5@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user5@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3310663106500471540
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560e1d44b6b968000015')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"[\"user6@example.com\"]", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"[\"user6@example.com\"]"}).limit(-1)
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user8@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user8@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user8@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 70ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3179891866417212258
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b968000018')}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8692814786942184303
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user9@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user9@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user9@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 71ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3270835402318261231
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a4560f1d44b6b96800001a')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user10@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user11@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_out" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by SessionsController#destroy as HTML
Redirected to http://www.example.com/
Completed 302 Found in 0ms (ActiveRecord: 0.0ms)


Started GET "/" for 127.0.0.1 at 2012-11-14 23:44:04 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5779111211013745670
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000007'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a457481d44b6b972000007')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000009'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b97200000b'), "name"=>"category"}])
MONGODB (78ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b97200000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000011'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000012'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000013'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000014'), "article_id"=>BSON::ObjectId('50a457481d44b6b972000012'), "category_id"=>BSON::ObjectId('50a457481d44b6b972000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000015'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457481d44b6b972000016'), "name"=>"categoria nueva"}])
MONGODB (38ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a457481d44b6b972000015"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a457481d44b6b972000015", "_id"=>BSON::ObjectId('50a457491d44b6b972000017')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a457491d44b6b972000018'), "article_id"=>BSON::ObjectId('50a457481d44b6b972000015'), "category_id"=>BSON::ObjectId('50a457491d44b6b972000017')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000002'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000003'), "article_id"=>BSON::ObjectId('50a457ec1d44b6b974000001'), "category_id"=>BSON::ObjectId('50a457ec1d44b6b974000002')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000004'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000005'), "name"=>"categoria nueva"}])
MONGODB (27ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a457ec1d44b6b974000004"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a457ec1d44b6b974000004", "_id"=>BSON::ObjectId('50a457ec1d44b6b974000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000007'), "article_id"=>BSON::ObjectId('50a457ec1d44b6b974000004'), "category_id"=>BSON::ObjectId('50a457ec1d44b6b974000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000008'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000009'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b97400000b'), "article_id"=>BSON::ObjectId('50a457ec1d44b6b97400000a'), "category_id"=>BSON::ObjectId('50a457ec1d44b6b974000009')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b97400000c'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b97400000d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b974000018'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a457ec1d44b6b97400001a'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a457ec1d44b6b97400001a')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (30ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457fb1d44b6b974000022'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457fb1d44b6b974000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457fb1d44b6b974000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a457fb1d44b6b974000027'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a459351d44b6b97a000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000005'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000006'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000007'), "article_id"=>BSON::ObjectId('50a459351d44b6b97a000005'), "category_id"=>BSON::ObjectId('50a459351d44b6b97a000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000008'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000009'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a459351d44b6b97a000008"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a459351d44b6b97a000008", "_id"=>BSON::ObjectId('50a459351d44b6b97a00000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a00000b'), "article_id"=>BSON::ObjectId('50a459351d44b6b97a000008'), "category_id"=>BSON::ObjectId('50a459351d44b6b97a00000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a00000c'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a00000d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a00000f'), "article_id"=>BSON::ObjectId('50a459351d44b6b97a00000e'), "category_id"=>BSON::ObjectId('50a459351d44b6b97a00000d')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000010'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000011'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000012'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a459351d44b6b97a000013'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4593a1d44b6b97a000023'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4593a1d44b6b97a000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4593a1d44b6b97a000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4593a1d44b6b97a000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000001'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000003'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000004'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000010'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000011'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000013'), "article_id"=>BSON::ObjectId('50a4595a1d44b6b97c000012'), "category_id"=>BSON::ObjectId('50a4595a1d44b6b97c000011')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000014'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000015'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a4595a1d44b6b97c000014"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a4595a1d44b6b97c000014", "_id"=>BSON::ObjectId('50a4595a1d44b6b97c000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000017'), "article_id"=>BSON::ObjectId('50a4595a1d44b6b97c000014'), "category_id"=>BSON::ObjectId('50a4595a1d44b6b97c000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000018'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c000019'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c00001a'), "article_id"=>BSON::ObjectId('50a4595a1d44b6b97c000018'), "category_id"=>BSON::ObjectId('50a4595a1d44b6b97c000019')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c00001b'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c00001c'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c00001e'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a4595a1d44b6b97c00001f'), "name"=>"categoria nueva"}])
MONGODB (8ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a4595a1d44b6b97c00001e"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a4595a1d44b6b97c00001e", "_id"=>BSON::ObjectId('50a4595a1d44b6b97c000020')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595d1d44b6b97c000031'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a4595d1d44b6b97c000031')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a4595d1d44b6b97c000033'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45a331d44b6b97e000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000005'), "name"=>"category"}])
MONGODB (13ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000008'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e00000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e00000c'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e00000d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45a331d44b6b97e00000c"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45a331d44b6b97e00000c", "_id"=>BSON::ObjectId('50a45a331d44b6b97e00000e')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e00000f'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000010'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000011'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000012'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000013'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000014'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000016'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a331d44b6b97e000017'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45a331d44b6b97e000016"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45a331d44b6b97e000016", "_id"=>BSON::ObjectId('50a45a331d44b6b97e000018')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b98000000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b98000000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b98000000e'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b980000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b980000019'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45a561d44b6b980000019')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a561d44b6b98000001b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000023'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000024'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000026'), "article_id"=>BSON::ObjectId('50a45a5c1d44b6b980000025'), "category_id"=>BSON::ObjectId('50a45a5c1d44b6b980000024')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000027'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000028'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45a5c1d44b6b980000027"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45a5c1d44b6b980000027", "_id"=>BSON::ObjectId('50a45a5c1d44b6b980000029')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002a'), "article_id"=>BSON::ObjectId('50a45a5c1d44b6b980000027'), "category_id"=>BSON::ObjectId('50a45a5c1d44b6b980000029')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002b'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002c'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002d'), "article_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002b'), "category_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002e'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b98000002f'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000031'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45a5c1d44b6b980000032'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45a5c1d44b6b980000031"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45a5c1d44b6b980000031", "_id"=>BSON::ObjectId('50a45a5c1d44b6b980000033')}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (1ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45af71d44b6b983000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000005'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000006'), "name"=>"categoria nueva"}])
MONGODB (18ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45af71d44b6b983000005"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45af71d44b6b983000005", "_id"=>BSON::ObjectId('50a45af71d44b6b983000007')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000008'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000009'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b98300000a'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b98300000b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b98300000c'), "article_id"=>BSON::ObjectId('50a45af71d44b6b98300000a'), "category_id"=>BSON::ObjectId('50a45af71d44b6b98300000b')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b98300000d'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b98300000e'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000010'), "article_id"=>BSON::ObjectId('50a45af71d44b6b98300000f'), "category_id"=>BSON::ObjectId('50a45af71d44b6b98300000e')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000011'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000012'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45af71d44b6b983000011"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45af71d44b6b983000011", "_id"=>BSON::ObjectId('50a45af71d44b6b983000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45af71d44b6b983000014'), "article_id"=>BSON::ObjectId('50a45af71d44b6b983000011'), "category_id"=>BSON::ObjectId('50a45af71d44b6b983000013')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45b971d44b6b98300001b'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45b971d44b6b98300001d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45b971d44b6b983000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45b971d44b6b983000021'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000009'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000a'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000d'), "article_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000b'), "category_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000e'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000f'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45bd61d44b6b98f00000e"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45bd61d44b6b98f00000e", "_id"=>BSON::ObjectId('50a45bd61d44b6b98f000011')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000012'), "article_id"=>BSON::ObjectId('50a45bd61d44b6b98f00000e'), "category_id"=>BSON::ObjectId('50a45bd61d44b6b98f000011')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000013'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000014'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000016'), "article_id"=>BSON::ObjectId('50a45bd61d44b6b98f000013'), "category_id"=>BSON::ObjectId('50a45bd61d44b6b98f000014')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000017'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f000018'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00001a'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45bd61d44b6b98f00001b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45bd61d44b6b98f00001a"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45bd61d44b6b98f00001a", "_id"=>BSON::ObjectId('50a45bd61d44b6b98f00001d')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (77ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45c801d44b6b98f00002e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45c801d44b6b98f000030'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45c801d44b6b98f000032'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45c801d44b6b98f000033'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45c801d44b6b98f000034'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45c801d44b6b98f000034')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45c811d44b6b98f000036'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000002'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45cd71d44b6b992000001"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45cd71d44b6b992000001", "_id"=>BSON::ObjectId('50a45cd71d44b6b992000003')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000004'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000005'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000006'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000007'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000009'), "article_id"=>BSON::ObjectId('50a45cd71d44b6b992000008'), "category_id"=>BSON::ObjectId('50a45cd71d44b6b992000007')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b99200000a'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b99200000b'), "name"=>"categoria nueva"}])
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45cd71d44b6b99200000a"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45cd71d44b6b99200000a", "_id"=>BSON::ObjectId('50a45cd71d44b6b99200000c')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b99200000d'), "article_id"=>BSON::ObjectId('50a45cd71d44b6b99200000a'), "category_id"=>BSON::ObjectId('50a45cd71d44b6b99200000c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b99200000e'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b99200000f'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45cd71d44b6b992000010'), "article_id"=>BSON::ObjectId('50a45cd71d44b6b99200000e'), "category_id"=>BSON::ObjectId('50a45cd71d44b6b99200000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a238d066a860b1b800000d')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a238d466a860b1b8000015')})
MONGODB (19ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45cd71d44b6b99200001a')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45cd71d44b6b99200001b')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cd71d44b6b99200001a')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cd71d44b6b99200001b')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45cd81d44b6b99200001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45cd81d44b6b99200001d')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cd81d44b6b99200001c')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cd81d44b6b99200001d')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45cdb1d44b6b99200001e')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45cdb1d44b6b99200001f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000021'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000023'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000026'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000027'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000027')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45cdb1d44b6b992000028'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d581d44b6b994000002'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d581d44b6b994000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45d581d44b6b994000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (7ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cdb1d44b6b99200001e')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45cdb1d44b6b99200001f')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d581d44b6b994000005')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d581d44b6b994000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d581d44b6b994000005')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d581d44b6b994000006')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d581d44b6b994000007')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d581d44b6b994000008')}])
MONGODB (6ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d581d44b6b994000007')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d581d44b6b994000008')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d5c1d44b6b994000009')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d5c1d44b6b99400000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400000e'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000016'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000017'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000019'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400001a'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000023'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000024'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45d5c1d44b6b994000023"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45d5c1d44b6b994000023", "_id"=>BSON::ObjectId('50a45d5c1d44b6b994000025')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000026'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000027'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000028'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000029'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002a'), "article_id"=>BSON::ObjectId('50a45d5c1d44b6b994000028'), "category_id"=>BSON::ObjectId('50a45d5c1d44b6b994000029')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002b'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002c'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45d5c1d44b6b99400002b"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45d5c1d44b6b99400002b", "_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002d')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002e'), "article_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002b'), "category_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002d')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b99400002f'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000030'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d5c1d44b6b994000032'), "article_id"=>BSON::ObjectId('50a45d5c1d44b6b994000031'), "category_id"=>BSON::ObjectId('50a45d5c1d44b6b994000030')}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d721d44b6b996000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45d731d44b6b996000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600000d'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000010'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000012'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000013'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000014'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000015'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000016'), "article_id"=>BSON::ObjectId('50a45d731d44b6b996000014'), "category_id"=>BSON::ObjectId('50a45d731d44b6b996000015')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000017'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000018'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45d731d44b6b996000017"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45d731d44b6b996000017", "_id"=>BSON::ObjectId('50a45d731d44b6b996000019')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600001a'), "article_id"=>BSON::ObjectId('50a45d731d44b6b996000017'), "category_id"=>BSON::ObjectId('50a45d731d44b6b996000019')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600001b'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600001c'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600001e'), "article_id"=>BSON::ObjectId('50a45d731d44b6b99600001d'), "category_id"=>BSON::ObjectId('50a45d731d44b6b99600001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b99600001f'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000020'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000021'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45d731d44b6b996000022'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45d731d44b6b996000021"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45d731d44b6b996000021", "_id"=>BSON::ObjectId('50a45d731d44b6b996000023')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d5c1d44b6b994000009')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d5c1d44b6b99400000a')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d5c1d44b6b99400000e')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d731d44b6b996000024')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d731d44b6b996000025')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d731d44b6b996000024')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d731d44b6b996000025')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d731d44b6b996000026')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d731d44b6b996000027')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d731d44b6b996000026')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d731d44b6b996000027')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45d7e1d44b6b996000028')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45d7e1d44b6b996000029')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a45d801d44b6b99600002f'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b99800000a'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b99800000b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b99800000c'), "article_id"=>BSON::ObjectId('50a45e011d44b6b99800000a'), "category_id"=>BSON::ObjectId('50a45e011d44b6b99800000b')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b99800000d'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b99800000e'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45e011d44b6b99800000d"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45e011d44b6b99800000d", "_id"=>BSON::ObjectId('50a45e011d44b6b99800000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000010'), "article_id"=>BSON::ObjectId('50a45e011d44b6b99800000d'), "category_id"=>BSON::ObjectId('50a45e011d44b6b99800000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000011'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000012'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000014'), "article_id"=>BSON::ObjectId('50a45e011d44b6b998000013'), "category_id"=>BSON::ObjectId('50a45e011d44b6b998000012')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000015'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000016'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000017'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e011d44b6b998000018'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45e011d44b6b998000017"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45e011d44b6b998000017", "_id"=>BSON::ObjectId('50a45e011d44b6b998000019')}])
MONGODB (9ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d7e1d44b6b996000028')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d7e1d44b6b996000029')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45d801d44b6b99600002f')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e011d44b6b99800001a')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e011d44b6b99800001b')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e011d44b6b99800001a')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e011d44b6b99800001b')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e011d44b6b99800001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e011d44b6b99800001d')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e011d44b6b99800001c')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e011d44b6b99800001d')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e051d44b6b99800001e')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e051d44b6b99800001f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b99800002a'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b99800002b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45e071d44b6b99800002b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b99800002c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b99800002f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b998000031'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e071d44b6b998000032'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e051d44b6b99800001e')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e051d44b6b99800001f')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e861d44b6b99a000001')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e861d44b6b99a000002')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e861d44b6b99a000001')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e861d44b6b99a000002')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e861d44b6b99a000003')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e861d44b6b99a000004')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e861d44b6b99a000003')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e861d44b6b99a000004')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45e891d44b6b99a000005')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45e891d44b6b99a000006')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000009'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000012'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000013'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000013')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001c'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001e'), "article_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001c'), "category_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001d')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001f'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000020'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45e8b1d44b6b99a00001f"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45e8b1d44b6b99a00001f", "_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000021')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000022'), "article_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00001f'), "category_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000021')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000023'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000024'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000026'), "article_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000025'), "category_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000024')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000027'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000028'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000029'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00002a'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45e8b1d44b6b99a000029"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45e8b1d44b6b99a000029", "_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00002b')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00002c'), "headline"=>"i get published at once, 6", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00002d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a00002f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000030'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000032'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45e8b1d44b6b99a000034'), "name"=>"category"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000001'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user1@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000006'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45fba1d44b6b9b2000005"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45fba1d44b6b9b2000005", "_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000007')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000009'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b200000b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b200000d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45fba1d44b6b9b200000c"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45fba1d44b6b9b200000c", "_id"=>BSON::ObjectId('50a45fba1d44b6b9b200000e')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000010'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000012'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e891d44b6b99a000005')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e891d44b6b99a000006')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45e8b1d44b6b99a000009')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000014')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45fba1d44b6b9b2000015')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fba1d44b6b9b2000014')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fba1d44b6b9b2000015')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45fc81d44b6b9b2000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45fc81d44b6b9b2000017')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fc81d44b6b9b2000016')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fc81d44b6b9b2000017')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a45fc81d44b6b9b2000018')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a45fc81d44b6b9b2000019')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001a'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a45fca1d44b6b9b200001a"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a45fca1d44b6b9b200001a", "_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001c')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001d'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001e'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200001f'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000020'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000021'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000022'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a45fca1d44b6b9b2000021"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a45fca1d44b6b9b2000021", "_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000023')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000024'), "article_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000021'), "category_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000023')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000025'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000026'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000027'), "article_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000025'), "category_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000026')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000028'), "headline"=>"i get published at once, 6", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000029'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200002b'), "article_id"=>BSON::ObjectId('50a45fca1d44b6b9b200002a'), "category_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000029')}])
MONGODB (25ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200002e'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000036'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b2000038'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200003a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a45fca1d44b6b9b200003b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000012'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000013'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000014'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000015'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a460711d44b6b9b4000014"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a460711d44b6b9b4000014", "_id"=>BSON::ObjectId('50a460711d44b6b9b4000016')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000017'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000018'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000019'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b400001a'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b400001b'), "article_id"=>BSON::ObjectId('50a460711d44b6b9b4000019'), "category_id"=>BSON::ObjectId('50a460711d44b6b9b400001a')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b400001c'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b400001d'), "name"=>"categoria nueva"}])
MONGODB (22ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a460711d44b6b9b400001c"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a460711d44b6b9b400001c", "_id"=>BSON::ObjectId('50a460711d44b6b9b400001e')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b400001f'), "article_id"=>BSON::ObjectId('50a460711d44b6b9b400001c'), "category_id"=>BSON::ObjectId('50a460711d44b6b9b400001e')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000020'), "headline"=>"i get published at once, 6", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000021'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460711d44b6b9b4000023'), "article_id"=>BSON::ObjectId('50a460711d44b6b9b4000022'), "category_id"=>BSON::ObjectId('50a460711d44b6b9b4000021')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fc81d44b6b9b2000018')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fc81d44b6b9b2000019')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a45fca1d44b6b9b200002e')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460711d44b6b9b4000024')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460711d44b6b9b4000025')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460711d44b6b9b4000024')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460711d44b6b9b4000025')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460711d44b6b9b4000026')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460711d44b6b9b4000027')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460711d44b6b9b4000026')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460711d44b6b9b4000027')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460751d44b6b9b4000028')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460751d44b6b9b4000029')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460771d44b6b9b400002b'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460771d44b6b9b400002d'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a460771d44b6b9b400002d')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (36ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user1@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b400002f'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000031'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"user_artes 50a460781d44b6b9b4000030"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"user_artes 50a460781d44b6b9b4000030", "_id"=>BSON::ObjectId('50a460781d44b6b9b4000032')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000034'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000036'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000039'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte_user 50a460781d44b6b9b4000038"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte_user 50a460781d44b6b9b4000038", "_id"=>BSON::ObjectId('50a460781d44b6b9b400003a')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b400003d'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000040'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000043'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000045'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460781d44b6b9b4000046'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000009'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600000a'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600000c'), "article_id"=>BSON::ObjectId('50a460b01d44b6b9b600000b'), "category_id"=>BSON::ObjectId('50a460b01d44b6b9b600000a')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600000d'), "headline"=>"i get published at once, 2", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600000e'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte 50a460b01d44b6b9b600000d"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte 50a460b01d44b6b9b600000d", "_id"=>BSON::ObjectId('50a460b01d44b6b9b600000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000010'), "article_id"=>BSON::ObjectId('50a460b01d44b6b9b600000d'), "category_id"=>BSON::ObjectId('50a460b01d44b6b9b600000f')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000011'), "headline"=>"i get published at once, 3", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000012'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000013'), "article_id"=>BSON::ObjectId('50a460b01d44b6b9b6000011'), "category_id"=>BSON::ObjectId('50a460b01d44b6b9b6000012')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000014'), "headline"=>"i get published at once, 4", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000015'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000016'), "headline"=>"i get published at once, 5", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000017'), "name"=>"categoria nueva"}])
MONGODB (26ms) rails3_mongoid_devise_test['categories'].find({:name=>"artes 50a460b01d44b6b9b6000016"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"artes 50a460b01d44b6b9b6000016", "_id"=>BSON::ObjectId('50a460b01d44b6b9b6000018')}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000019'), "headline"=>"i get published at once, 6", "story"=>"it is an article", "is_published"=>true}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600001a'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600001b'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a460b01d44b6b9b600001b')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600001d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000020'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000021'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000025'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user1@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000027'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user2@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600002b'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"arte_user 50a460b01d44b6b9b600002a"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"arte_user 50a460b01d44b6b9b600002a", "_id"=>BSON::ObjectId('50a460b01d44b6b9b600002c')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user3@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600002f'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user4@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user5@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000032'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user6@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000034'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({:name=>"user_artes 50a460b01d44b6b9b6000033"}, {:_id=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"name"=>"user_artes 50a460b01d44b6b9b6000033", "_id"=>BSON::ObjectId('50a460b01d44b6b9b6000035')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user7@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b6000037'), "name"=>"categoria nueva"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a460b01d44b6b9b600003a'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460751d44b6b9b4000028')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460751d44b6b9b4000029')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460b01d44b6b9b600003a')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460b01d44b6b9b6000041')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460b01d44b6b9b6000042')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460b01d44b6b9b6000041')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460b01d44b6b9b6000042')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460b11d44b6b9b6000043')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460b11d44b6b9b6000044')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460b11d44b6b9b6000043')})
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].remove({:_id=>BSON::ObjectId('50a460b11d44b6b9b6000044')})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a460b31d44b6b9b6000045')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a460b31d44b6b9b6000046')}])
