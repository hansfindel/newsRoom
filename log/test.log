Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a238d066a860b1b8000004')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000005'), "name"=>"category"}])
MONGODB (20ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000008'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b8000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a238d066a860b1b800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"UPS", "feed_url"=>"http://feeds.feedburner.com/railscasts", "_id"=>BSON::ObjectId('50a238d066a860b1b800000c')}])
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"name"=>"Reuters", "feed_url"=>"http://feeds.mashable.com/mashable", "_id"=>BSON::ObjectId('50a238d066a860b1b800000d')}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000015'), "name"=>"Agency", "feed_url"=>"http://urltest.com"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000021'), "name"=>"user", "email"=>"hola@hola.com", "role"=>"reader", "password_salt"=>"$2a$10$Gk1QdYnGSOsMpziN4Rpg/O", "password_hash"=>"$2a$10$Gk1QdYnGSOsMpziN4Rpg/OgF0Bg0N3AoiM4oZa/rAc366z8Snh3/m"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (4.7ms)
Completed 200 OK in 49ms (Views: 48.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (3.3ms)
Completed 200 OK in 7ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.9ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 48.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b8000029'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a238d466a860b1b800002a", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002a'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b800002a
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b800002a" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b800002a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b800002a')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 10ms (Views: 9.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a238d466a860b1b800002e'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 44ms (Views: 43.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a238d466a860b1b8000030'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b8000030
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b8000030" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b8000030"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b8000030')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.4ms)
Completed 200 OK in 14ms (Views: 13.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a238d466a860b1b8000033'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a238d466a860b1b8000033
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a238d466a860b1b8000033" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a238d466a860b1b8000033"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a238d466a860b1b8000033')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:11:00 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (39.1ms)
Completed 200 OK in 41ms (Views: 40.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:11:01 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (9ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23a4066a860b1bf00000f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (4.6ms)
Completed 200 OK in 15ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:17:05 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000024'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23a4866a860b1bf000024')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000025'), "headline"=>"uniq"}])


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.5ms)
Completed 200 OK in 53ms (Views: 52.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (38.8ms)
Completed 200 OK in 41ms (Views: 40.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23a4866a860b1bf00002b'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf00002b
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf00002b" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf00002b"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf00002b')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23a4866a860b1bf00002d'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf00002d
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf00002d" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf00002d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf00002d')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000030'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 10.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000032'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000034'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23a4866a860b1bf000035", "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23a4866a860b1bf000035'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23a4866a860b1bf000035
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23a4866a860b1bf000035" for 127.0.0.1 at 2012-11-13 09:17:12 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23a4866a860b1bf000035"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23a4866a860b1bf000035')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (9.0ms)
Completed 200 OK in 20ms (Views: 19.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (8ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.9ms)
Completed 200 OK in 15ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000007'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000009'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d100001f'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000021'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23c6566a860b1d1000021')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23c6566a860b1d1000022'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000022
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000022" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000022"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000022')}).limit(-1)
Completed 200 OK in 42ms (Views: 41.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (8.8ms)
Completed 200 OK in 14ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23c6566a860b1d1000025'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000025
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000025" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000025"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000025')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.0ms)
  Rendered articles/_form.html.erb (5.8ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:26:13 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23c6566a860b1d1000029", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6566a860b1d1000029'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23c6566a860b1d1000029
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23c6566a860b1d1000029" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23c6566a860b1d1000029"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23c6566a860b1d1000029')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d100002b'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 46ms (Views: 45.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d100002d'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 11ms (Views: 11.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23c6666a860b1d1000030'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:26:14 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4966a860b1d5000003'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4966a860b1d5000004'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23d4966a860b1d5000004')}, {"$set"=>{"deck"=>"it is an article"}})


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (36.4ms)
Completed 200 OK in 47ms (Views: 46.7ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 49.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 11.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23d4a66a860b1d500000e", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d500000e'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d500000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d500000e" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d500000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d500000e')}).limit(-1)
Completed 200 OK in 5ms (Views: 3.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23d4a66a860b1d5000010'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 11.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23d4a66a860b1d5000012'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d5000012
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d5000012" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d5000012"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d5000012')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
  Rendered articles/_form.html.erb (9.2ms)
Completed 200 OK in 49ms (Views: 48.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23d4a66a860b1d5000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23d4a66a860b1d5000015
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23d4a66a860b1d5000015" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23d4a66a860b1d5000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23d4a66a860b1d5000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:30:02 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.2ms)
Completed 200 OK in 9ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000030'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000033'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000035'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23d5066a860b1d5000036'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a23db366a860b1d800000f'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000016'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
  Rendered articles/show_non_published.html.erb within layouts/application (3.1ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000017'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 49ms (Views: 48.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a23dbb66a860b1d8000019", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000019'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000019
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000019" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000019"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000019')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 12ms (Views: 12.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d800001c'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true})
Completed 200 OK in 13ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
  Rendered articles/_form.html.erb (44.4ms)
Completed 200 OK in 50ms (Views: 49.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.4ms)
Completed 200 OK in 9ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
  Rendered articles/_form.html.erb (6.0ms)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"13", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-13 00:00:00 UTC, "_id"=>BSON::ObjectId('50a23dbb66a860b1d8000021'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000021
Completed 302 Found in 33ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000021" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000021"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000021')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a23dbb66a860b1d8000023'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a23dbb66a860b1d8000023
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a23dbb66a860b1d8000023" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a23dbb66a860b1d8000023"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a23dbb66a860b1d8000023')}).limit(-1)
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d800002e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a23dbb66a860b1d800002e')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a23dbb66a860b1d8000030'), "headline"=>"uniq"}])


Started GET "/users/new" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-13 09:31:55 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (54ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (15ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000c'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000e'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ea721d44b6b67800000f'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 106ms (Views: 105.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 898358178797581752
MONGODB (32ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 105ms (Views: 104.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001a'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (11ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 48ms (Views: 47.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001b'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8842914822938687057
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3ea7c1d44b6b67800001d", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001d'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ea7c1d44b6b67800001d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ea7c1d44b6b67800001d" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ea7c1d44b6b67800001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ea7c1d44b6b67800001d')}).limit(-1)
Completed 200 OK in 17ms (Views: 15.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800001f'), "headline"=>"Article 4", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8913142924117276281
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3ea7c1d44b6b678000021'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ea7c1d44b6b678000021
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ea7c1d44b6b678000021" for 127.0.0.1 at 2012-11-14 16:01:16 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ea7c1d44b6b678000021"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ea7c1d44b6b678000021')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002d'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002e'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3ea7c1d44b6b67800002e')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (7.3ms)
Completed 200 OK in 86ms (Views: 85.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 8ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 19ms (Views: 18.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3edd11d44b6b69500000c", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd11d44b6b69500000c'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd11d44b6b69500000c
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd11d44b6b69500000c" for 127.0.0.1 at 2012-11-14 16:15:29 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd11d44b6b69500000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd11d44b6b69500000c')}).limit(-1)
Completed 200 OK in 53ms (Views: 51.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500000e'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500000f'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5016117022541020289
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 44ms (Views: 43.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000011'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5933143985355291825
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7968422780978396348
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3edd21d44b6b695000014'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd21d44b6b695000014
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd21d44b6b695000014" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd21d44b6b695000014"}
MONGODB (18ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd21d44b6b695000014')}).limit(-1)
Completed 200 OK in 21ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000016')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000016')})
  Rendered articles/_form.html.erb (93.2ms)
Completed 200 OK in 119ms (Views: 118.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3edd21d44b6b695000017'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3edd21d44b6b695000017
Completed 302 Found in 20ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3edd21d44b6b695000017" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3edd21d44b6b695000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3edd21d44b6b695000017')}).limit(-1)
MONGODB (20ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 24ms (Views: 23.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b695000019')})
  Rendered articles/_form.html.erb (10.2ms)
Completed 200 OK in 13ms (Views: 12.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:15:30 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b69500001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3edd21d44b6b69500001a')})
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 14ms (Views: 12.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000025'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000026'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3edd21d44b6b695000026')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000027'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b695000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500002b'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3edd21d44b6b69500002c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (5.4ms)
Completed 200 OK in 68ms (Views: 67.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.7ms)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 17ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000014')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000014')})
  Rendered articles/_form.html.erb (70.2ms)
Completed 200 OK in 121ms (Views: 120.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000015'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3b1d44b6b69f000015
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3b1d44b6b69f000015" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3b1d44b6b69f000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3b1d44b6b69f000015')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 19ms (Views: 17.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000017'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3b1d44b6b69f000017
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3b1d44b6b69f000017" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3b1d44b6b69f000017"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3b1d44b6b69f000017')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f000019')})
  Rendered articles/_form.html.erb (84.7ms)
Completed 200 OK in 87ms (Views: 86.7ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001a')})
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001b'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 40ms (Views: 39.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3b1d44b6b69f00001c'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:31 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3796892110626390577
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 507ms (Views: 506.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3ef3c1d44b6b69f00001e", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f00001e'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3ef3c1d44b6b69f00001e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3ef3c1d44b6b69f00001e" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3ef3c1d44b6b69f00001e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3ef3c1d44b6b69f00001e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000020'), "headline"=>"i get published at once", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6139225436864808022
MONGODB (43ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 51ms (Views: 50.4ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:21:32 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 958305103228339298
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000024'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000027'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000028'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000029'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000033'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000036'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3ef3c1d44b6b69f000036')}, {"$set"=>{"deck"=>"it is an article"}})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000002'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000002')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1611d44b6b6b1000004'), "headline"=>"uniq"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:30:57 -0300
Processing by UsersController#new as HTML
  Rendered users/new.html.erb within layouts/application (6.0ms)
Completed 200 OK in 65ms (Views: 64.2ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
  Rendered users/new.html.erb within layouts/application (2.9ms)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8890267790861608477
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 98ms (Views: 97.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3f1721d44b6b6b1000011", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000011'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b1000011
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b1000011" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b1000011"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b1000011')}).limit(-1)
Completed 200 OK in 58ms (Views: 56.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000013'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000014'), "headline"=>"i get published at once", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5541483740085561013
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000016'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4895155393273472704
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000018'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b1000018
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b1000018" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b1000018"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b1000018')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001a')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001a')})
  Rendered articles/_form.html.erb (60.9ms)
Completed 200 OK in 77ms (Views: 76.0ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001b')})
  Rendered articles/_form.html.erb (12.0ms)
Completed 200 OK in 15ms (Views: 14.2ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001c')})
  Rendered articles/_form.html.erb (10.1ms)
Completed 200 OK in 12ms (Views: 11.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3f1721d44b6b6b100001d'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f1721d44b6b6b100001d
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f1721d44b6b6b100001d" for 127.0.0.1 at 2012-11-14 16:30:58 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f1721d44b6b6b100001d"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f1721d44b6b6b100001d')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000027'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b1000029'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b100002a'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f1721d44b6b6b100002c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.feedburner.com/railscasts"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"UPS"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://feeds.mashable.com/mashable"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:name=>"Reuters"}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000009'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000a'), "name"=>"category"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000c'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['categories'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500000d'), "name"=>"ThisNewCategory"}])
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"categories", "query"=>{:name=>"ThisNewCategory"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"url"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>"http://urltest.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"news_agencies", "query"=>{:feed_url=>nil}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.5ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000017')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000017')})
  Rendered articles/_form.html.erb (16.0ms)
  Rendered articles/new.html.erb within layouts/application (21.0ms)
Completed 200 OK in 68ms (Views: 67.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000018')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000018')})
  Rendered articles/_form.html.erb (11.6ms)
  Rendered articles/new.html.erb within layouts/application (12.0ms)
Completed 200 OK in 15ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000019')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000019')})
  Rendered articles/_form.html.erb (10.1ms)
Completed 200 OK in 12ms (Views: 11.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001a'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001a
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001a" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001a"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001a')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 11ms (Views: 10.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001c'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001c
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001c" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001e'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a3f2161d44b6b6b500001f", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b500001f'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a3f2161d44b6b6b500001f
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a3f2161d44b6b6b500001f" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a3f2161d44b6b6b500001f"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a3f2161d44b6b6b500001f')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6835757695055276167
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 14ms (Views: 13.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000022'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 20659166362839230
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000024'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 5449170461804570826
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 16:33:42 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>nil}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"test@hmail.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"hola@hola.com"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000033'), "headline"=>"unique"}])
MONGODB (0ms) rails3_mongoid_devise_test['articles'].update({"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000033')}, {"$set"=>{"deck"=>"it is an article"}})
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a3f2161d44b6b6b5000034'), "headline"=>"uniq"}])
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (932ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:13:55 -0300
Processing by SessionsController#new as HTML
  Rendered sessions/new.html.erb within layouts/application (4.6ms)
Completed 200 OK in 118ms (Views: 117.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 80ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7604549226071874345
MONGODB (19ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (87ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 299ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a41d44b6b80b000003'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 14ms (Views: 13.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a417a41d44b6b80b000004", "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a41d44b6b80b000004'), "headline"=>"Article 2", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a41d44b6b80b000004
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a41d44b6b80b000004" for 127.0.0.1 at 2012-11-14 19:13:56 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a41d44b6b80b000004"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a41d44b6b80b000004')}).limit(-1)
Completed 200 OK in 19ms (Views: 18.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3767212366202952852
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a51d44b6b80b000007'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6572086903984381088
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a417a51d44b6b80b000009'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3466465884120046763
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (19ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b00000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b00000b')})
  Rendered articles/_form.html.erb (138.4ms)
Completed 200 OK in 178ms (Views: 177.3ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a417a51d44b6b80b00000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a51d44b6b80b00000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a51d44b6b80b00000c" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a51d44b6b80b00000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a51d44b6b80b00000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a417a51d44b6b80b00000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a417a51d44b6b80b00000e
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a417a51d44b6b80b00000e" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a417a51d44b6b80b00000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a417a51d44b6b80b00000e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000010')})
  Rendered articles/_form.html.erb (10.4ms)
Completed 200 OK in 13ms (Views: 12.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a417a51d44b6b80b000011')})
  Rendered articles/_form.html.erb (10.3ms)
Completed 200 OK in 13ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 22ms (Views: 21.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:13:57 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:17:07 -0300
Processing by UsersController#index as HTML
MONGODB (1ms) rails3_mongoid_devise_test['users'].find({})
  Rendered users/index.html.erb within layouts/application (40.5ms)
Completed 200 OK in 111ms (Views: 110.7ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:17:07 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 153ms (Views: 152.4ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 21ms (Views: 20.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 6555467145780610980
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 119ms


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 628585678015252494
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a418641d44b6b80e000009", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e000009'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000009
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000009" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000009')}).limit(-1)
Completed 200 OK in 27ms (Views: 25.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000b'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 9208478550577858649
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 45ms (Views: 44.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000d'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 23ms (Views: 22.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418641d44b6b80e00000e'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1720744360435206313
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000010')})
  Rendered articles/_form.html.erb (38.2ms)
Completed 200 OK in 64ms (Views: 63.2ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000011')})
  Rendered articles/_form.html.erb (11.4ms)
Completed 200 OK in 50ms (Views: 48.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000012')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418641d44b6b80e000012')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a418641d44b6b80e000013'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000013
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000013" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000013"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000013')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a418641d44b6b80e000015'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418641d44b6b80e000015
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418641d44b6b80e000015" for 127.0.0.1 at 2012-11-14 19:17:08 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418641d44b6b80e000015"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418641d44b6b80e000015')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a11d44b6b810000001'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:18:09 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
  Rendered articles/show_non_published.html.erb within layouts/application (3.8ms)
Completed 200 OK in 106ms (Views: 104.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a11d44b6b810000002'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:09 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3991193961501833287
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 169ms (Views: 168.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a21d44b6b810000004'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2589195041268316441
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2390621909852109090
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 6.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a418a21d44b6b810000007", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a418a21d44b6b810000007'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b810000007
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b810000007" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b810000007"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b810000007')}).limit(-1)
Completed 200 OK in 23ms (Views: 21.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a418a21d44b6b810000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b810000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b810000009" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b810000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b810000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000b')})
  Rendered articles/_form.html.erb (38.0ms)
Completed 200 OK in 69ms (Views: 68.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000c')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000c')})
  Rendered articles/_form.html.erb (45.3ms)
Completed 200 OK in 49ms (Views: 47.3ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000d')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a418a21d44b6b81000000d')})
  Rendered articles/_form.html.erb (10.7ms)
Completed 200 OK in 13ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a418a21d44b6b81000000e'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a418a21d44b6b81000000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a418a21d44b6b81000000e" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a418a21d44b6b81000000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a418a21d44b6b81000000e')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 16ms (Views: 15.3ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 40ms (Views: 39.5ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 17ms (Views: 17.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:18:10 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7780315509915925645
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 25ms
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:21:56 -0300
Processing by SessionsController#new as HTML
  Rendered sessions/new.html.erb within layouts/application (4.8ms)
Completed 200 OK in 96ms (Views: 95.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 39ms (Views: 39.3ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 72ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7637768410105098513
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 500 Internal Server Error in 84ms
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000003'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 40ms (Views: 39.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000004'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3859950429635064247
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a419851d44b6b814000006", "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000006'), "headline"=>"Article 3", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b814000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b814000006" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b814000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b814000006')}).limit(-1)
Completed 200 OK in 13ms (Views: 11.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419851d44b6b814000008'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3035590177960735218
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.6ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 1385936885024797181
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.7ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b81400000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b81400000b')})
  Rendered articles/_form.html.erb (93.1ms)
Completed 200 OK in 125ms (Views: 124.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a419851d44b6b81400000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b81400000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b81400000c" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b81400000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b81400000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a419851d44b6b81400000e'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419851d44b6b81400000e
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419851d44b6b81400000e" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419851d44b6b81400000e"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419851d44b6b81400000e')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000010')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000010')})
  Rendered articles/_form.html.erb (9.2ms)
Completed 200 OK in 11ms (Views: 10.9ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000011')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419851d44b6b814000011')})
  Rendered articles/_form.html.erb (47.0ms)
Completed 200 OK in 50ms (Views: 48.7ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 15ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 5ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:21:57 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 6ms (Views: 4.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a419be1d44b6b816000001'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419be1d44b6b816000001
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419be1d44b6b816000001" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419be1d44b6b816000001"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419be1d44b6b816000001')}).limit(-1)
  Rendered articles/show.html.erb within layouts/application (26.7ms)
Completed 200 OK in 114ms (Views: 112.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (1ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:22:54 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (1.3ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419be1d44b6b816000003')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419be1d44b6b816000003')})
  Rendered articles/_form.html.erb (181.7ms)
Completed 200 OK in 235ms (Views: 234.4ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000004')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000004')})
  Rendered articles/_form.html.erb (10.6ms)
Completed 200 OK in 14ms (Views: 12.5ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000005')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a419bf1d44b6b816000005')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.6ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a419bf1d44b6b816000006'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419bf1d44b6b816000006
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419bf1d44b6b816000006" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419bf1d44b6b816000006"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419bf1d44b6b816000006')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 4773355137291031473
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 66ms (Views: 65.9ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a419bf1d44b6b816000009", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b816000009'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a419bf1d44b6b816000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a419bf1d44b6b816000009" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a419bf1d44b6b816000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a419bf1d44b6b816000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000b'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3562802365642085384
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000d'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (14ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 35ms (Views: 34.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a419bf1d44b6b81600000e'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 829343371532473403
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 24ms (Views: 23.8ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 23ms (Views: 22.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 74ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 7205625941996115211
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.5ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:22:55 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.0ms)
Connecting to database specified by database.yml
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
New Relic Agent not running.
MONGODB (1ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a141d44b6b819000001'), "headline"=>"i get published at once, 1", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 641686260276388542
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
  Rendered articles/index.html.erb within layouts/application (156.6ms)
Completed 200 OK in 236ms (Views: 235.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"_id"=>"50a41a151d44b6b819000003", "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>"false"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000003'), "headline"=>"Article 1", "story"=>"it is an article", "is_published"=>false, "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a151d44b6b819000003
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a151d44b6b819000003" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a151d44b6b819000003"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a151d44b6b819000003')}).limit(-1)
Completed 200 OK in 20ms (Views: 19.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>false}, "fields"=>nil}).limit(-1)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 8919935676901090226
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000006'), "headline"=>"my headline is not displayed in published areas", "story"=>"it is an article", "is_published"=>false}])


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 3580624976682017727
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
Completed 200 OK in 8ms (Views: 8.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"_id"=>BSON::ObjectId('50a41a151d44b6b819000008'), "headline"=>"basdf", "story"=>"it is an article", "is_published"=>true}])


Started GET "/articles/non_published" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show_non_published as HTML
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>false, :editors_grade=>0, :user_id=>true})
Completed 200 OK in 16ms (Views: 15.7ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"article"=>{"headline"=>"holo", "story"=>"story"}}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"holo", "story"=>"story", "_id"=>BSON::ObjectId('50a41a151d44b6b819000009'), "grade"=>0.0, "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a151d44b6b819000009
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a151d44b6b819000009" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a151d44b6b819000009"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a151d44b6b819000009')}).limit(-1)
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{}, "fields"=>nil}).limit(-1)
MONGODB (2ms) rails3_mongoid_devise_test['articles'].find({:headline=>"holo"})


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:24:21 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.6ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a151d44b6b81900000b')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a151d44b6b81900000b')})
  Rendered articles/_form.html.erb (38.0ms)
Completed 200 OK in 69ms (Views: 68.8ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].insert([{"headline"=>"fire", "deck"=>"", "story"=>"here", "news_agency_id"=>BSON::ObjectId('50a238d066a860b1b800000c'), "grade"=>0.0, "published_on"=>2012-11-14 00:00:00 UTC, "_id"=>BSON::ObjectId('50a41a161d44b6b81900000c'), "editors_grade"=>0, "chief_editor_grade"=>0, "chief_editor_country_grade"=>0}])
Redirected to http://www.example.com/articles/50a41a161d44b6b81900000c
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/articles/50a41a161d44b6b81900000c" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"50a41a161d44b6b81900000c"}
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:_id=>BSON::ObjectId('50a41a161d44b6b81900000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
Completed 200 OK in 37ms (Views: 36.0ms | ActiveRecord: 0.0ms)


Started GET "/articles/new" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#new as HTML
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000e')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000e')})
  Rendered articles/_form.html.erb (9.8ms)
Completed 200 OK in 12ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started POST "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "article"=>{"published_on(1i)"=>"2012", "published_on(2i)"=>"11", "published_on(3i)"=>"14", "headline"=>"", "deck"=>"", "story"=>"ice", "news_agency_id"=>"50a238d066a860b1b800000c", "grade"=>""}, "commit"=>"Create Article"}
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({})
  Rendered articles/_grades.html.erb (0.1ms)
MONGODB (0ms) rails3_mongoid_devise_test['news_agencies'].find({:_id=>BSON::ObjectId('50a238d066a860b1b800000c')}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['article_categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000f')})
MONGODB (0ms) rails3_mongoid_devise_test['categories'].find({"article_id"=>BSON::ObjectId('50a41a161d44b6b81900000f')})
  Rendered articles/_form.html.erb (11.1ms)
Completed 200 OK in 14ms (Views: 12.8ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 76ms (Views: 76.1ms | ActiveRecord: 0.0ms)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>"user@example.com"}, "fields"=>nil}).limit(-1)


Started GET "/log_in" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#new as HTML
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/sessions" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "email"=>"user@example.com", "password"=>"[FILTERED]", "commit"=>"Log in"}
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:email=>"user@example.com"}).limit(-1)
Redirected to http://www.example.com/articles
Completed 302 Found in 73ms (ActiveRecord: 0.0ms)


Started GET "/articles" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by ArticlesController#index as HTML
MONGODB [DEBUG] Cursor#close 2018215998674822985
MONGODB (0ms) rails3_mongoid_devise_test['articles'].find({:is_published=>true}).limit(5)
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"articles", "query"=>{:is_published=>true}, "fields"=>nil}).limit(-1)
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({:_id=>BSON::ObjectId('50a00cec1d44b6a8b7000001')}).limit(-1)
Completed 200 OK in 9ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started GET "/users" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#index as HTML
MONGODB (0ms) rails3_mongoid_devise_test['users'].find({})
Completed 200 OK in 21ms (Views: 20.9ms | ActiveRecord: 0.0ms)


Started GET "/users/new" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#new as HTML
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/users" for 127.0.0.1 at 2012-11-14 19:24:22 -0300
Processing by UsersController#create as HTML
  Parameters: {"utf8"=>"âœ“", "user"=>{"name"=>"user", "email"=>"", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Create User"}
MONGODB (0ms) rails3_mongoid_devise_test['$cmd'].find({"count"=>"users", "query"=>{:email=>""}, "fields"=>nil}).limit(-1)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.0ms)
